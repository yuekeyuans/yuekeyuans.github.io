{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"IWebCore \u7b80\u4ecb \u00b6 _____ _ _ _ _____ |_ _|| | | | | | / __ \\ | | | | | | ___ | |__ | / \\/ ___ _ __ ___ | | | |/\\| | / _ \\| '_ \\ | | / _ \\ | '__|/ _ \\ _| |_ \\ /\\ /| __/| |_) || \\__/\\| (_) || | | __/ \\___/ \\/ \\/ \\___||_.__/ \\____/ \\___/ |_| \\___| IWebCore \u662f\u57fa\u4e8e c++11 \u7684\u670d\u52a1\u5668\u5f00\u53d1\u6846\u67b6\uff0c\u5b83\u4f7f\u7528\u6237\u66f4\u52a0\u4e13\u6ce8\u4e8e\u5f00\u53d1\u672c\u8eab\uff0c\u964d\u4f4e\u5f00\u53d1\u96be\u5ea6\uff0c\u63d0\u9ad8\u5f00\u53d1\u6548\u7387\u3002 \u57fa\u4e8e Qt \u53cd\u5c04\u6280\u672f\uff0c IWebCore \u63d0\u4f9b\u4e86 controller \u81ea\u52a8\u6ce8\u518c\uff0c\u7c7b\u5bf9\u8c61\u7684\u5e8f\u5217\u5316\u548c\u53cd\u5e8f\u5217\u5316\uff0c\u6570\u636e\u5e93\u81ea\u52a8\u6ce8\u518c\u548c\u9ed8\u8ba4\u64cd\u4f5c\u7b49\u4e00\u4e00\u7cfb\u5217\u65b9\u4fbf\u4f60\u6709\u7528\u7684\u6280\u672f\u652f\u6301\u3002 \u5730\u5740 \u00b6 github\u5730\u5740 yuekeyuans/IWebCore (github.com) \u6587\u6863\u5730\u5740\uff1a IWebCore\u6587\u6863 \u4f18\u70b9 \u00b6 c++11 / Qt \u5e73\u53f0\u652f\u6301\u3002 \u00b6 \u5927\u91cf\u7684c++11\u5e93\u548c Qt \u5e93\u652f\u6301 \u6210\u719f\u7684\u7f16\u7a0b\u8bed\u8a00 \u76ee\u524d\u4e3b\u6d41\u7684c++\u5f00\u53d1\u662f\u57fa\u4e8ec++11\uff0c \u800cQt\u5f00\u53d1\u4e5f\u662f c++ \u5f00\u53d1\u7684\u4e3b\u6d41\u4e4b\u4e00\u3002 \u8de8\u5e73\u53f0\u5f00\u53d1\u548c\u8fd0\u884c \u8f6f\u4ef6\u76ee\u524d\u652f\u6301\u5728\u6240\u6709Qt\u80fd\u591f\u8fd0\u884c\u7684\u73af\u5883\u4e0a\u7f16\u8bd1\u5f00\u53d1\uff0c\u5b9e\u73b0\u8f6f\u4ef6\u7684\u8de8\u5e73\u53f0\u652f\u6301\u3002\u6240\u4ee5\u5f00\u53d1\u8005\u53ef\u4ee5\u5728windows \u4e0a\u9762\u8fdb\u884c\u5feb\u901f\u5f00\u53d1\u7f16\u8bd1\uff0c\u800c\u5728\u5b8c\u6210\u5f00\u53d1\u4e4b\u540e\u90e8\u7f72\u5230linux\u4e3b\u673a\u4e0a\u9762\u518d\u6b21\u7f16\u8bd1\u5e76\u8fd0\u884c\u3002 \u9ad8\u6548 \u00b6 \u964d\u4f4e \u5185\u5b58\uff0c cpu \u7b49\u8d44\u6e90\u7684\u6d88\u8017 c++ \u62e5\u6709\u5f88\u9ad8\u7684\u8fd0\u884c\u6548\u7387\uff0c\u5bf9\u6bd4\u4e0e\u5176\u4ed6\u7684\u4e3b\u6d41\u7f51\u7edc\u6846\u67b6\uff0c\u5b83\u80fd\u591f\u8282\u7701\u66f4\u591a\u5185\u5b58\u7684\u4f7f\u7528\uff0ccpu\u4f7f\u7528\uff0c\u8fdb\u800c\u5e26\u52a8\u670d\u52a1\u5668\u6570\u91cf\u7684\u51cf\u5c11\u548c\u80fd\u6e90\u6d88\u8017\u7684\u51cf\u5c11\uff0c\u964d\u4f4e\u78b3\u6392\u653e\u3002(\u53c2\u89c1\u6587\u7ae0: Why C++ ? \u738b\u8005\u5f52\u6765 | \u9177 \u58f3 - CoolShell ) \u8f6f\u4ef6\u8fd0\u884c\u901f\u5ea6\u5feb\u3002 \u79d2\u901f\u542f\u52a8\u8fd0\u884c\u3002 \u5feb\u901f\u5f00\u53d1\u3002 \u00b6 \u6613\u4e8e\u4e0a\u624b c++ \u5f00\u53d1\u5f88\u591a\u4eba\u89c9\u5f97\u56f0\u96be\u662f\u56e0\u4e3ac++\u672c\u8eab\u5e26\u6765\u7684\u590d\u6742\u6027\u3002 IWebCore \u5bf9\u4e8e\u65b0\u624b\u975e\u5e38\u53cb\u597d\uff0c\u5f00\u53d1\u4eba\u5458\u521d\u671f\u5e76\u4e0d\u9700\u8981\u4e86\u89e3C++\u590d\u6742\u7684\u7279\u6027\u4e5f\u53ef\u4ee5 \u4f7f\u7528controller\uff0c\u5e76\u8fdb\u884c\u6570\u636e\u5e93\u7684\u589e\u5220\u6539\u67e5\u7b49\u64cd\u4f5c\u3002 \u7c7b\u4f3cSpring\u548c FastApi \u7b49\u4e3b\u6d41web\u5f00\u53d1\u6846\u67b6 \u964d\u4f4e\u4e86\u5f00\u53d1\u8005\u7684\u5b66\u4e60\u96be\u5ea6\uff0c\u4f7f\u7528\u4e86 \u5b8f\u6ce8\u89e3 \u5982 $Controller \u7b49\u5f00\u53d1\u8005\u719f\u6089\u7684\u65b9\u5f0f\u3002 Controller \u00b6 controller \u81ea\u52a8\u6ce8\u518c url\u7075\u6d3b\u914d\u7f6e\uff0c\u52a8\u6001url \u51fd\u6570\u53c2\u6570\u4ece\u8bf7\u6c42\u4e2d\u52a8\u6001\u89e3\u6790\u548c\u6ce8\u5165\u7ed1\u5b9a \u7075\u6d3b\u7684\u8fd4\u56de\u65b9\u5f0f\uff0c\u53ef\u4ee5\u8fd4\u56de text,json, xml, status\u7b49\u5185\u5bb9\u3002 \u4e25\u683c\u7684\u53c2\u6570\u68c0\u67e5\u3002 \u5f3a\u5927\u7684orm \u652f\u6301 \u00b6 \u5185\u7f6e database\uff0ctable\uff0cview\uff0c model\u652f\u6301 table sql \u81ea\u52a8\u751f\u6210 json \u539f\u751f\u652f\u6301 \u5185\u7f6e\u5404\u79cdUtil\u8f6c\u6362\uff0c\u53ef\u4ee5\u5c06 bean \u6216 bean \u7684\u96c6\u5408\u8f6c\u6362\u6210 json/string \u7c7b\u578b\u3002 \u5185\u7f6e http server \u00b6 \u652f\u6301 GET \uff0c POST \uff0c PUT \uff0c HEAD , DELETE , PATCH , OPTION \u7b49\u65b9\u6cd5\u3002 HttpMime, HttpStatus\u652f\u6301\u3002 TODO: \u5728\u5c06\u6765\u7684\u7248\u672c\u4e2d\u4f18\u5316tcp\u8bf7\u6c42\u6a21\u578b\uff0c\u4f7f\u7528 epoll \u548c IOCP \u7b49\u65b9\u5f0f\u3002 \u65b9\u4fbf\u7684\u914d\u7f6e\u65b9\u5f0f\u3002 \u00b6 \u652f\u6301 System\u548c Application\u4e24\u79cd\u7ea7\u522b\u7684\u914d\u7f6e \u63d0\u4f9b\u5305\u62ec \u4ee3\u7801\uff0c json , yaml , \u5b8f\u6ce8\u89e3 \u7b49\u591a\u79cd\u914d\u7f6e\u65b9\u5f0f \u8fd0\u884c\u671f\u9519\u8bef\u68c0\u67e5\u3002 \u00b6 \u53cb\u597d\u7684\u8fd0\u884c\u524d\u68c0\u67e5\uff0c \u5728\u5b9e\u4f8b\u8fd0\u884c\u4e4b\u524d\uff0c\u4f1a\u5bf9\u8f6f\u4ef6\u7684\u903b\u8f91\u8fdb\u884c\u8be6\u7ec6\u7684\u68c0\u67e5\uff0c\u5728\u6709\u95ee\u9898\u7684\u5730\u65b9\u751f\u6210\u6709\u597d\u7684 warning \u6216\u8005 fatal \u4fe1\u606f \u4ee3\u7801\u6837\u5f0f \u00b6 \u4e0b\u9762\u63d0\u4f9b\u4e00\u4e2a\u6700\u7b80\u5355\u7684\u9879\u76ee\u4ee3\u7801\uff0c\u53ea\u6709\u4e24\u4e2a\u6587\u4ef6 main.cpp \u548c MyFirstController.h 1 2 3 4 5 6 7 8 9 10 // main.cpp #include <IWebCore> int main ( int argc , char * argv []) { IWebApplication app ( argc , argv ); IHttpServer server ; server . listen (); return app . exec (); } 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 // MyFirstController.h #pragma once #include <IWebCore> class MyFirstController : public IControllerInterface < MyFirstController > { Q_GADGET $AsController ( MyFirstController ) public : $GetMapping ( index , / ) QString index () { return \"hello world\" ; } }; \u5f53\u8fd0\u884c\u9879\u76ee\u7684\u65f6\u5019\uff0c\u4e00\u4e2awebserver \u5df2\u7ecf\u521b\u5efa\u5e76\u8fd0\u884c\u5b8c\u6210\u3002 \u6211\u4eec\u53ef\u4ee5\u8bbf\u95ee http://127.0.0.1:8088, \u5e76\u770b\u5230\u6709 hello world \u8fd4\u56de\u3002 \u7b2c\u4e00\u4e2a IWebCore \u5e94\u7528\u5df2\u7ecf\u5f00\u53d1\u51fa\u6765\u4e86\uff0c\u60f3\u4e86\u89e3\u66f4\u591a\uff0c\u53ef\u4ee5\u67e5\u770b \u5b89\u88c5 IWebCore \u7f16\u5199\u4e00\u4e2a\u7f51\u7edc\u670d\u52a1\u5668 \u4f7f\u7528 orm","title":"IWebCore \u7b80\u4ecb"},{"location":"#iwebcore","text":"_____ _ _ _ _____ |_ _|| | | | | | / __ \\ | | | | | | ___ | |__ | / \\/ ___ _ __ ___ | | | |/\\| | / _ \\| '_ \\ | | / _ \\ | '__|/ _ \\ _| |_ \\ /\\ /| __/| |_) || \\__/\\| (_) || | | __/ \\___/ \\/ \\/ \\___||_.__/ \\____/ \\___/ |_| \\___| IWebCore \u662f\u57fa\u4e8e c++11 \u7684\u670d\u52a1\u5668\u5f00\u53d1\u6846\u67b6\uff0c\u5b83\u4f7f\u7528\u6237\u66f4\u52a0\u4e13\u6ce8\u4e8e\u5f00\u53d1\u672c\u8eab\uff0c\u964d\u4f4e\u5f00\u53d1\u96be\u5ea6\uff0c\u63d0\u9ad8\u5f00\u53d1\u6548\u7387\u3002 \u57fa\u4e8e Qt \u53cd\u5c04\u6280\u672f\uff0c IWebCore \u63d0\u4f9b\u4e86 controller \u81ea\u52a8\u6ce8\u518c\uff0c\u7c7b\u5bf9\u8c61\u7684\u5e8f\u5217\u5316\u548c\u53cd\u5e8f\u5217\u5316\uff0c\u6570\u636e\u5e93\u81ea\u52a8\u6ce8\u518c\u548c\u9ed8\u8ba4\u64cd\u4f5c\u7b49\u4e00\u4e00\u7cfb\u5217\u65b9\u4fbf\u4f60\u6709\u7528\u7684\u6280\u672f\u652f\u6301\u3002","title":"IWebCore \u7b80\u4ecb"},{"location":"#_1","text":"github\u5730\u5740 yuekeyuans/IWebCore (github.com) \u6587\u6863\u5730\u5740\uff1a IWebCore\u6587\u6863","title":"\u5730\u5740"},{"location":"#_2","text":"","title":"\u4f18\u70b9"},{"location":"#c11-qt","text":"\u5927\u91cf\u7684c++11\u5e93\u548c Qt \u5e93\u652f\u6301 \u6210\u719f\u7684\u7f16\u7a0b\u8bed\u8a00 \u76ee\u524d\u4e3b\u6d41\u7684c++\u5f00\u53d1\u662f\u57fa\u4e8ec++11\uff0c \u800cQt\u5f00\u53d1\u4e5f\u662f c++ \u5f00\u53d1\u7684\u4e3b\u6d41\u4e4b\u4e00\u3002 \u8de8\u5e73\u53f0\u5f00\u53d1\u548c\u8fd0\u884c \u8f6f\u4ef6\u76ee\u524d\u652f\u6301\u5728\u6240\u6709Qt\u80fd\u591f\u8fd0\u884c\u7684\u73af\u5883\u4e0a\u7f16\u8bd1\u5f00\u53d1\uff0c\u5b9e\u73b0\u8f6f\u4ef6\u7684\u8de8\u5e73\u53f0\u652f\u6301\u3002\u6240\u4ee5\u5f00\u53d1\u8005\u53ef\u4ee5\u5728windows \u4e0a\u9762\u8fdb\u884c\u5feb\u901f\u5f00\u53d1\u7f16\u8bd1\uff0c\u800c\u5728\u5b8c\u6210\u5f00\u53d1\u4e4b\u540e\u90e8\u7f72\u5230linux\u4e3b\u673a\u4e0a\u9762\u518d\u6b21\u7f16\u8bd1\u5e76\u8fd0\u884c\u3002","title":"c++11 / Qt \u5e73\u53f0\u652f\u6301\u3002"},{"location":"#_3","text":"\u964d\u4f4e \u5185\u5b58\uff0c cpu \u7b49\u8d44\u6e90\u7684\u6d88\u8017 c++ \u62e5\u6709\u5f88\u9ad8\u7684\u8fd0\u884c\u6548\u7387\uff0c\u5bf9\u6bd4\u4e0e\u5176\u4ed6\u7684\u4e3b\u6d41\u7f51\u7edc\u6846\u67b6\uff0c\u5b83\u80fd\u591f\u8282\u7701\u66f4\u591a\u5185\u5b58\u7684\u4f7f\u7528\uff0ccpu\u4f7f\u7528\uff0c\u8fdb\u800c\u5e26\u52a8\u670d\u52a1\u5668\u6570\u91cf\u7684\u51cf\u5c11\u548c\u80fd\u6e90\u6d88\u8017\u7684\u51cf\u5c11\uff0c\u964d\u4f4e\u78b3\u6392\u653e\u3002(\u53c2\u89c1\u6587\u7ae0: Why C++ ? \u738b\u8005\u5f52\u6765 | \u9177 \u58f3 - CoolShell ) \u8f6f\u4ef6\u8fd0\u884c\u901f\u5ea6\u5feb\u3002 \u79d2\u901f\u542f\u52a8\u8fd0\u884c\u3002","title":"\u9ad8\u6548"},{"location":"#_4","text":"\u6613\u4e8e\u4e0a\u624b c++ \u5f00\u53d1\u5f88\u591a\u4eba\u89c9\u5f97\u56f0\u96be\u662f\u56e0\u4e3ac++\u672c\u8eab\u5e26\u6765\u7684\u590d\u6742\u6027\u3002 IWebCore \u5bf9\u4e8e\u65b0\u624b\u975e\u5e38\u53cb\u597d\uff0c\u5f00\u53d1\u4eba\u5458\u521d\u671f\u5e76\u4e0d\u9700\u8981\u4e86\u89e3C++\u590d\u6742\u7684\u7279\u6027\u4e5f\u53ef\u4ee5 \u4f7f\u7528controller\uff0c\u5e76\u8fdb\u884c\u6570\u636e\u5e93\u7684\u589e\u5220\u6539\u67e5\u7b49\u64cd\u4f5c\u3002 \u7c7b\u4f3cSpring\u548c FastApi \u7b49\u4e3b\u6d41web\u5f00\u53d1\u6846\u67b6 \u964d\u4f4e\u4e86\u5f00\u53d1\u8005\u7684\u5b66\u4e60\u96be\u5ea6\uff0c\u4f7f\u7528\u4e86 \u5b8f\u6ce8\u89e3 \u5982 $Controller \u7b49\u5f00\u53d1\u8005\u719f\u6089\u7684\u65b9\u5f0f\u3002","title":"\u5feb\u901f\u5f00\u53d1\u3002"},{"location":"#controller","text":"controller \u81ea\u52a8\u6ce8\u518c url\u7075\u6d3b\u914d\u7f6e\uff0c\u52a8\u6001url \u51fd\u6570\u53c2\u6570\u4ece\u8bf7\u6c42\u4e2d\u52a8\u6001\u89e3\u6790\u548c\u6ce8\u5165\u7ed1\u5b9a \u7075\u6d3b\u7684\u8fd4\u56de\u65b9\u5f0f\uff0c\u53ef\u4ee5\u8fd4\u56de text,json, xml, status\u7b49\u5185\u5bb9\u3002 \u4e25\u683c\u7684\u53c2\u6570\u68c0\u67e5\u3002","title":"Controller"},{"location":"#orm","text":"\u5185\u7f6e database\uff0ctable\uff0cview\uff0c model\u652f\u6301 table sql \u81ea\u52a8\u751f\u6210 json \u539f\u751f\u652f\u6301 \u5185\u7f6e\u5404\u79cdUtil\u8f6c\u6362\uff0c\u53ef\u4ee5\u5c06 bean \u6216 bean \u7684\u96c6\u5408\u8f6c\u6362\u6210 json/string \u7c7b\u578b\u3002","title":"\u5f3a\u5927\u7684orm \u652f\u6301"},{"location":"#http-server","text":"\u652f\u6301 GET \uff0c POST \uff0c PUT \uff0c HEAD , DELETE , PATCH , OPTION \u7b49\u65b9\u6cd5\u3002 HttpMime, HttpStatus\u652f\u6301\u3002 TODO: \u5728\u5c06\u6765\u7684\u7248\u672c\u4e2d\u4f18\u5316tcp\u8bf7\u6c42\u6a21\u578b\uff0c\u4f7f\u7528 epoll \u548c IOCP \u7b49\u65b9\u5f0f\u3002","title":"\u5185\u7f6e http server"},{"location":"#_5","text":"\u652f\u6301 System\u548c Application\u4e24\u79cd\u7ea7\u522b\u7684\u914d\u7f6e \u63d0\u4f9b\u5305\u62ec \u4ee3\u7801\uff0c json , yaml , \u5b8f\u6ce8\u89e3 \u7b49\u591a\u79cd\u914d\u7f6e\u65b9\u5f0f","title":"\u65b9\u4fbf\u7684\u914d\u7f6e\u65b9\u5f0f\u3002"},{"location":"#_6","text":"\u53cb\u597d\u7684\u8fd0\u884c\u524d\u68c0\u67e5\uff0c \u5728\u5b9e\u4f8b\u8fd0\u884c\u4e4b\u524d\uff0c\u4f1a\u5bf9\u8f6f\u4ef6\u7684\u903b\u8f91\u8fdb\u884c\u8be6\u7ec6\u7684\u68c0\u67e5\uff0c\u5728\u6709\u95ee\u9898\u7684\u5730\u65b9\u751f\u6210\u6709\u597d\u7684 warning \u6216\u8005 fatal \u4fe1\u606f","title":"\u8fd0\u884c\u671f\u9519\u8bef\u68c0\u67e5\u3002"},{"location":"#_7","text":"\u4e0b\u9762\u63d0\u4f9b\u4e00\u4e2a\u6700\u7b80\u5355\u7684\u9879\u76ee\u4ee3\u7801\uff0c\u53ea\u6709\u4e24\u4e2a\u6587\u4ef6 main.cpp \u548c MyFirstController.h 1 2 3 4 5 6 7 8 9 10 // main.cpp #include <IWebCore> int main ( int argc , char * argv []) { IWebApplication app ( argc , argv ); IHttpServer server ; server . listen (); return app . exec (); } 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 // MyFirstController.h #pragma once #include <IWebCore> class MyFirstController : public IControllerInterface < MyFirstController > { Q_GADGET $AsController ( MyFirstController ) public : $GetMapping ( index , / ) QString index () { return \"hello world\" ; } }; \u5f53\u8fd0\u884c\u9879\u76ee\u7684\u65f6\u5019\uff0c\u4e00\u4e2awebserver \u5df2\u7ecf\u521b\u5efa\u5e76\u8fd0\u884c\u5b8c\u6210\u3002 \u6211\u4eec\u53ef\u4ee5\u8bbf\u95ee http://127.0.0.1:8088, \u5e76\u770b\u5230\u6709 hello world \u8fd4\u56de\u3002 \u7b2c\u4e00\u4e2a IWebCore \u5e94\u7528\u5df2\u7ecf\u5f00\u53d1\u51fa\u6765\u4e86\uff0c\u60f3\u4e86\u89e3\u66f4\u591a\uff0c\u53ef\u4ee5\u67e5\u770b \u5b89\u88c5 IWebCore \u7f16\u5199\u4e00\u4e2a\u7f51\u7edc\u670d\u52a1\u5668 \u4f7f\u7528 orm","title":"\u4ee3\u7801\u6837\u5f0f"},{"location":"index.en/","text":"Description of IWebCore \u00b6 _____ _ _ _ _____ |_ _|| | | | | | / __ \\ | | | | | | ___ | |__ | / \\/ ___ _ __ ___ | | | |/\\| | / _ \\| '_ \\ | | / _ \\ | '__|/ _ \\ _| |_ \\ /\\ /| __/| |_) || \\__/\\| (_) || | | __/ \\___/ \\/ \\/ \\___||_.__/ \\____/ \\___/ |_| \\___| IWebCore \u662f\u57fa\u4e8e c++11 \u7684\u670d\u52a1\u5668\u5f00\u53d1\u6846\u67b6\uff0c\u5b83\u4f7f\u7528\u6237\u66f4\u52a0\u4e13\u6ce8\u4e8e\u5f00\u53d1\u672c\u8eab\uff0c\u964d\u4f4e\u5f00\u53d1\u96be\u5ea6\uff0c\u63d0\u9ad8\u5f00\u53d1\u6548\u7387\u3002 \u57fa\u4e8e Qt \u53cd\u5c04\u6280\u672f\uff0c IWebCore \u63d0\u4f9b\u4e86 controller \u81ea\u52a8\u6ce8\u518c\uff0c\u7c7b\u5bf9\u8c61\u7684\u5e8f\u5217\u5316\u548c\u53cd\u5e8f\u5217\u5316\uff0c\u6570\u636e\u5e93\u81ea\u52a8\u6ce8\u518c\u548c\u9ed8\u8ba4\u64cd\u4f5c\u7b49\u4e00\u4e00\u7cfb\u5217\u65b9\u4fbf\u4f60\u6709\u7528\u7684\u6280\u672f\u652f\u6301\u3002 \u5730\u5740 \u00b6 github\u5730\u5740 yuekeyuans/IWebCore (github.com) \u6587\u6863\u5730\u5740\uff1a IWebCore\u6587\u6863 \u4f18\u70b9 \u00b6 c++11 / Qt \u5e73\u53f0\u652f\u6301\u3002 \u00b6 \u5927\u91cf\u7684c++11\u5e93\u548c Qt \u5e93\u652f\u6301 \u6210\u719f\u7684\u7f16\u7a0b\u8bed\u8a00 \u76ee\u524d\u4e3b\u6d41\u7684c++\u5f00\u53d1\u662f\u57fa\u4e8ec++11\uff0c \u800cQt\u5f00\u53d1\u4e5f\u662f c++ \u5f00\u53d1\u7684\u4e3b\u6d41\u4e4b\u4e00\u3002 \u8de8\u5e73\u53f0\u5f00\u53d1\u548c\u8fd0\u884c \u8f6f\u4ef6\u76ee\u524d\u652f\u6301\u5728\u6240\u6709Qt\u80fd\u591f\u8fd0\u884c\u7684\u73af\u5883\u4e0a\u7f16\u8bd1\u5f00\u53d1\uff0c\u5b9e\u73b0\u8f6f\u4ef6\u7684\u8de8\u5e73\u53f0\u652f\u6301\u3002\u6240\u4ee5\u5f00\u53d1\u8005\u53ef\u4ee5\u5728windows \u4e0a\u9762\u8fdb\u884c\u5feb\u901f\u5f00\u53d1\u7f16\u8bd1\uff0c\u800c\u5728\u5b8c\u6210\u5f00\u53d1\u4e4b\u540e\u90e8\u7f72\u5230linux\u4e3b\u673a\u4e0a\u9762\u518d\u6b21\u7f16\u8bd1\u5e76\u8fd0\u884c\u3002 \u9ad8\u6548 \u00b6 \u964d\u4f4e \u5185\u5b58\uff0c cpu \u7b49\u8d44\u6e90\u7684\u6d88\u8017 c++ \u62e5\u6709\u5f88\u9ad8\u7684\u8fd0\u884c\u6548\u7387\uff0c\u5bf9\u6bd4\u4e0e\u5176\u4ed6\u7684\u4e3b\u6d41\u7f51\u7edc\u6846\u67b6\uff0c\u5b83\u80fd\u591f\u8282\u7701\u66f4\u591a\u5185\u5b58\u7684\u4f7f\u7528\uff0ccpu\u4f7f\u7528\uff0c\u8fdb\u800c\u5e26\u52a8\u670d\u52a1\u5668\u6570\u91cf\u7684\u51cf\u5c11\u548c\u80fd\u6e90\u6d88\u8017\u7684\u51cf\u5c11\uff0c\u964d\u4f4e\u78b3\u6392\u653e\u3002(\u53c2\u89c1\u6587\u7ae0: Why C++ ? \u738b\u8005\u5f52\u6765 | \u9177 \u58f3 - CoolShell ) \u8f6f\u4ef6\u8fd0\u884c\u901f\u5ea6\u5feb\u3002 \u79d2\u901f\u542f\u52a8\u8fd0\u884c\u3002 \u5feb\u901f\u5f00\u53d1\u3002 \u00b6 \u6613\u4e8e\u4e0a\u624b c++ \u5f00\u53d1\u5f88\u591a\u4eba\u89c9\u5f97\u56f0\u96be\u662f\u56e0\u4e3ac++\u672c\u8eab\u5e26\u6765\u7684\u590d\u6742\u6027\u3002 IWebCore \u5bf9\u4e8e\u65b0\u624b\u975e\u5e38\u53cb\u597d\uff0c\u5f00\u53d1\u4eba\u5458\u521d\u671f\u5e76\u4e0d\u9700\u8981\u4e86\u89e3C++\u590d\u6742\u7684\u7279\u6027\u4e5f\u53ef\u4ee5 \u4f7f\u7528controller\uff0c\u5e76\u8fdb\u884c\u6570\u636e\u5e93\u7684\u589e\u5220\u6539\u67e5\u7b49\u64cd\u4f5c\u3002 \u7c7b\u4f3cSpring\u548c FastApi \u7b49\u4e3b\u6d41web\u5f00\u53d1\u6846\u67b6 \u964d\u4f4e\u4e86\u5f00\u53d1\u8005\u7684\u5b66\u4e60\u96be\u5ea6\uff0c\u4f7f\u7528\u4e86 \u5b8f\u6ce8\u89e3 \u5982 $Controller \u7b49\u5f00\u53d1\u8005\u719f\u6089\u7684\u65b9\u5f0f\u3002 Controller \u00b6 controller \u81ea\u52a8\u6ce8\u518c url\u7075\u6d3b\u914d\u7f6e\uff0c\u52a8\u6001url \u51fd\u6570\u53c2\u6570\u4ece\u8bf7\u6c42\u4e2d\u52a8\u6001\u89e3\u6790\u548c\u6ce8\u5165\u7ed1\u5b9a \u7075\u6d3b\u7684\u8fd4\u56de\u65b9\u5f0f\uff0c\u53ef\u4ee5\u8fd4\u56de text,json, xml, status\u7b49\u5185\u5bb9\u3002 \u4e25\u683c\u7684\u53c2\u6570\u68c0\u67e5\u3002 \u5f3a\u5927\u7684orm \u652f\u6301 \u00b6 \u5185\u7f6e database\uff0ctable\uff0cview\uff0c model\u652f\u6301 table sql \u81ea\u52a8\u751f\u6210 json \u539f\u751f\u652f\u6301 \u5185\u7f6e\u5404\u79cdUtil\u8f6c\u6362\uff0c\u53ef\u4ee5\u5c06 bean \u6216 bean \u7684\u96c6\u5408\u8f6c\u6362\u6210 json/string \u7c7b\u578b\u3002 \u5185\u7f6e http server \u00b6 \u652f\u6301 GET \uff0c POST \uff0c PUT \uff0c HEAD , DELETE , PATCH , OPTION \u7b49\u65b9\u6cd5\u3002 HttpMime, HttpStatus\u652f\u6301\u3002 TODO: \u5728\u5c06\u6765\u7684\u7248\u672c\u4e2d\u4f18\u5316tcp\u8bf7\u6c42\u6a21\u578b\uff0c\u4f7f\u7528 epoll \u548c IOCP \u7b49\u65b9\u5f0f\u3002 \u65b9\u4fbf\u7684\u914d\u7f6e\u65b9\u5f0f\u3002 \u00b6 \u652f\u6301 System\u548c Application\u4e24\u79cd\u7ea7\u522b\u7684\u914d\u7f6e \u63d0\u4f9b\u5305\u62ec \u4ee3\u7801\uff0c json , yaml , \u5b8f\u6ce8\u89e3 \u7b49\u591a\u79cd\u914d\u7f6e\u65b9\u5f0f \u8fd0\u884c\u671f\u9519\u8bef\u68c0\u67e5\u3002 \u00b6 \u53cb\u597d\u7684\u8fd0\u884c\u524d\u68c0\u67e5\uff0c \u5728\u5b9e\u4f8b\u8fd0\u884c\u4e4b\u524d\uff0c\u4f1a\u5bf9\u8f6f\u4ef6\u7684\u903b\u8f91\u8fdb\u884c\u8be6\u7ec6\u7684\u68c0\u67e5\uff0c\u5728\u6709\u95ee\u9898\u7684\u5730\u65b9\u751f\u6210\u6709\u597d\u7684 warning \u6216\u8005 fatal \u4fe1\u606f \u4ee3\u7801\u6837\u5f0f \u00b6 \u4e0b\u9762\u63d0\u4f9b\u4e00\u4e2a\u6700\u7b80\u5355\u7684\u9879\u76ee\u4ee3\u7801\uff0c\u53ea\u6709\u4e24\u4e2a\u6587\u4ef6 main.cpp \u548c MyFirstController.h 1 2 3 4 5 6 7 8 9 10 // main.cpp #include <IWebCore> int main ( int argc , char * argv []) { IWebApplication app ( argc , argv ); IHttpServer server ; server . listen (); return app . exec (); } 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 // MyFirstController.h #pragma once #include <IWebCore> class MyFirstController : public IControllerInterface < MyFirstController > { Q_GADGET $AsController ( MyFirstController ) public : $GetMapping ( index , / ) QString index () { return \"hello world\" ; } }; \u5f53\u8fd0\u884c\u9879\u76ee\u7684\u65f6\u5019\uff0c\u4e00\u4e2awebserver \u5df2\u7ecf\u521b\u5efa\u5e76\u8fd0\u884c\u5b8c\u6210\u3002 \u6211\u4eec\u53ef\u4ee5\u8bbf\u95ee http://127.0.0.1:8088, \u5e76\u770b\u5230\u6709 hello world \u8fd4\u56de\u3002 \u7b2c\u4e00\u4e2a IWebCore \u5e94\u7528\u5df2\u7ecf\u5f00\u53d1\u51fa\u6765\u4e86\uff0c\u60f3\u4e86\u89e3\u66f4\u591a\uff0c\u53ef\u4ee5\u67e5\u770b \u5b89\u88c5 IWebCore \u7f16\u5199\u4e00\u4e2a\u7f51\u7edc\u670d\u52a1\u5668 \u4f7f\u7528 orm","title":"Description of IWebCore"},{"location":"index.en/#description-of-iwebcore","text":"_____ _ _ _ _____ |_ _|| | | | | | / __ \\ | | | | | | ___ | |__ | / \\/ ___ _ __ ___ | | | |/\\| | / _ \\| '_ \\ | | / _ \\ | '__|/ _ \\ _| |_ \\ /\\ /| __/| |_) || \\__/\\| (_) || | | __/ \\___/ \\/ \\/ \\___||_.__/ \\____/ \\___/ |_| \\___| IWebCore \u662f\u57fa\u4e8e c++11 \u7684\u670d\u52a1\u5668\u5f00\u53d1\u6846\u67b6\uff0c\u5b83\u4f7f\u7528\u6237\u66f4\u52a0\u4e13\u6ce8\u4e8e\u5f00\u53d1\u672c\u8eab\uff0c\u964d\u4f4e\u5f00\u53d1\u96be\u5ea6\uff0c\u63d0\u9ad8\u5f00\u53d1\u6548\u7387\u3002 \u57fa\u4e8e Qt \u53cd\u5c04\u6280\u672f\uff0c IWebCore \u63d0\u4f9b\u4e86 controller \u81ea\u52a8\u6ce8\u518c\uff0c\u7c7b\u5bf9\u8c61\u7684\u5e8f\u5217\u5316\u548c\u53cd\u5e8f\u5217\u5316\uff0c\u6570\u636e\u5e93\u81ea\u52a8\u6ce8\u518c\u548c\u9ed8\u8ba4\u64cd\u4f5c\u7b49\u4e00\u4e00\u7cfb\u5217\u65b9\u4fbf\u4f60\u6709\u7528\u7684\u6280\u672f\u652f\u6301\u3002","title":"Description of IWebCore"},{"location":"index.en/#_1","text":"github\u5730\u5740 yuekeyuans/IWebCore (github.com) \u6587\u6863\u5730\u5740\uff1a IWebCore\u6587\u6863","title":"\u5730\u5740"},{"location":"index.en/#_2","text":"","title":"\u4f18\u70b9"},{"location":"index.en/#c11-qt","text":"\u5927\u91cf\u7684c++11\u5e93\u548c Qt \u5e93\u652f\u6301 \u6210\u719f\u7684\u7f16\u7a0b\u8bed\u8a00 \u76ee\u524d\u4e3b\u6d41\u7684c++\u5f00\u53d1\u662f\u57fa\u4e8ec++11\uff0c \u800cQt\u5f00\u53d1\u4e5f\u662f c++ \u5f00\u53d1\u7684\u4e3b\u6d41\u4e4b\u4e00\u3002 \u8de8\u5e73\u53f0\u5f00\u53d1\u548c\u8fd0\u884c \u8f6f\u4ef6\u76ee\u524d\u652f\u6301\u5728\u6240\u6709Qt\u80fd\u591f\u8fd0\u884c\u7684\u73af\u5883\u4e0a\u7f16\u8bd1\u5f00\u53d1\uff0c\u5b9e\u73b0\u8f6f\u4ef6\u7684\u8de8\u5e73\u53f0\u652f\u6301\u3002\u6240\u4ee5\u5f00\u53d1\u8005\u53ef\u4ee5\u5728windows \u4e0a\u9762\u8fdb\u884c\u5feb\u901f\u5f00\u53d1\u7f16\u8bd1\uff0c\u800c\u5728\u5b8c\u6210\u5f00\u53d1\u4e4b\u540e\u90e8\u7f72\u5230linux\u4e3b\u673a\u4e0a\u9762\u518d\u6b21\u7f16\u8bd1\u5e76\u8fd0\u884c\u3002","title":"c++11 / Qt \u5e73\u53f0\u652f\u6301\u3002"},{"location":"index.en/#_3","text":"\u964d\u4f4e \u5185\u5b58\uff0c cpu \u7b49\u8d44\u6e90\u7684\u6d88\u8017 c++ \u62e5\u6709\u5f88\u9ad8\u7684\u8fd0\u884c\u6548\u7387\uff0c\u5bf9\u6bd4\u4e0e\u5176\u4ed6\u7684\u4e3b\u6d41\u7f51\u7edc\u6846\u67b6\uff0c\u5b83\u80fd\u591f\u8282\u7701\u66f4\u591a\u5185\u5b58\u7684\u4f7f\u7528\uff0ccpu\u4f7f\u7528\uff0c\u8fdb\u800c\u5e26\u52a8\u670d\u52a1\u5668\u6570\u91cf\u7684\u51cf\u5c11\u548c\u80fd\u6e90\u6d88\u8017\u7684\u51cf\u5c11\uff0c\u964d\u4f4e\u78b3\u6392\u653e\u3002(\u53c2\u89c1\u6587\u7ae0: Why C++ ? \u738b\u8005\u5f52\u6765 | \u9177 \u58f3 - CoolShell ) \u8f6f\u4ef6\u8fd0\u884c\u901f\u5ea6\u5feb\u3002 \u79d2\u901f\u542f\u52a8\u8fd0\u884c\u3002","title":"\u9ad8\u6548"},{"location":"index.en/#_4","text":"\u6613\u4e8e\u4e0a\u624b c++ \u5f00\u53d1\u5f88\u591a\u4eba\u89c9\u5f97\u56f0\u96be\u662f\u56e0\u4e3ac++\u672c\u8eab\u5e26\u6765\u7684\u590d\u6742\u6027\u3002 IWebCore \u5bf9\u4e8e\u65b0\u624b\u975e\u5e38\u53cb\u597d\uff0c\u5f00\u53d1\u4eba\u5458\u521d\u671f\u5e76\u4e0d\u9700\u8981\u4e86\u89e3C++\u590d\u6742\u7684\u7279\u6027\u4e5f\u53ef\u4ee5 \u4f7f\u7528controller\uff0c\u5e76\u8fdb\u884c\u6570\u636e\u5e93\u7684\u589e\u5220\u6539\u67e5\u7b49\u64cd\u4f5c\u3002 \u7c7b\u4f3cSpring\u548c FastApi \u7b49\u4e3b\u6d41web\u5f00\u53d1\u6846\u67b6 \u964d\u4f4e\u4e86\u5f00\u53d1\u8005\u7684\u5b66\u4e60\u96be\u5ea6\uff0c\u4f7f\u7528\u4e86 \u5b8f\u6ce8\u89e3 \u5982 $Controller \u7b49\u5f00\u53d1\u8005\u719f\u6089\u7684\u65b9\u5f0f\u3002","title":"\u5feb\u901f\u5f00\u53d1\u3002"},{"location":"index.en/#controller","text":"controller \u81ea\u52a8\u6ce8\u518c url\u7075\u6d3b\u914d\u7f6e\uff0c\u52a8\u6001url \u51fd\u6570\u53c2\u6570\u4ece\u8bf7\u6c42\u4e2d\u52a8\u6001\u89e3\u6790\u548c\u6ce8\u5165\u7ed1\u5b9a \u7075\u6d3b\u7684\u8fd4\u56de\u65b9\u5f0f\uff0c\u53ef\u4ee5\u8fd4\u56de text,json, xml, status\u7b49\u5185\u5bb9\u3002 \u4e25\u683c\u7684\u53c2\u6570\u68c0\u67e5\u3002","title":"Controller"},{"location":"index.en/#orm","text":"\u5185\u7f6e database\uff0ctable\uff0cview\uff0c model\u652f\u6301 table sql \u81ea\u52a8\u751f\u6210 json \u539f\u751f\u652f\u6301 \u5185\u7f6e\u5404\u79cdUtil\u8f6c\u6362\uff0c\u53ef\u4ee5\u5c06 bean \u6216 bean \u7684\u96c6\u5408\u8f6c\u6362\u6210 json/string \u7c7b\u578b\u3002","title":"\u5f3a\u5927\u7684orm \u652f\u6301"},{"location":"index.en/#http-server","text":"\u652f\u6301 GET \uff0c POST \uff0c PUT \uff0c HEAD , DELETE , PATCH , OPTION \u7b49\u65b9\u6cd5\u3002 HttpMime, HttpStatus\u652f\u6301\u3002 TODO: \u5728\u5c06\u6765\u7684\u7248\u672c\u4e2d\u4f18\u5316tcp\u8bf7\u6c42\u6a21\u578b\uff0c\u4f7f\u7528 epoll \u548c IOCP \u7b49\u65b9\u5f0f\u3002","title":"\u5185\u7f6e http server"},{"location":"index.en/#_5","text":"\u652f\u6301 System\u548c Application\u4e24\u79cd\u7ea7\u522b\u7684\u914d\u7f6e \u63d0\u4f9b\u5305\u62ec \u4ee3\u7801\uff0c json , yaml , \u5b8f\u6ce8\u89e3 \u7b49\u591a\u79cd\u914d\u7f6e\u65b9\u5f0f","title":"\u65b9\u4fbf\u7684\u914d\u7f6e\u65b9\u5f0f\u3002"},{"location":"index.en/#_6","text":"\u53cb\u597d\u7684\u8fd0\u884c\u524d\u68c0\u67e5\uff0c \u5728\u5b9e\u4f8b\u8fd0\u884c\u4e4b\u524d\uff0c\u4f1a\u5bf9\u8f6f\u4ef6\u7684\u903b\u8f91\u8fdb\u884c\u8be6\u7ec6\u7684\u68c0\u67e5\uff0c\u5728\u6709\u95ee\u9898\u7684\u5730\u65b9\u751f\u6210\u6709\u597d\u7684 warning \u6216\u8005 fatal \u4fe1\u606f","title":"\u8fd0\u884c\u671f\u9519\u8bef\u68c0\u67e5\u3002"},{"location":"index.en/#_7","text":"\u4e0b\u9762\u63d0\u4f9b\u4e00\u4e2a\u6700\u7b80\u5355\u7684\u9879\u76ee\u4ee3\u7801\uff0c\u53ea\u6709\u4e24\u4e2a\u6587\u4ef6 main.cpp \u548c MyFirstController.h 1 2 3 4 5 6 7 8 9 10 // main.cpp #include <IWebCore> int main ( int argc , char * argv []) { IWebApplication app ( argc , argv ); IHttpServer server ; server . listen (); return app . exec (); } 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 // MyFirstController.h #pragma once #include <IWebCore> class MyFirstController : public IControllerInterface < MyFirstController > { Q_GADGET $AsController ( MyFirstController ) public : $GetMapping ( index , / ) QString index () { return \"hello world\" ; } }; \u5f53\u8fd0\u884c\u9879\u76ee\u7684\u65f6\u5019\uff0c\u4e00\u4e2awebserver \u5df2\u7ecf\u521b\u5efa\u5e76\u8fd0\u884c\u5b8c\u6210\u3002 \u6211\u4eec\u53ef\u4ee5\u8bbf\u95ee http://127.0.0.1:8088, \u5e76\u770b\u5230\u6709 hello world \u8fd4\u56de\u3002 \u7b2c\u4e00\u4e2a IWebCore \u5e94\u7528\u5df2\u7ecf\u5f00\u53d1\u51fa\u6765\u4e86\uff0c\u60f3\u4e86\u89e3\u66f4\u591a\uff0c\u53ef\u4ee5\u67e5\u770b \u5b89\u88c5 IWebCore \u7f16\u5199\u4e00\u4e2a\u7f51\u7edc\u670d\u52a1\u5668 \u4f7f\u7528 orm","title":"\u4ee3\u7801\u6837\u5f0f"},{"location":"test/","text":"test \u00b6 This is a test file.","title":"test"},{"location":"test/#test","text":"This is a test file.","title":"test"},{"location":"biscuit/http_status_code/","text":"Http \u72b6\u6001\u7801 \u00b6","title":"Http \u72b6\u6001\u7801"},{"location":"biscuit/http_status_code/#http","text":"","title":"Http \u72b6\u6001\u7801"},{"location":"controller/controller_parameter/","text":"\u51fd\u6570\u53c2\u6570\u7c7b\u578b \u00b6","title":"\u51fd\u6570\u53c2\u6570\u7c7b\u578b"},{"location":"controller/controller_parameter/#_1","text":"","title":"\u51fd\u6570\u53c2\u6570\u7c7b\u578b"},{"location":"controller/controller_request_params/","text":"\u51fd\u6570\u53c2\u6570 \u00b6","title":"\u51fd\u6570\u53c2\u6570"},{"location":"controller/controller_request_params/#_1","text":"","title":"\u51fd\u6570\u53c2\u6570"},{"location":"controller/controller_return_value/","text":"\u51fd\u6570\u8fd4\u56de\u7c7b\u578b \u00b6","title":"\u51fd\u6570\u8fd4\u56de\u7c7b\u578b"},{"location":"controller/controller_return_value/#_1","text":"","title":"\u51fd\u6570\u8fd4\u56de\u7c7b\u578b"},{"location":"controller/define_controller/","text":"\u5b9a\u4e49\u63a7\u5236\u5668 \u00b6 Spring \u7684\u6848\u4f8b \u00b6 \u5728 web \u5f00\u53d1\u7684\u8fc7\u7a0b\u4e2d\uff0c\u6700\u91cd\u8981\u7684\u5de5\u4f5c\u4e4b\u4e00\u5c31\u662f\u5c06\u4e00\u4e2a\u8bf7\u6c42\u6620\u5c04\u5230\u4e00\u4e2a\u76f8\u5173\u7684\u5904\u7406\u51fd\u6570\u5f53\u4e2d\uff0c\u4f7f\u7528\u8be5\u51fd\u6570\u5904\u7406http \u8bf7\u6c42\uff0c\u5e76\u8fd4\u56de\u76f8\u5e94\u7684\u5185\u5bb9\uff0c\u6211\u4eec\u4e00\u822c\u628a\u5c01\u88c5\u5904\u7406\u51fd\u6570\u7684\u7c7b\u53eb\u505a\u63a7\u5236\u5668\uff0c\u610f\u601d\u5c31\u662f\u63a7\u5236\u76f8\u5e94\u7684\u8fd0\u884c\u3002 \u5728java\u6216\u8005python \u8bed\u8a00\u4e2d\u53ef\u4ee5\u4f7f\u7528\u5f88\u7b80\u6d01\u7684\u8bed\u8a00\u5c31\u53ef\u4ee5\u5b8c\u6210\u8fd9\u6837\u7684\u5de5\u4f5c\uff0c\u5e76\u4e14\u6587\u4ef6\u4e2d\u95f4\u6ca1\u6709\u8026\u5408\uff0c\u964d\u4f4e\u6587\u4ef6\u7684\u76f8\u5173\u6027\uff0c\u51cf\u4f4e\u5f00\u53d1\u7684\u5de5\u4f5c\u91cf\u3002\u4e0b\u9762\u662fspring\u5b98\u65b9\u63d0\u4f9b\u7684\u4ee3\u7801\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 package com.example.demo ; import org.springframework.boot.SpringApplication ; import org.springframework.boot.autoconfigure.SpringBootApplication ; import org.springframework.web.bind.annotation.GetMapping ; import org.springframework.web.bind.annotation.RequestParam ; import org.springframework.web.bind.annotation.RestController ; @SpringBootApplication @RestController public class DemoApplication { public static void main ( String [] args ) { SpringApplication . run ( DemoApplication . class , args ); } @GetMapping ( \"/hello\" ) public String hello ( @RequestParam ( value = \"name\" , defaultValue = \"World\" ) String name ) { return String . format ( \"Hello %s!\" , name ); } } \u6211\u4eec\u53ef\u4ee5\u770b\u5230\u572817-20\u884c\uff0c\u7b80\u7b80\u5355\u5355\u76844\u884c\u4ee3\u7801\u5b9a\u4e49\u4e00\u4e2a \u5904\u7406 /hello url\u5730\u5740 \u7684\u51fd\u6570 hello \u5b83\u4f20\u5165\u4e00\u4e2a request \u884c\u7684\u53c2\u6570 param,\u5e76\u8fd4\u56de\u76f8\u5e94\u7684\u5b57\u7b26\u4e32\u3002 \u201c$\u201d \u7b26\u53f7 \u4e0e \u5b8f\u6ce8\u89e3 \u00b6 spring \u7684 url-\u51fd\u6570\u6620\u5c04 \u5982\u6b64\u7b80\u5355\u6e05\u6670,\u4ee5\u81f3\u4e8e\u540e\u6765\u8005\u4e00\u76f4\u5728\u6a21\u4eff\u3002\u6211\u5728\u601d\u8003\u65f6\u4e5f\u662f\u5982\u6b64\u3002\u53ef\u60dc\u7684\u662f\u5728 c++ \u5f53\u4e2d\u5e76\u4e0d\u652f\u6301\u6ce8\u89e3\uff0c\u4e0d\u652f\u6301 @ \u7b26\u53f7\uff0c\u4e5f\u4e0d\u652f\u6301\u53cd\u5c04\u3002 \u4f46\u662f\u6211\u5728\u5b9e\u9645\u64cd\u4f5c\u7684\u65f6\u5019\uff0c\u53d1\u73b0 c++ \u5bf9\u4e8e $ \u8fd9\u4e2a\u7b26\u53f7\u5e76\u6ca1\u6709\u7279\u6b8a\u7684\u9650\u5236\u3002\u4e8e\u662f\u6211\u60f3\u4f7f\u7528 $ \u8fd9\u4e2a\u7b26\u53f7\u505a\u4e00\u4e2a\u7c7b\u4f3c @GetMapping \u8fd9\u6837\u6e05\u6670\u7684\u6807\u8bb0\uff0c\u4e8e\u662f\u5c31\u6709\u4e86 $GetMapping \u8fd9\u6837\u7684\u6807\u8bb0\uff0c\u8fd9\u6837\u5199\u5728 c++ \u5f53\u4e2d\u53ef\u4ee5\u5f88\u6e05\u695a\u7684\u628a\u8fd9\u4e9b\u7279\u6b8a\u6807\u8bb0\u7b26\u548c\u529f\u80fd\u4ee3\u7801\u5206\u5f00\u3002 $GetMapping \u5185\u90e8\u5b9e\u73b0\u662f\u57fa\u4e8e \u5b8f \u5b9e\u73b0\u7684\uff08\u540e\u9762\u4f1a\u7ec6\u8bb2\uff09\uff0c\u90a3\u6211\u7b80\u5355\u7684\u628a\u8fd9\u79cd\u7531\u5b8f\u5b9a\u4e49\u7684\u6ce8\u89e3\u79f0\u4e4b\u4e3a \u5b8f\u6ce8\u89e3 \u5177\u4f53\u5185\u5bb9\u8bf7\u67e5\u770b \u5b8f\u6ce8\u89e3 \u3002 \u5728\u4e2d\u6587 c++ \u5708\u5b50\u4e2d\u6709\u4e00\u53e5\u8bdd\uff0c \u6a21\u677f\u52a0\u5b8f\uff0c\u6cd5\u529b\u65e0\u7a77 \uff0c\u53ef\u89c1\u5b8f\u5728c++\u4e2d\u7684\u5730\u4f4d\u3002\u5f53\u7136\u4ec5\u4ec5\u6709\u5b8f\u662f\u4e0d\u591f\u7684\uff0c\u8fd8\u5f97\u9700\u8981\u53e6\u5916\u4e24\u6837\u4e1c\u897f\uff0c \u53cd\u5c04 \u548c SIR \uff08\u9759\u6001\u521d\u59cb\u5316\u6ce8\u5165\uff09\u3002\u8fd9\u4e24\u4e2a\u5185\u5bb9\u548c\u672c\u7ae0\u8282\u7684\u5173\u7cfb\u4e0d\u662f\u592a\u5bc6\u5207\uff0c\u53ef\u4ee5\u67e5\u770b\u5982\u4e0b\u5185\u5bb9 Qt \u53cd\u5c04\u4e0e Q_GADGET \u9759\u6001\u521d\u59cb\u5316\u6ce8\u518c \u5b9a\u4e49 Controller \u00b6 \u5728\u4e0a\u9762\u7684\u51c6\u5907\u4e4b\u540e\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u5199\u51fa\u7c7b\u4f3c\u4e8e Spring \u8fd9\u6837\u57fa\u4e8e\u6ce8\u89e3\u7684\u4ee3\u7801\u3002 \u5728 \u7f16\u5199\u4e00\u4e2a\u7f51\u7edc\u670d\u52a1\u5668 \u5f53\u4e2d\u5df2\u7ecf\u7ed9\u51fa\u4e86\u4e00\u4efd\u4ee3\u7801\uff0c\u5176\u4e2d\u7684controller \u4ee3\u7801\uff0c\u91cd\u65b0\u590d\u5236\u5728\u4e0b\u9762\u4ee5\u4f5c\u8be6\u7ec6\u7684\u8bb2\u89e3\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 // MyController.h #pragma once #include <IWebCore> class MyController : public IControllerInterface < MyController > { Q_GADGET $AsController ( MyController ) public : MyController () = default ; $GetMapping ( index , / ) QString index (); }; // MyController.cpp #include \"MyController.h\" QString MyController::index () { return \"hello world\" ; } \u4e3a\u4e86\u65b9\u4fbf\u8d77\u89c1\uff0c\u6211\u628a\u58f0\u660e\u548c\u5b9e\u73b0\u7684\u4ee3\u7801\u653e\u7f6e\u5728\u4e00\u8d77\uff0c\u5b9e\u9645\u4e0a\u4ed6\u4eec\u662f\u5206\u5f00\u7684\u3002 \u5934\u6587\u4ef6\u5305\u542b \u00b6 \u5728\u4ee3\u7801\u7b2c\u4e8c\u884c\u662f\u9632\u6b62\u5934\u6587\u4ef6\u88ab\u591a\u6b21\u5305\u542b\uff0c #pragma once \u8fd9\u4e2a\u662f msvc\u5f0f\u7684\u58f0\u660e\uff0c\u4e0e\u4e4b\u76f8\u5bf9\u7684\u8fd8\u6709gcc\u5f0f\u7684\u58f0\u660e\uff1a #ifndef __MYCONTROLLER_H__ #define __MYCONTROLLER_H__ ... ... // \u58f0\u660e\u3001\u5b9a\u4e49\u8bed\u53e5 #endif \u4e24\u8005\u6ca1\u6709\u660e\u663e\u7684\u533a\u522b\uff0c\u4f46\u662f\u5982\u679c\u5b9a\u4e49\u4e86\u540c\u540d\u7c7b\uff0c\u7b2c\u4e8c\u79cd\u65b9\u5f0f\u6709\u53ef\u80fd\u6f0f\u6389\u5305\u542b\u3002\u800c\u4e14 \u7531\u4e8e\u6211\u4eec\u4f7f\u7528\u7684c++\u7248\u672c\u6bd4\u8f83\u9ad8\u7ea7\uff0c\u6240\u4ee5\u7b2c\u4e00\u79cd\u5728\u7f16\u8bd1\u5668\u652f\u6301\u4e0a\u662f\u6ca1\u6709\u95ee\u9898\u7684\u3002 IWebCore \u5934\u6587\u4ef6 \u00b6 \u5728\u4ee3\u7801\u7b2c4\u884c\uff0c\u53d1\u73b0\u6211\u4eec\u53ea\u5305\u542b\u4e86\u4e00\u4e2a\u5934\u6587\u4ef6, IWebCore \u8fd9\u4e2a\u6587\u4ef6\u5b9a\u4e49\u5728 src \u6587\u4ef6\u5939\u5f53\u4e2d: \u5185\u5bb9\u5982\u4e0b\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 #pragma once #include \"assertion/assertion\" #include \"base/base\" #include \"bean/bean\" #include \"log/log\" #include \"configuration/configuration\" #include \"controller/controller\" #include \"common/common\" #include \"server/IHttpServer.h\" #include \"process/process\" #include \"orm/orm\" #include \"test/test\" $PackageWebCoreUsing IWebCore \u5305\u542b\u4e86\u6240\u6709\u6709\u5fc5\u8981\u5bfc\u51fa\u7684\u5934\u6587\u4ef6\uff0c\u5305\u542b\u8fd9\u4e00\u4e2a\u5934\u6587\u4ef6\u4e4b\u540e\uff0c\u53ef\u4ee5\u4e0d\u7528\u5305\u542b\u5176\u4ed6\u6587\u4ef6\uff0c\u5f53\u7136\uff0c\u5982\u679c\u5f00\u53d1\u8005\u89c9\u5f97\u5305\u542b\u7684\u5934\u6587\u4ef6\u8fc7\u591a\uff0c\u7f16\u8bd1\u8d77\u6765\u6709\u70b9\u56f0\u96be\uff0c\u4e5f\u53ef\u4ee5\u628a\u8fd9\u4e2a\u5934\u6587\u4ef6\u8bbe\u7f6e\u6210 \u9884\u7f16\u8bd1\u5934\u6587\u4ef6: PRECOMPILED_HEADER = IWebCore \u5f53\u7136\u4f60\u4e5f\u53ef\u4ee5\u4e0d\u4f7f\u7528\u8fd9\u4e2a\u5934\u6587\u4ef6\u3002\u5982\u679c\u4f60\u719f\u6089\u4ee3\u7801\uff0c\u4e5f\u53ef\u4ee5\u5305\u542b\u72ec\u7acb\u7684\u5934\u6587\u4ef6,\u6210\u4e3a\u4ee5\u4e0b\u7684\u683c\u5f0f\uff1a 1 2 3 4 5 6 #include <controller/IControllerManage.h> #include <controller/IControllerInterface.h> #include <controller/pp/IControllerPreProcessor.h> #include <controller/pp/IGetMappingPreProcessor.h> #include <configuration/IConfigurationManage.h> using namespace IWebCore ; \u7279\u522b\u8981\u63d0\u5230\u7684\u4e00\u70b9\u5c31\u662f IWebCore \u5b9a\u4e49\u7b2c15\u884c $PackageWebCoreUsing \u8fd9\u662f\u4e00\u4e2a\u5b8f\u3002 \u5c55\u5f00\u540e\u5c31\u662f\u4e0a\u9762\u4ee3\u7801\u7684\u7b2c6\u884c using namespace IWebCore ; \u5b9e\u9645\u4e0a\u6574\u4e2a IWebCore\u4ee3\u7801 \u90fd\u662f \u5728 IWebCore \u540d\u79f0\u7a7a\u95f4\u4e0b\u9762\u7684\u3002\u6240\u4ee5\uff0c\u5982\u679c\u5f53\u4f60\u5b9a\u4e49\u7684\u7c7b\u6216\u8005\u51fd\u6570\u4e0eIWebCore \u7684\u6709\u51b2\u7a81\uff0c\u53ef\u4ee5\u4e3a\u76f8\u5e94\u7684\u540d\u79f0\u52a0\u4e0a \u540d\u5b57\u7a7a\u95f4 IWebCore IControllerInterface \u00b6 \u5728\u4ee3\u7801\u7b2c6\u884c\uff0c\u6211\u4eec\u58f0\u660e\u4e86\u4e00\u4e2a\u7c7b\u540d\u79f0 MyController , \u5e76\u4e14\u4ee5 public \u7684\u5f62\u5f0f\u7ee7\u627f IControllerInterface \u6a21\u677f\u57fa\u7c7b\uff0c \u6a21\u677f\u53c2\u6570\u5c31\u662f\u6211\u4eec\u5b9a\u4e49\u7684controller \u540d\u79f0\u3002 \u5b9a\u4e49 \u00b6 \u6a21\u677f\u57fa\u7c7b\u5bf9\u4e8e\u65b0\u624b\u6709\u70b9\u7ed5\uff0c\u4e0d\u660e\u767d\u76f4\u63a5\u7528\u4e5f\u6ca1\u6709\u95ee\u9898\u3002 IControllerInterface\u7684\u5b9a\u4e49\u5982\u4e0b: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 template < typename T , bool enabled = true > class IControllerInterface : public IControllerTaskUnit < T , enabled > { public : IControllerInterface () = default ; virtual ~ IControllerInterface () = default ; virtual void task () final ; protected : virtual void registerControllerFun ( void * handler , const QMap < QString , QString > & clsInfo , const QVector < QMetaMethod > & methods ) = 0 ; }; template < typename T , bool enabled > void IControllerInterface < T , enabled >:: task (){ auto inst = T :: instance (); auto clsInfo = IMetaUtil :: getMetaClassInfoMap ( T :: staticMetaObject ); auto methods = IMetaUtil :: getMetaMethods ( T :: staticMetaObject ); registerControllerFun ( inst , clsInfo , methods ); } \u8fd9\u4e2a\u4e1c\u897f\u7b80\u5355\u6765\u8bf4\u5c31\u662f\u5c06 controller \u7c7b T \u901a\u8fc7 task \u51fd\u6570\u6ce8\u518c\u5230\u4e00\u4e2a\u5730\u65b9\uff0cIControllerManage \u8fd9\u6837\u7684\u4e00\u4e2a\u6c60\u5b50\u91cc,\u7b49\u5f85\u8bf7\u6c42\u6765\u4e34\u65f6\u53ef\u4ee5\u67e5\u627e IControllerManage \u6c60\u5b50\u91cc\u9762\u5339\u914d\u76f8\u5e94url\u7684\u51fd\u6570\uff0c\u518d\u8c03\u7528\u8fd9\u4e2a\u51fd\u6570\u3002\u5177\u4f53\u5982\u4f55\u6ce8\u518c\uff0c\u53ef\u4ee5\u67e5\u770b \u9759\u6001\u521d\u59cb\u5316\u6ce8\u518c \u4ee5\u53ca Task \u505c\u7528\u6a21\u677f \u00b6 \u8fd8\u6709\u4e00\u70b9\u9700\u8981\u6ce8\u610f\u7684\u662f\uff1a IControllerInterface \u57fa\u7c7b\u6709\u4e24\u4e2a\u6a21\u677f\u53c2\u6570\uff1a template < typename T , bool enabled = true > class IControllerInterface : public IControllerTaskUnit < T , enabled > \u7b2c\u4e00\u4e2a typename T \u662f\u8981\u6ce8\u518c\u7684 controller \u7c7b\uff0c \u800c\u7b2c\u4e8c\u4e2a bool enabled = true \u8fd9\u4e2abool \u7c7b\u578b\u7684\u9ed8\u8ba4\u6a21\u677f\u53c2\u6570\u7684\u4f5c\u7528\u662f\u662f\u5426\u5411 IControllerManage\u6ce8\u518c \u8fd9\u4e2acontroller\uff0c\u5e76\u4f7f\u8fd9\u4e2acontroller \u751f\u6548\u3002 \u6240\u4ee5\uff0c\u5f53\u4f60\u5df2\u7ecf\u5b9a\u4e49\u4e86\u4e00\u4e2a controller,\u4f46\u662f\u6682\u65f6\u4e0d\u9700\u8981\u8fd9\u4e2acontroller, \u4f46\u662f\u53c8\u4e0d\u80fd\u5220\u9664\uff0c\u53ef\u4ee5\u5c06\u7b2c\u4e8c\u4e2a\u6a21\u677f\u53c2\u6570\u8bbe\u7f6e\u4e3a false\uff0c\u5982\u4e0b\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 // MyController.h #pragma once #include <IWebCore> class MyController : public IControllerInterface < MyController , false > { Q_GADGET $AsController ( MyController ) public : MyController () = default ; $GetMapping ( index , / ) QString index (); }; \u8fd9\u6837\uff0cMyController\u5c31\u4e0d\u4f1a\u751f\u6548\u3002 \u5173\u4e8e IxxxInterface \u547d\u540d\u89c4\u5219\u7684\u95ee\u9898 \u00b6 \u5728\u8fd9\u91cc\u63d2\u5165\u4e00\u4e2a\u8bdd\u9898\uff0c\u5c31\u662f\u57fa\u7c7b\u7684\u547d\u540d\u95ee\u9898\u3002 \u5728 IWebCore \u7684\u7f16\u5199\u8fc7\u7a0b\u4e2d\uff0c\u6709\u5f88\u591a\u4e0d\u540c\u529f\u80fd\u7684\u7c7b\uff0c\u5b8f\u6ce8\u89e3\uff0c\u51fd\u6570\uff0c\u547d\u540d\u7a7a\u95f4\u7b49\u7b49\u5185\u5bb9\uff0c\u4e0d\u540c\u7684\u7c7b\u578b\u7684\u5185\u5bb9\u6709\u81ea\u5df1\u72ec\u7279\u7684\u524d\u7f00\u6216\u540e\u7f00\u65b9\u5f0f\uff0c\u8be6\u60c5\u8bf7\u53c2\u8003 \u547d\u540d\u89c4\u5219 \u5bf9\u4e8e\u7c7b\u578b\u63a5\u53e3\uff0c\u63a5\u53e3\u7684\u540d\u79f0\u90fd\u662f IxxxInterface \u8fd9\u79cd\u683c\u5f0f\u7684\uff0c\u6bd4\u5982\u8fd9\u91cc\u7684 IControllerInterface \u4ee5\u540e\u4f1a\u63a5\u89e6\u5230\u7684 IOrmTableInterface , IConfigurationInterface \u7b49\u7b49\u7c7b\u578b\u3002\u6240\u4ee5\u5728\u7f16\u5199\u4ee3\u7801\u7684\u65f6\u5019\uff0cIDE \u4f1a\u7ed9\u51fa\u597d\u591a\u4e2d\u63d0\u793a\uff0c\u6211\u4eec\u4e00\u822c\u662f\u9009\u62e9\u4ee5 Interface \u7ed3\u5c3e\u7684\u540d\u79f0\u4f5c\u4e3a\u57fa\u7c7b\u3002 Q_GADGET \u00b6 \u5728 MyController.h \u7b2c8\u884c\u6709 Q_GADGET \u58f0\u660e\u3002 \u5173\u4e8e Q_GADGET \u7684\u5185\u5bb9\u53ef\u4ee5\u67e5\u770b Qt \u53cd\u5c04\u4e0e Q_GADGET ,\u8fd9\u91cc\u7b80\u8981\u4f5c\u4e3a\u8bf4\u660e\u3002 Q_GADGET \u6709\u4e24\u70b9\u4f5c\u7528 \u7b2c\u4e00,\u662fQt\u5b9e\u73b0\u53cd\u5c04\u7684\u57fa\u7840\u3002 \u6709\u719f\u6089Qt \u7684\u5f00\u53d1\u8005\u63a5\u89e6\u6700\u591a\u7684\u5e94\u8be5\u662f Q_OBJECT\u3002 \u800cQ_GADGET \u662f\u4e00\u4e2a\u8f7b\u91cf\u7ea7\u7684Q_OBJECT\uff0c\u5b83\u5305\u542bQt\u53cd\u5c04\u6240\u9700\u8981\u7684\u6700\u5c0f\u96c6\u5408\u3002 1 2 3 4 5 6 7 8 9 10 11 #define Q_GADGET \\ public: \\ static const QMetaObject staticMetaObject; \\ void qt_check_for_QGADGET_macro(); \\ typedef void QtGadgetHelper; \\ private: \\ QT_WARNING_PUSH \\ Q_OBJECT_NO_ATTRIBUTES_WARNING \\ Q_DECL_HIDDEN_STATIC_METACALL static void qt_static_metacall(QObject *, QMetaObject::Call, int, void **); \\ QT_WARNING_POP \\ QT_ANNOTATE_CLASS(qt_qgadget, \"\") \u53ef\u4ee5\u770b\u89c1\u5b83\u91cc\u9762\u5305\u542b\u4e86\u4e00\u4e2a staticMetaObject\u5bf9\u8c61\u3002\u8fd9\u4e2a\u5bf9\u8c61\u91cc\u9762\u80fd\u591f\u53cd\u5c04\u51fa\u7c7b\u5f53\u4e2d\u88ab\u6807\u8bb0\u51fa\u6765\u7684 classinfo,method,property,enum, className \u7b49\u4fe1\u606f\uff0c\u4f7f\u7528\u8fd9\u4e9b\u4fe1\u606f\u5c31\u53ef\u4ee5\u64cd\u7eb5\u8fd9\u4e2a\u7c7b\u7684\u5bf9\u8c61\u3002 \u7b2c\u4e8c\uff0c Qt \u5f53\u4e2d\u6709 moc \u7f16\u8bd1\u5668\uff0c\u8fd9\u4e2amoc \u7f16\u8bd1\u5668\u7684\u4f5c\u7528\u5c31\u662f\u6839\u636e\u5f53\u524d\u88ab\u6807\u8bb0\u6709Q_GADGET \u6216\u8005Q_OBJECT\u7684\u7c7b\u58f0\u660e\uff0c\u751f\u6210\u4e00\u4e2a\u5e26\u6709\u7c7b\u4fe1\u606f\u7684moc_xxx.cpp\u6587\u4ef6\u3002\u4f9b staticMetaObject \u6765\u89e3\u6790\u3002 \u6240\u4ee5\u8fd9\u91cc\u6211\u4eec\u4f7f\u7528 Q_GADGET \u8fd9\u4e2a\u5b8f\u5f88\u660e\u663e\u7684\u4f5c\u7528\u5c31\u662f\u8981\u4f7f MyController \u8fd9\u4e2a\u7c7b\u80fd\u591f\u88ab\u53cd\u5c04\uff0c\u5176\u5185\u90e8\u7ed3\u6784\u80fd\u591f\u88ab\u638c\u63e1\u3002\u6bd4\u5982\u8bf4\uff0c\u6211\u4eec\u5728\u8fd9\u91cc\u4f7f\u7528\u7684 $GetMapping \u6240\u6807\u8bb0\u7684 url \u548c\u51fd\u6570 index \u4e4b\u95f4\u7684\u6620\u5c04\u4fe1\u606f\uff1b\u51fd\u6570 index \u7684\u4fe1\u606f\u7b49\u3002 \u603b\u800c\u8a00\u4e4b\uff0c\u6211\u4eec\u8fd9\u91cc\u4f7f\u7528Q_GADGET\u7684\u4f5c\u7528\u4f7f\u8fd9\u4e2a\u7c7b\u80fd\u591f\u88ab\u53cd\u5c04\u5230\u3002 $AsController \u00b6 \u5728 MyController.h \u4e2d\u95f4\u7b2c9 \u884c\u51fa\u73b0 $AsController(MyController) \u3002\u8fd9\u540c\u6837\u4f7f\u4e00\u4e2a\u5b8f\u6ce8\u89e3\uff0c\u548c\u6700\u4e0a\u9762\u7684 @RestController \u5927\u6982\u610f\u601d\u662f\u76f8\u540c\u7684\uff0c\u90fd\u662f\u7528\u6765\u6807\u8bb0\u8fd9\u662f\u4e00\u4e2acontroller\u3002\u4e0d\u8fc7 $AsController \u9700\u8981\u81f3\u5c11\u4e00\u4e2a\u53c2\u6570\u3002 $AsController \u7684\u4e24\u79cd\u5f62\u5f0f\u3002 \u00b6 AsController \u5b8f\u6ce8\u89e3\u6709\u4e24\u79cd\u91cd\u8f7d\u5f62\u5f0f\uff0c\u5206\u522b\u4e3a\uff1a #define $AsController_1(klassName) \u53ea\u6709\u4e00\u4e2a\u53c2\u6570\u7684 $AsController \u4f20\u5165\u7684\u662f\u7c7b\u7684\u540d\u79f0\u3002 klassName \u540d\u79f0\u7684\u4f20\u5165\u76ee\u7684\u662f\u5728 \u5b8f\u6ce8\u89e3 \u5f53\u4e2d\u5b9e\u73b0\u4e00\u4e9b controller \u5f53\u4e2d\u5171\u540c\u7684\u51fd\u6570\uff0c\u6bd4\u5982\u8bf4\u5b9a\u4e49\u5355\u4f8b\uff0c\u91cd\u8f7d\u57fa\u7c7b\u7684\u76f8\u5173\u51fd\u6570\u7b49\u3002 #define $AsController_2(klassName, path) \u6709\u4e24\u4e2a\u53c2\u6570\u7684 $AsController \u7b2c\u4e00\u4e2a\u53c2\u6570\u4f20\u5165\u7684\u662f\u7c7b\u7684\u540d\u79f0\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u5219\u662f\u8fd9\u4e2a controller \u6240\u6709\u7684url \u6620\u5c04\u7684\u524d\u7f00\u3002 \u6bd4\u5982\u8bf4\u5f53path \u7684\u53c2\u6570\u662f abc , \u90a3\u4e48\u5728\u8fd9\u4e2a\u51fd\u6570\u4e2d\u95f4\u6620\u5c04\u7684\u6240\u6709url \u7684\u524d\u9762\u90fd\u8981\u52a0\u4e0a abc \u3002\u6bd4\u5982\u8bf4\u5f53 $GetMapping \u7684url \u53c2\u6570\u662f hello , \u90a3\u4e48\u5176\u5b9e\u9645\u6620\u5c04\u7684url \u5c31\u662f /abc/hello \u8fd9\u91cc\u4f7f\u7528\u4e86 \u5b8f\u91cd\u8f7d \u7684\u6280\u672f\uff0c\u6709\u4e0d\u4e86\u89e3\u800c\u60f3\u4e86\u89e3\u7684\u5f00\u53d1\u8005\u53ef\u4ee5\u81ea\u884c\u5b66\u4e60\u3002 \u540c\u6837\uff0c $AsXXX \u4e5f\u662f\u4e00\u79cd\u547d\u540d\u89c4\u8303\uff0c\u8bf7\u53c2\u8003 \u547d\u540d\u89c4\u8303 \u58f0\u660e\u6620\u5c04\u51fd\u6570 \u00b6 \u5728 MyController.h \u768413-14\u884c\u58f0\u660e\u5982\u4e0b 1 2 $GetMapping ( index , / ) QString index (); \u8fd9\u91cc\u7684\u4f5c\u7528\u662f\u58f0\u660e\u4e00\u4e2aindex\u51fd\u6570\u5e76\u5c06 index \u51fd\u6570\u6620\u5c04\u5230 / \u7684url \u4e0a\u9762\uff0c index \u51fd\u6570\u8fd4\u56de\u4e00\u4e2a\u5b57\u7b26\u4e32\u3002 $XxxMapping \u00b6 $GetMapping \u662f\u6620\u5c04\u5230 GET \u8bf7\u6c42\u5f53\u4e2d\u3002\u9664\u6b64\u4ee5\u5916\u8fd8\u6709\u53e6\u5916\u96c6\u4e2d mapping \u5b8f\u6ce8\u89e3 $PostMapping \u7528\u4e8e\u6620\u5c04POST \u8bf7\u6c42 $PutMapping \u7528\u4e8e\u6620\u5c04PUT \u8bf7\u6c42 $DeleteMapping \u7528\u4e8e\u6620\u5c04DELETE \u8bf7\u6c42 PatchMapping \u7528\u4e8e\u6620\u5c04PATCH\u8bf7\u6c42 \u9664\u8fd9\u4e9b\u5e38\u89c4\u8bf7\u6c42\u4ee5\u5916\uff0c\u8fd8\u6709\u4e00\u79cd OPTION \u8bf7\u6c42\u548c HEAD \u8bf7\u6c42\u3002 \u6839\u636e rfc, HEAD \u8bf7\u6c42\u4f1a\u88ab\u89e3\u6790\u6210 GET \u8bf7\u6c42\uff0c\u8fd4\u56de\u9996\u884c\u548cheaders,\u4f46\u662f\u4e0d\u53cd\u56debody \u5185\u5bb9\u3002\u6240\u4ee5\u8fd9\u79cd\u8bf7\u6c42\u4e0d\u9700\u8981\u5355\u72ec\u4f7f\u7528\u5b8f\u6ce8\u89e3 OPTIONS \u8bf7\u6c42\u4f1a\u8fd4\u56de\u5f53\u524durl\u6240\u652f\u6301\u7684\u8bf7\u6c42\u7c7b\u578b\uff0c\u540c\u6837\u4e0d\u9700\u8981\u5b8f\u6ce8\u89e3\u3002 \u53e6\u5916\uff0c\u5728\u53e6\u5916\u4e00\u79cdController \u7c7b\u578b, IStatusController \u7c7b\u578b\u5f53\u4e2d\uff0c\u6709 $StatusMapping\u6ce8\u89e3\uff0c\u8fd9\u91cc\u53ea\u5217\u4e0d\u8868\u3002 \u8fd9\u4e9b $xxxMapping\u81f3\u5c11\u9700\u8981\u4e00\u4e2a\u53c2\u6570\u3002\u6211\u4eec\u4ee5 $GetMapping \u4e3a\u4f8b\uff0c\u5220\u51cf\u4e86\u90e8\u5206\u4ee3\u7801\uff0c\u5176\u5b9a\u4e49\u5982\u4e0b 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 #define $GetMapping_1(funName) \\ $GetMappingDeclare(funName) \\ Q_INVOKABLE #define $GetMapping_2(funName, url1) \\ $GetMappingDeclare(funName, url1) \\ Q_INVOKABLE #define $GetMapping_3(funName, url1, url2) \\ $GetMappingDeclare(funName, url1, url2) \\ Q_INVOKABLE #define $GetMapping_4(funName, url1, url2, url3) \\ $GetMappingDeclare(funName, url1, url2, url3) \\ Q_INVOKABLE #define $GetMapping_5(funName, url1, url2, url3, url4) \\ $GetMappingDeclare(funName, url1, url2, url3, url4) \\ Q_INVOKABLE #define $GetMapping_6(funName, url1, url2, url3, url4, url5) \\ $GetMappingDeclare(funName, url1, url2, url3, url4, url5) \\ Q_INVOKABLE #define $GetMapping_7(funName, url1, url2, url3, url4, url5, url6) \\ $GetMappingDeclare(funName, url1, url2, url3, url4, url5, url6) \\ Q_INVOKABLE #define $GetMapping_8(funName, url1, url2, url3, url4, url5, url6, url7) \\ $GetMappingDeclare(funName, url1, url2, url3, url4, url5, url6, url7) \\ Q_INVOKABLE #define $GetMapping_9(funName, url1, url2, url3, url4, url5, url6, url7, url8) \\ $GetMappingDeclare(funName, url1, url2, url3, url4, url5, url6, url7, url8) \\ Q_INVOKABLE #define $GetMapping_(N) $GetMapping_##N #define $GetMapping_EVAL(N) $GetMapping_(N) #define $GetMapping(...) PP_EXPAND( $GetMapping_EVAL(PP_EXPAND( PP_NARG(__VA_ARGS__) ))(__VA_ARGS__) ) \u53ef\u4ee5\u770b\u89c1\u7b2c\u4e00\u4e2a\u53c2\u6570\u6c38\u8fdc\u65f6 \u5bf9\u5e94\u7684\u51fd\u6570\u540d\u79f0\uff0c \u5426\u5219\u5c31\u4e0d\u6b63\u786e\u3002 \u5f53\u53ea\u6709\u4e00\u4e2a\u53c2\u6570\u65f6\uff0c\u5bf9\u5e94\u7684\u51fd\u6570\u6620\u5c04\u5230\u5f53\u524dcontroller \u7684\u6839\u76ee\u5f55\u3002\u4e5f\u5c31\u662f / \u76ee\u5f55\u3002\u5f53controller \u6ca1\u6709\u6307\u5b9a\u76ee\u5f55\u65f6\uff0c \u7b2c2\u4e2a\u5230\u7b2c9\u4e2a\u53c2\u6570\u662f \u4e0d\u540c\u7684url,\u6700\u591a\u4e00\u5171\u53ef\u4ee5\u67098\u4e2a\u4e0d\u540c\u7684url\u6620\u5c04\u5230\u540c\u4e00\u4e2a\u51fd\u6570\u5f53\u4e2d\u3002 url pattern \u00b6 \u5199\u5728 $XxxMapping \u4e2d\u7684url \u4e0d\u4ec5\u662f\u9759\u6001\u7684\uff0c\u800c\u4e14\u662f\u53ef\u4ee5\u52a8\u6001\u6620\u5c04\u7684\u3002\u6bd4\u5982\u5f53 url \u662f /<name:string>/<age:int> \u8fd9\u79cd\u683c\u5f0f\u65f6\uff0c\u5b83\u8868\u793aurl \u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u65f6 string \u7c7b\u578b\u7684\uff0c\u800c\u6620\u5c04\u7cfb\u7edf\u4f1a\u4fdd\u7559\u8fd9\u4e2a\u53c2\u6570\u4ee5 name \u7684\u5f62\u5f0f\u4f20\u7ed9\u51fd\u6570\u3002\u7b2c\u4e8c\u4e2a\u53c2\u6570 <age:int> \u5219\u8868\u793a\u8fd9\u4e2a\u53c2\u6570\u5fc5\u987b\u80fd\u591f\u8f6c\u6362\u6210 int \u7c7b\u578b\uff0c\u5982\u679c\u8f6c\u6362\u4e0d\u6210\uff0c\u8fd9\u4e2aurl\u5c31\u4e0d\u4f1a\u88ab\u5339\u914d\u3002\u7b2c\u4e8c\u4e2a\u53c2\u6570\u4f1a\u88ab\u8d4b\u503c\u5230 name, \u4f20\u7ed9 \u51fd\u6570\u4f7f\u7528\u3002 \u5173\u4e8e\u5177\u4f53\u7684url\u5982\u4f55\u4f7f\u7528\uff0c\u8bf7\u53c2\u8003 Url \u5b9a\u4e49 Q_INVOKABLE \u00b6 \u5728 Qt \u7684\u5143\u5bf9\u8c61\u7cfb\u7edf\u5f53\u4e2d\uff0c\u5982\u4f55\u8ba9\u4e00\u4e2a\u5185\u90e8\u7684\u51fd\u6570\u88ab\u5bf9\u8c61\u7cfb\u7edf\u4e86\u89e3\uff0c\u5e76\u4e14\u80fd\u591f\u505a\u51fa\u53cd\u5c04\uff1f \u7b54\u6848\u5c31\u662f\u5728\u8fd9\u4e2a\u51fd\u6570\u9762\u524d\u6dfb\u52a0 Q_INVOKABLE \u3002 \u5f53\u51fd\u6570\u6dfb\u52a0 Q_INVOKABLE \u4e4b\u540e\uff0c moc \u5de5\u5177\u4f1a\u8bb0\u5f55\u5f53\u524d\u51fd\u6570\u7684\u6240\u6709\u4fe1\u606f\uff0c\u751f\u6210\u5728 moc_xxx.cpp \u6587\u4ef6\u5f53\u4e2d\u3002\u8bb0\u5f55\u7684\u4fe1\u606f\u5305\u62ec\u4f46\u4e0d\u9650\u4e8e \u51fd\u6570\u540d\u79f0\uff0c\u51fd\u6570\u7b7e\u540d \u51fd\u6570\u8fd4\u56de\u503c\u548c\u8fd4\u56de\u503c\u7c7b\u578b\u548c \u5bf9\u8c61\u8fd4\u56de\u503c\u7c7b\u578b\u7684 MetaType \u51fd\u6570\u5404\u4e2a\u53c2\u6570\u7c7b\u578b\uff0c\u53c2\u6570\u540d\u79f0\u548c\u53c2\u6570\u7c7b\u578b\u7684 MetaType \u51fd\u6570\u7684\u5f15\u7528\u672c\u8eab\uff0c\u662f\u51fd\u6570\u53ef\u4ee5\u901a\u8fc7 invokeOnGadget \u88ab\u8c03\u7528\u3002 \u8fd9\u4e2a\u4e5f\u662f Qt signal/slots\u7684\u57fa\u7840\u4e4b\u4e00\u3002\u4e0d\u8fc7\u5728\u5b9e\u73b0 IWebCore \u65f6\uff0c\u5e76\u6ca1\u6709\u4f7f\u7528 signal/slots\uff0c\u800c\u662f\u4f7f\u7528\u4e86\u539f\u59cb\u7684\u53cd\u5c04\u7cfb\u7edf\uff0csignal/slots \u4f7f\u7528\u8d77\u6765\u53cd\u800c\u4e0d\u65b9\u4fbf\u3002 \u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u770b\u89c1\uff0c\u6240\u6709\u7684 $XxxMapping \u5b8f\u6ce8\u89e3\u540e\u9762\u90fd\u6709\u4e00\u4e2a Q_INVOKABLE \u8ddf\u7740\u3002\u8fd9\u4e2a\u4e5f\u5c31\u610f\u5473\u7740\u5b8f\u6ce8\u89e3\u540e\u9762\u5f97\u8ddf\u4e0a\u4e00\u4e2a\u51fd\u6570\uff0c\u5426\u5219\u7f16\u8bd1\u5668\u5728\u5b8f\u5904\u7406\u8fd9\u4e2a\u9636\u6bb5\u5c31\u4f1a\u62a5\u9519\uff0c\u540c\u6837\uff0c $XxxMapping \u4e0d\u80fd\u5806\u53e0\u4f7f\u7528\u3002\u8fd9\u4e2a\u4e5f\u4f1a\u62a5\u9519\u3002 \u51e1\u662f\u90fd\u6709\u4f8b\u5916\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u4f7f\u7528 $MappingDeclare \u8fd9\u79cd\u5f62\u5f0f\u6765\u8fdb\u884c\u5b9a\u4e49 \u3002\u6bd4\u5982\u6211\u4eec\u60f3\u8ba9\u4e00\u4e2a\u51fd\u6570\u6709\u591a\u4e2a \u80fd\u591f\u5339\u914d\u591a\u4e2a\u7c7b\u578b\u7684\u8c03\u7528\uff0c\u6211\u4eec\u53ef\u4ee5\u5199\u4ee3\u7801\u5982\u4e0b 1 2 3 4 5 6 $GetMappingDeclare ( index , / ) $PostMappingDeclare ( index , / ) $PutMappingDeclare ( index , / ) $DeleteMappingDeclare ( index , / ) $PatchMappingDeclare ( index , / ) Q_INVOKABLE IJsonResponse index (); \u8fd9\u6837\uff0c\u6240\u6709\u7684\u8bf7\u6c42\u90fd mapping \u5230 index \u51fd\u6570\u3002 \u6620\u5c04\u51fd\u6570 \u00b6 \u6620\u5c04\u51fd\u6570\u662f\u6307\u88ab url \u6620\u5c04\u7684\u51fd\u6570\u3002\u5b83\u6709\u7279\u5b9a\u7684\u8981\u6c42\uff0c\u6bd4\u5982\u8bf4\u4e0d\u80fd\u662f\u91cd\u8f7d\u51fd\u6570\uff0c\u51fd\u6570\u53c2\u6570\u4e0d\u80fd\u6709\u9ed8\u8ba4\u503c\u7b49\u7b49\u7684\u8981\u6c42\u3002\u8fd9\u91cc\u4e0d\u505a\u8be6\u7ec6\u7684\u8bb2\u89e3\uff0c\u5177\u4f53\u8bf7\u770b \u6620\u5c04\u51fd\u6570 \u3002\u8fd9\u4e00\u7ae0\u8282\u3002 \u5728 MyController \u6848\u4f8b\u4e2d\uff0c\u51fd\u6570\u8fd4\u56de\u503c\u662f QString \u7c7b\u578b\u3002\u5728\u89e3\u6790\u7684\u8fc7\u7a0b\u4e2d\uff0c QString \u7c7b\u578b\u7684\u4e00\u822c\u5c06\u88ab\u89e3\u6790\u6210 plain/text \u8fd9\u6837\u7684 mime \u7c7b\u578b\uff0c \u8868\u793a\u8fd9\u662f\u4e00\u4e2a\u666e\u901a\u7684\u5b57\u7b26\u4e32\u7c7b\u578b\u3002 \u5267\u900f\u4e00\u70b9\uff1a\u5982\u679c \u8fd4\u56de\u7684\u5b57\u7b26\u4e32 \u662f \"$json:[1,2,3,4]\", \u90a3\u4e48\u8fd4\u56de\u7684\u7c7b\u578b\u662f json \u7c7b\u578b\u7684\u3002\u8fd4\u56dejson\u7c7b\u578b\u7684\u6570\u636e\u4e5f\u53ef\u4ee5\u4f7f\u7528 IJsonResponse \u8fd9\u6837\u7684\u7c7b\u578b\uff0c\u8fd4\u56de QJsonObject,\u7b49\uff0c \u4e5f\u53ef\u4ee5\u4f7f\u7528 \"[1,2,3]\"_json \u8fd9\u79cd\u683c\u5f0f\u8fd4\u56de\u3002 \u603b\u7ed3 \u00b6 \u5173\u4e8eController\u7684\u8be6\u7ec6\u8bb2\u89e3\u5230\u6b64\u4e3a\u6b62\u3002\u4e4b\u540e\u7684\u5185\u5bb9\uff0c\u5982 Q_GADGET \u8fd9\u79cd\u4e1c\u897f\u4f1a\u9ed8\u8ba4\u5f00\u53d1\u8005\u5df2\u7ecf\u4e86\u89e3\u3002\u5982\u679c\u6709\u4e0d\u6e05\u695a\u7684\u53ef\u4ee5\u56de\u5934\u770b\u770b\u8fd9\u4e00\u7ae0\u8282\uff0c\u6216\u8005\u770b\u770b Qt Documentation | Home \u3002\u5f53\u7136\u628a\u5b83\u5f53\u4f5c\u88c5\u9970\u6027\u7684\u4e1c\u897f\u4e5f\u5e76\u4e0d\u5f71\u54cd\u5f00\u53d1\u3002","title":"\u5b9a\u4e49\u63a7\u5236\u5668"},{"location":"controller/define_controller/#_1","text":"","title":"\u5b9a\u4e49\u63a7\u5236\u5668"},{"location":"controller/define_controller/#spring","text":"\u5728 web \u5f00\u53d1\u7684\u8fc7\u7a0b\u4e2d\uff0c\u6700\u91cd\u8981\u7684\u5de5\u4f5c\u4e4b\u4e00\u5c31\u662f\u5c06\u4e00\u4e2a\u8bf7\u6c42\u6620\u5c04\u5230\u4e00\u4e2a\u76f8\u5173\u7684\u5904\u7406\u51fd\u6570\u5f53\u4e2d\uff0c\u4f7f\u7528\u8be5\u51fd\u6570\u5904\u7406http \u8bf7\u6c42\uff0c\u5e76\u8fd4\u56de\u76f8\u5e94\u7684\u5185\u5bb9\uff0c\u6211\u4eec\u4e00\u822c\u628a\u5c01\u88c5\u5904\u7406\u51fd\u6570\u7684\u7c7b\u53eb\u505a\u63a7\u5236\u5668\uff0c\u610f\u601d\u5c31\u662f\u63a7\u5236\u76f8\u5e94\u7684\u8fd0\u884c\u3002 \u5728java\u6216\u8005python \u8bed\u8a00\u4e2d\u53ef\u4ee5\u4f7f\u7528\u5f88\u7b80\u6d01\u7684\u8bed\u8a00\u5c31\u53ef\u4ee5\u5b8c\u6210\u8fd9\u6837\u7684\u5de5\u4f5c\uff0c\u5e76\u4e14\u6587\u4ef6\u4e2d\u95f4\u6ca1\u6709\u8026\u5408\uff0c\u964d\u4f4e\u6587\u4ef6\u7684\u76f8\u5173\u6027\uff0c\u51cf\u4f4e\u5f00\u53d1\u7684\u5de5\u4f5c\u91cf\u3002\u4e0b\u9762\u662fspring\u5b98\u65b9\u63d0\u4f9b\u7684\u4ee3\u7801\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 package com.example.demo ; import org.springframework.boot.SpringApplication ; import org.springframework.boot.autoconfigure.SpringBootApplication ; import org.springframework.web.bind.annotation.GetMapping ; import org.springframework.web.bind.annotation.RequestParam ; import org.springframework.web.bind.annotation.RestController ; @SpringBootApplication @RestController public class DemoApplication { public static void main ( String [] args ) { SpringApplication . run ( DemoApplication . class , args ); } @GetMapping ( \"/hello\" ) public String hello ( @RequestParam ( value = \"name\" , defaultValue = \"World\" ) String name ) { return String . format ( \"Hello %s!\" , name ); } } \u6211\u4eec\u53ef\u4ee5\u770b\u5230\u572817-20\u884c\uff0c\u7b80\u7b80\u5355\u5355\u76844\u884c\u4ee3\u7801\u5b9a\u4e49\u4e00\u4e2a \u5904\u7406 /hello url\u5730\u5740 \u7684\u51fd\u6570 hello \u5b83\u4f20\u5165\u4e00\u4e2a request \u884c\u7684\u53c2\u6570 param,\u5e76\u8fd4\u56de\u76f8\u5e94\u7684\u5b57\u7b26\u4e32\u3002","title":"Spring \u7684\u6848\u4f8b"},{"location":"controller/define_controller/#_2","text":"spring \u7684 url-\u51fd\u6570\u6620\u5c04 \u5982\u6b64\u7b80\u5355\u6e05\u6670,\u4ee5\u81f3\u4e8e\u540e\u6765\u8005\u4e00\u76f4\u5728\u6a21\u4eff\u3002\u6211\u5728\u601d\u8003\u65f6\u4e5f\u662f\u5982\u6b64\u3002\u53ef\u60dc\u7684\u662f\u5728 c++ \u5f53\u4e2d\u5e76\u4e0d\u652f\u6301\u6ce8\u89e3\uff0c\u4e0d\u652f\u6301 @ \u7b26\u53f7\uff0c\u4e5f\u4e0d\u652f\u6301\u53cd\u5c04\u3002 \u4f46\u662f\u6211\u5728\u5b9e\u9645\u64cd\u4f5c\u7684\u65f6\u5019\uff0c\u53d1\u73b0 c++ \u5bf9\u4e8e $ \u8fd9\u4e2a\u7b26\u53f7\u5e76\u6ca1\u6709\u7279\u6b8a\u7684\u9650\u5236\u3002\u4e8e\u662f\u6211\u60f3\u4f7f\u7528 $ \u8fd9\u4e2a\u7b26\u53f7\u505a\u4e00\u4e2a\u7c7b\u4f3c @GetMapping \u8fd9\u6837\u6e05\u6670\u7684\u6807\u8bb0\uff0c\u4e8e\u662f\u5c31\u6709\u4e86 $GetMapping \u8fd9\u6837\u7684\u6807\u8bb0\uff0c\u8fd9\u6837\u5199\u5728 c++ \u5f53\u4e2d\u53ef\u4ee5\u5f88\u6e05\u695a\u7684\u628a\u8fd9\u4e9b\u7279\u6b8a\u6807\u8bb0\u7b26\u548c\u529f\u80fd\u4ee3\u7801\u5206\u5f00\u3002 $GetMapping \u5185\u90e8\u5b9e\u73b0\u662f\u57fa\u4e8e \u5b8f \u5b9e\u73b0\u7684\uff08\u540e\u9762\u4f1a\u7ec6\u8bb2\uff09\uff0c\u90a3\u6211\u7b80\u5355\u7684\u628a\u8fd9\u79cd\u7531\u5b8f\u5b9a\u4e49\u7684\u6ce8\u89e3\u79f0\u4e4b\u4e3a \u5b8f\u6ce8\u89e3 \u5177\u4f53\u5185\u5bb9\u8bf7\u67e5\u770b \u5b8f\u6ce8\u89e3 \u3002 \u5728\u4e2d\u6587 c++ \u5708\u5b50\u4e2d\u6709\u4e00\u53e5\u8bdd\uff0c \u6a21\u677f\u52a0\u5b8f\uff0c\u6cd5\u529b\u65e0\u7a77 \uff0c\u53ef\u89c1\u5b8f\u5728c++\u4e2d\u7684\u5730\u4f4d\u3002\u5f53\u7136\u4ec5\u4ec5\u6709\u5b8f\u662f\u4e0d\u591f\u7684\uff0c\u8fd8\u5f97\u9700\u8981\u53e6\u5916\u4e24\u6837\u4e1c\u897f\uff0c \u53cd\u5c04 \u548c SIR \uff08\u9759\u6001\u521d\u59cb\u5316\u6ce8\u5165\uff09\u3002\u8fd9\u4e24\u4e2a\u5185\u5bb9\u548c\u672c\u7ae0\u8282\u7684\u5173\u7cfb\u4e0d\u662f\u592a\u5bc6\u5207\uff0c\u53ef\u4ee5\u67e5\u770b\u5982\u4e0b\u5185\u5bb9 Qt \u53cd\u5c04\u4e0e Q_GADGET \u9759\u6001\u521d\u59cb\u5316\u6ce8\u518c","title":"\u201c$\u201d \u7b26\u53f7 \u4e0e \u5b8f\u6ce8\u89e3"},{"location":"controller/define_controller/#controller","text":"\u5728\u4e0a\u9762\u7684\u51c6\u5907\u4e4b\u540e\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u5199\u51fa\u7c7b\u4f3c\u4e8e Spring \u8fd9\u6837\u57fa\u4e8e\u6ce8\u89e3\u7684\u4ee3\u7801\u3002 \u5728 \u7f16\u5199\u4e00\u4e2a\u7f51\u7edc\u670d\u52a1\u5668 \u5f53\u4e2d\u5df2\u7ecf\u7ed9\u51fa\u4e86\u4e00\u4efd\u4ee3\u7801\uff0c\u5176\u4e2d\u7684controller \u4ee3\u7801\uff0c\u91cd\u65b0\u590d\u5236\u5728\u4e0b\u9762\u4ee5\u4f5c\u8be6\u7ec6\u7684\u8bb2\u89e3\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 // MyController.h #pragma once #include <IWebCore> class MyController : public IControllerInterface < MyController > { Q_GADGET $AsController ( MyController ) public : MyController () = default ; $GetMapping ( index , / ) QString index (); }; // MyController.cpp #include \"MyController.h\" QString MyController::index () { return \"hello world\" ; } \u4e3a\u4e86\u65b9\u4fbf\u8d77\u89c1\uff0c\u6211\u628a\u58f0\u660e\u548c\u5b9e\u73b0\u7684\u4ee3\u7801\u653e\u7f6e\u5728\u4e00\u8d77\uff0c\u5b9e\u9645\u4e0a\u4ed6\u4eec\u662f\u5206\u5f00\u7684\u3002","title":"\u5b9a\u4e49 Controller"},{"location":"controller/define_controller/#_3","text":"\u5728\u4ee3\u7801\u7b2c\u4e8c\u884c\u662f\u9632\u6b62\u5934\u6587\u4ef6\u88ab\u591a\u6b21\u5305\u542b\uff0c #pragma once \u8fd9\u4e2a\u662f msvc\u5f0f\u7684\u58f0\u660e\uff0c\u4e0e\u4e4b\u76f8\u5bf9\u7684\u8fd8\u6709gcc\u5f0f\u7684\u58f0\u660e\uff1a #ifndef __MYCONTROLLER_H__ #define __MYCONTROLLER_H__ ... ... // \u58f0\u660e\u3001\u5b9a\u4e49\u8bed\u53e5 #endif \u4e24\u8005\u6ca1\u6709\u660e\u663e\u7684\u533a\u522b\uff0c\u4f46\u662f\u5982\u679c\u5b9a\u4e49\u4e86\u540c\u540d\u7c7b\uff0c\u7b2c\u4e8c\u79cd\u65b9\u5f0f\u6709\u53ef\u80fd\u6f0f\u6389\u5305\u542b\u3002\u800c\u4e14 \u7531\u4e8e\u6211\u4eec\u4f7f\u7528\u7684c++\u7248\u672c\u6bd4\u8f83\u9ad8\u7ea7\uff0c\u6240\u4ee5\u7b2c\u4e00\u79cd\u5728\u7f16\u8bd1\u5668\u652f\u6301\u4e0a\u662f\u6ca1\u6709\u95ee\u9898\u7684\u3002","title":"\u5934\u6587\u4ef6\u5305\u542b"},{"location":"controller/define_controller/#iwebcore","text":"\u5728\u4ee3\u7801\u7b2c4\u884c\uff0c\u53d1\u73b0\u6211\u4eec\u53ea\u5305\u542b\u4e86\u4e00\u4e2a\u5934\u6587\u4ef6, IWebCore \u8fd9\u4e2a\u6587\u4ef6\u5b9a\u4e49\u5728 src \u6587\u4ef6\u5939\u5f53\u4e2d: \u5185\u5bb9\u5982\u4e0b\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 #pragma once #include \"assertion/assertion\" #include \"base/base\" #include \"bean/bean\" #include \"log/log\" #include \"configuration/configuration\" #include \"controller/controller\" #include \"common/common\" #include \"server/IHttpServer.h\" #include \"process/process\" #include \"orm/orm\" #include \"test/test\" $PackageWebCoreUsing IWebCore \u5305\u542b\u4e86\u6240\u6709\u6709\u5fc5\u8981\u5bfc\u51fa\u7684\u5934\u6587\u4ef6\uff0c\u5305\u542b\u8fd9\u4e00\u4e2a\u5934\u6587\u4ef6\u4e4b\u540e\uff0c\u53ef\u4ee5\u4e0d\u7528\u5305\u542b\u5176\u4ed6\u6587\u4ef6\uff0c\u5f53\u7136\uff0c\u5982\u679c\u5f00\u53d1\u8005\u89c9\u5f97\u5305\u542b\u7684\u5934\u6587\u4ef6\u8fc7\u591a\uff0c\u7f16\u8bd1\u8d77\u6765\u6709\u70b9\u56f0\u96be\uff0c\u4e5f\u53ef\u4ee5\u628a\u8fd9\u4e2a\u5934\u6587\u4ef6\u8bbe\u7f6e\u6210 \u9884\u7f16\u8bd1\u5934\u6587\u4ef6: PRECOMPILED_HEADER = IWebCore \u5f53\u7136\u4f60\u4e5f\u53ef\u4ee5\u4e0d\u4f7f\u7528\u8fd9\u4e2a\u5934\u6587\u4ef6\u3002\u5982\u679c\u4f60\u719f\u6089\u4ee3\u7801\uff0c\u4e5f\u53ef\u4ee5\u5305\u542b\u72ec\u7acb\u7684\u5934\u6587\u4ef6,\u6210\u4e3a\u4ee5\u4e0b\u7684\u683c\u5f0f\uff1a 1 2 3 4 5 6 #include <controller/IControllerManage.h> #include <controller/IControllerInterface.h> #include <controller/pp/IControllerPreProcessor.h> #include <controller/pp/IGetMappingPreProcessor.h> #include <configuration/IConfigurationManage.h> using namespace IWebCore ; \u7279\u522b\u8981\u63d0\u5230\u7684\u4e00\u70b9\u5c31\u662f IWebCore \u5b9a\u4e49\u7b2c15\u884c $PackageWebCoreUsing \u8fd9\u662f\u4e00\u4e2a\u5b8f\u3002 \u5c55\u5f00\u540e\u5c31\u662f\u4e0a\u9762\u4ee3\u7801\u7684\u7b2c6\u884c using namespace IWebCore ; \u5b9e\u9645\u4e0a\u6574\u4e2a IWebCore\u4ee3\u7801 \u90fd\u662f \u5728 IWebCore \u540d\u79f0\u7a7a\u95f4\u4e0b\u9762\u7684\u3002\u6240\u4ee5\uff0c\u5982\u679c\u5f53\u4f60\u5b9a\u4e49\u7684\u7c7b\u6216\u8005\u51fd\u6570\u4e0eIWebCore \u7684\u6709\u51b2\u7a81\uff0c\u53ef\u4ee5\u4e3a\u76f8\u5e94\u7684\u540d\u79f0\u52a0\u4e0a \u540d\u5b57\u7a7a\u95f4 IWebCore","title":"IWebCore \u5934\u6587\u4ef6"},{"location":"controller/define_controller/#icontrollerinterface","text":"\u5728\u4ee3\u7801\u7b2c6\u884c\uff0c\u6211\u4eec\u58f0\u660e\u4e86\u4e00\u4e2a\u7c7b\u540d\u79f0 MyController , \u5e76\u4e14\u4ee5 public \u7684\u5f62\u5f0f\u7ee7\u627f IControllerInterface \u6a21\u677f\u57fa\u7c7b\uff0c \u6a21\u677f\u53c2\u6570\u5c31\u662f\u6211\u4eec\u5b9a\u4e49\u7684controller \u540d\u79f0\u3002","title":"IControllerInterface"},{"location":"controller/define_controller/#_4","text":"\u6a21\u677f\u57fa\u7c7b\u5bf9\u4e8e\u65b0\u624b\u6709\u70b9\u7ed5\uff0c\u4e0d\u660e\u767d\u76f4\u63a5\u7528\u4e5f\u6ca1\u6709\u95ee\u9898\u3002 IControllerInterface\u7684\u5b9a\u4e49\u5982\u4e0b: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 template < typename T , bool enabled = true > class IControllerInterface : public IControllerTaskUnit < T , enabled > { public : IControllerInterface () = default ; virtual ~ IControllerInterface () = default ; virtual void task () final ; protected : virtual void registerControllerFun ( void * handler , const QMap < QString , QString > & clsInfo , const QVector < QMetaMethod > & methods ) = 0 ; }; template < typename T , bool enabled > void IControllerInterface < T , enabled >:: task (){ auto inst = T :: instance (); auto clsInfo = IMetaUtil :: getMetaClassInfoMap ( T :: staticMetaObject ); auto methods = IMetaUtil :: getMetaMethods ( T :: staticMetaObject ); registerControllerFun ( inst , clsInfo , methods ); } \u8fd9\u4e2a\u4e1c\u897f\u7b80\u5355\u6765\u8bf4\u5c31\u662f\u5c06 controller \u7c7b T \u901a\u8fc7 task \u51fd\u6570\u6ce8\u518c\u5230\u4e00\u4e2a\u5730\u65b9\uff0cIControllerManage \u8fd9\u6837\u7684\u4e00\u4e2a\u6c60\u5b50\u91cc,\u7b49\u5f85\u8bf7\u6c42\u6765\u4e34\u65f6\u53ef\u4ee5\u67e5\u627e IControllerManage \u6c60\u5b50\u91cc\u9762\u5339\u914d\u76f8\u5e94url\u7684\u51fd\u6570\uff0c\u518d\u8c03\u7528\u8fd9\u4e2a\u51fd\u6570\u3002\u5177\u4f53\u5982\u4f55\u6ce8\u518c\uff0c\u53ef\u4ee5\u67e5\u770b \u9759\u6001\u521d\u59cb\u5316\u6ce8\u518c \u4ee5\u53ca Task","title":"\u5b9a\u4e49"},{"location":"controller/define_controller/#_5","text":"\u8fd8\u6709\u4e00\u70b9\u9700\u8981\u6ce8\u610f\u7684\u662f\uff1a IControllerInterface \u57fa\u7c7b\u6709\u4e24\u4e2a\u6a21\u677f\u53c2\u6570\uff1a template < typename T , bool enabled = true > class IControllerInterface : public IControllerTaskUnit < T , enabled > \u7b2c\u4e00\u4e2a typename T \u662f\u8981\u6ce8\u518c\u7684 controller \u7c7b\uff0c \u800c\u7b2c\u4e8c\u4e2a bool enabled = true \u8fd9\u4e2abool \u7c7b\u578b\u7684\u9ed8\u8ba4\u6a21\u677f\u53c2\u6570\u7684\u4f5c\u7528\u662f\u662f\u5426\u5411 IControllerManage\u6ce8\u518c \u8fd9\u4e2acontroller\uff0c\u5e76\u4f7f\u8fd9\u4e2acontroller \u751f\u6548\u3002 \u6240\u4ee5\uff0c\u5f53\u4f60\u5df2\u7ecf\u5b9a\u4e49\u4e86\u4e00\u4e2a controller,\u4f46\u662f\u6682\u65f6\u4e0d\u9700\u8981\u8fd9\u4e2acontroller, \u4f46\u662f\u53c8\u4e0d\u80fd\u5220\u9664\uff0c\u53ef\u4ee5\u5c06\u7b2c\u4e8c\u4e2a\u6a21\u677f\u53c2\u6570\u8bbe\u7f6e\u4e3a false\uff0c\u5982\u4e0b\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 // MyController.h #pragma once #include <IWebCore> class MyController : public IControllerInterface < MyController , false > { Q_GADGET $AsController ( MyController ) public : MyController () = default ; $GetMapping ( index , / ) QString index (); }; \u8fd9\u6837\uff0cMyController\u5c31\u4e0d\u4f1a\u751f\u6548\u3002","title":"\u505c\u7528\u6a21\u677f"},{"location":"controller/define_controller/#ixxxinterface","text":"\u5728\u8fd9\u91cc\u63d2\u5165\u4e00\u4e2a\u8bdd\u9898\uff0c\u5c31\u662f\u57fa\u7c7b\u7684\u547d\u540d\u95ee\u9898\u3002 \u5728 IWebCore \u7684\u7f16\u5199\u8fc7\u7a0b\u4e2d\uff0c\u6709\u5f88\u591a\u4e0d\u540c\u529f\u80fd\u7684\u7c7b\uff0c\u5b8f\u6ce8\u89e3\uff0c\u51fd\u6570\uff0c\u547d\u540d\u7a7a\u95f4\u7b49\u7b49\u5185\u5bb9\uff0c\u4e0d\u540c\u7684\u7c7b\u578b\u7684\u5185\u5bb9\u6709\u81ea\u5df1\u72ec\u7279\u7684\u524d\u7f00\u6216\u540e\u7f00\u65b9\u5f0f\uff0c\u8be6\u60c5\u8bf7\u53c2\u8003 \u547d\u540d\u89c4\u5219 \u5bf9\u4e8e\u7c7b\u578b\u63a5\u53e3\uff0c\u63a5\u53e3\u7684\u540d\u79f0\u90fd\u662f IxxxInterface \u8fd9\u79cd\u683c\u5f0f\u7684\uff0c\u6bd4\u5982\u8fd9\u91cc\u7684 IControllerInterface \u4ee5\u540e\u4f1a\u63a5\u89e6\u5230\u7684 IOrmTableInterface , IConfigurationInterface \u7b49\u7b49\u7c7b\u578b\u3002\u6240\u4ee5\u5728\u7f16\u5199\u4ee3\u7801\u7684\u65f6\u5019\uff0cIDE \u4f1a\u7ed9\u51fa\u597d\u591a\u4e2d\u63d0\u793a\uff0c\u6211\u4eec\u4e00\u822c\u662f\u9009\u62e9\u4ee5 Interface \u7ed3\u5c3e\u7684\u540d\u79f0\u4f5c\u4e3a\u57fa\u7c7b\u3002","title":"\u5173\u4e8e IxxxInterface \u547d\u540d\u89c4\u5219\u7684\u95ee\u9898"},{"location":"controller/define_controller/#q_gadget","text":"\u5728 MyController.h \u7b2c8\u884c\u6709 Q_GADGET \u58f0\u660e\u3002 \u5173\u4e8e Q_GADGET \u7684\u5185\u5bb9\u53ef\u4ee5\u67e5\u770b Qt \u53cd\u5c04\u4e0e Q_GADGET ,\u8fd9\u91cc\u7b80\u8981\u4f5c\u4e3a\u8bf4\u660e\u3002 Q_GADGET \u6709\u4e24\u70b9\u4f5c\u7528 \u7b2c\u4e00,\u662fQt\u5b9e\u73b0\u53cd\u5c04\u7684\u57fa\u7840\u3002 \u6709\u719f\u6089Qt \u7684\u5f00\u53d1\u8005\u63a5\u89e6\u6700\u591a\u7684\u5e94\u8be5\u662f Q_OBJECT\u3002 \u800cQ_GADGET \u662f\u4e00\u4e2a\u8f7b\u91cf\u7ea7\u7684Q_OBJECT\uff0c\u5b83\u5305\u542bQt\u53cd\u5c04\u6240\u9700\u8981\u7684\u6700\u5c0f\u96c6\u5408\u3002 1 2 3 4 5 6 7 8 9 10 11 #define Q_GADGET \\ public: \\ static const QMetaObject staticMetaObject; \\ void qt_check_for_QGADGET_macro(); \\ typedef void QtGadgetHelper; \\ private: \\ QT_WARNING_PUSH \\ Q_OBJECT_NO_ATTRIBUTES_WARNING \\ Q_DECL_HIDDEN_STATIC_METACALL static void qt_static_metacall(QObject *, QMetaObject::Call, int, void **); \\ QT_WARNING_POP \\ QT_ANNOTATE_CLASS(qt_qgadget, \"\") \u53ef\u4ee5\u770b\u89c1\u5b83\u91cc\u9762\u5305\u542b\u4e86\u4e00\u4e2a staticMetaObject\u5bf9\u8c61\u3002\u8fd9\u4e2a\u5bf9\u8c61\u91cc\u9762\u80fd\u591f\u53cd\u5c04\u51fa\u7c7b\u5f53\u4e2d\u88ab\u6807\u8bb0\u51fa\u6765\u7684 classinfo,method,property,enum, className \u7b49\u4fe1\u606f\uff0c\u4f7f\u7528\u8fd9\u4e9b\u4fe1\u606f\u5c31\u53ef\u4ee5\u64cd\u7eb5\u8fd9\u4e2a\u7c7b\u7684\u5bf9\u8c61\u3002 \u7b2c\u4e8c\uff0c Qt \u5f53\u4e2d\u6709 moc \u7f16\u8bd1\u5668\uff0c\u8fd9\u4e2amoc \u7f16\u8bd1\u5668\u7684\u4f5c\u7528\u5c31\u662f\u6839\u636e\u5f53\u524d\u88ab\u6807\u8bb0\u6709Q_GADGET \u6216\u8005Q_OBJECT\u7684\u7c7b\u58f0\u660e\uff0c\u751f\u6210\u4e00\u4e2a\u5e26\u6709\u7c7b\u4fe1\u606f\u7684moc_xxx.cpp\u6587\u4ef6\u3002\u4f9b staticMetaObject \u6765\u89e3\u6790\u3002 \u6240\u4ee5\u8fd9\u91cc\u6211\u4eec\u4f7f\u7528 Q_GADGET \u8fd9\u4e2a\u5b8f\u5f88\u660e\u663e\u7684\u4f5c\u7528\u5c31\u662f\u8981\u4f7f MyController \u8fd9\u4e2a\u7c7b\u80fd\u591f\u88ab\u53cd\u5c04\uff0c\u5176\u5185\u90e8\u7ed3\u6784\u80fd\u591f\u88ab\u638c\u63e1\u3002\u6bd4\u5982\u8bf4\uff0c\u6211\u4eec\u5728\u8fd9\u91cc\u4f7f\u7528\u7684 $GetMapping \u6240\u6807\u8bb0\u7684 url \u548c\u51fd\u6570 index \u4e4b\u95f4\u7684\u6620\u5c04\u4fe1\u606f\uff1b\u51fd\u6570 index \u7684\u4fe1\u606f\u7b49\u3002 \u603b\u800c\u8a00\u4e4b\uff0c\u6211\u4eec\u8fd9\u91cc\u4f7f\u7528Q_GADGET\u7684\u4f5c\u7528\u4f7f\u8fd9\u4e2a\u7c7b\u80fd\u591f\u88ab\u53cd\u5c04\u5230\u3002","title":"Q_GADGET"},{"location":"controller/define_controller/#ascontroller","text":"\u5728 MyController.h \u4e2d\u95f4\u7b2c9 \u884c\u51fa\u73b0 $AsController(MyController) \u3002\u8fd9\u540c\u6837\u4f7f\u4e00\u4e2a\u5b8f\u6ce8\u89e3\uff0c\u548c\u6700\u4e0a\u9762\u7684 @RestController \u5927\u6982\u610f\u601d\u662f\u76f8\u540c\u7684\uff0c\u90fd\u662f\u7528\u6765\u6807\u8bb0\u8fd9\u662f\u4e00\u4e2acontroller\u3002\u4e0d\u8fc7 $AsController \u9700\u8981\u81f3\u5c11\u4e00\u4e2a\u53c2\u6570\u3002","title":"$AsController"},{"location":"controller/define_controller/#ascontroller_1","text":"AsController \u5b8f\u6ce8\u89e3\u6709\u4e24\u79cd\u91cd\u8f7d\u5f62\u5f0f\uff0c\u5206\u522b\u4e3a\uff1a #define $AsController_1(klassName) \u53ea\u6709\u4e00\u4e2a\u53c2\u6570\u7684 $AsController \u4f20\u5165\u7684\u662f\u7c7b\u7684\u540d\u79f0\u3002 klassName \u540d\u79f0\u7684\u4f20\u5165\u76ee\u7684\u662f\u5728 \u5b8f\u6ce8\u89e3 \u5f53\u4e2d\u5b9e\u73b0\u4e00\u4e9b controller \u5f53\u4e2d\u5171\u540c\u7684\u51fd\u6570\uff0c\u6bd4\u5982\u8bf4\u5b9a\u4e49\u5355\u4f8b\uff0c\u91cd\u8f7d\u57fa\u7c7b\u7684\u76f8\u5173\u51fd\u6570\u7b49\u3002 #define $AsController_2(klassName, path) \u6709\u4e24\u4e2a\u53c2\u6570\u7684 $AsController \u7b2c\u4e00\u4e2a\u53c2\u6570\u4f20\u5165\u7684\u662f\u7c7b\u7684\u540d\u79f0\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u5219\u662f\u8fd9\u4e2a controller \u6240\u6709\u7684url \u6620\u5c04\u7684\u524d\u7f00\u3002 \u6bd4\u5982\u8bf4\u5f53path \u7684\u53c2\u6570\u662f abc , \u90a3\u4e48\u5728\u8fd9\u4e2a\u51fd\u6570\u4e2d\u95f4\u6620\u5c04\u7684\u6240\u6709url \u7684\u524d\u9762\u90fd\u8981\u52a0\u4e0a abc \u3002\u6bd4\u5982\u8bf4\u5f53 $GetMapping \u7684url \u53c2\u6570\u662f hello , \u90a3\u4e48\u5176\u5b9e\u9645\u6620\u5c04\u7684url \u5c31\u662f /abc/hello \u8fd9\u91cc\u4f7f\u7528\u4e86 \u5b8f\u91cd\u8f7d \u7684\u6280\u672f\uff0c\u6709\u4e0d\u4e86\u89e3\u800c\u60f3\u4e86\u89e3\u7684\u5f00\u53d1\u8005\u53ef\u4ee5\u81ea\u884c\u5b66\u4e60\u3002 \u540c\u6837\uff0c $AsXXX \u4e5f\u662f\u4e00\u79cd\u547d\u540d\u89c4\u8303\uff0c\u8bf7\u53c2\u8003 \u547d\u540d\u89c4\u8303","title":"$AsController \u7684\u4e24\u79cd\u5f62\u5f0f\u3002"},{"location":"controller/define_controller/#_6","text":"\u5728 MyController.h \u768413-14\u884c\u58f0\u660e\u5982\u4e0b 1 2 $GetMapping ( index , / ) QString index (); \u8fd9\u91cc\u7684\u4f5c\u7528\u662f\u58f0\u660e\u4e00\u4e2aindex\u51fd\u6570\u5e76\u5c06 index \u51fd\u6570\u6620\u5c04\u5230 / \u7684url \u4e0a\u9762\uff0c index \u51fd\u6570\u8fd4\u56de\u4e00\u4e2a\u5b57\u7b26\u4e32\u3002","title":"\u58f0\u660e\u6620\u5c04\u51fd\u6570"},{"location":"controller/define_controller/#xxxmapping","text":"$GetMapping \u662f\u6620\u5c04\u5230 GET \u8bf7\u6c42\u5f53\u4e2d\u3002\u9664\u6b64\u4ee5\u5916\u8fd8\u6709\u53e6\u5916\u96c6\u4e2d mapping \u5b8f\u6ce8\u89e3 $PostMapping \u7528\u4e8e\u6620\u5c04POST \u8bf7\u6c42 $PutMapping \u7528\u4e8e\u6620\u5c04PUT \u8bf7\u6c42 $DeleteMapping \u7528\u4e8e\u6620\u5c04DELETE \u8bf7\u6c42 PatchMapping \u7528\u4e8e\u6620\u5c04PATCH\u8bf7\u6c42 \u9664\u8fd9\u4e9b\u5e38\u89c4\u8bf7\u6c42\u4ee5\u5916\uff0c\u8fd8\u6709\u4e00\u79cd OPTION \u8bf7\u6c42\u548c HEAD \u8bf7\u6c42\u3002 \u6839\u636e rfc, HEAD \u8bf7\u6c42\u4f1a\u88ab\u89e3\u6790\u6210 GET \u8bf7\u6c42\uff0c\u8fd4\u56de\u9996\u884c\u548cheaders,\u4f46\u662f\u4e0d\u53cd\u56debody \u5185\u5bb9\u3002\u6240\u4ee5\u8fd9\u79cd\u8bf7\u6c42\u4e0d\u9700\u8981\u5355\u72ec\u4f7f\u7528\u5b8f\u6ce8\u89e3 OPTIONS \u8bf7\u6c42\u4f1a\u8fd4\u56de\u5f53\u524durl\u6240\u652f\u6301\u7684\u8bf7\u6c42\u7c7b\u578b\uff0c\u540c\u6837\u4e0d\u9700\u8981\u5b8f\u6ce8\u89e3\u3002 \u53e6\u5916\uff0c\u5728\u53e6\u5916\u4e00\u79cdController \u7c7b\u578b, IStatusController \u7c7b\u578b\u5f53\u4e2d\uff0c\u6709 $StatusMapping\u6ce8\u89e3\uff0c\u8fd9\u91cc\u53ea\u5217\u4e0d\u8868\u3002 \u8fd9\u4e9b $xxxMapping\u81f3\u5c11\u9700\u8981\u4e00\u4e2a\u53c2\u6570\u3002\u6211\u4eec\u4ee5 $GetMapping \u4e3a\u4f8b\uff0c\u5220\u51cf\u4e86\u90e8\u5206\u4ee3\u7801\uff0c\u5176\u5b9a\u4e49\u5982\u4e0b 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 #define $GetMapping_1(funName) \\ $GetMappingDeclare(funName) \\ Q_INVOKABLE #define $GetMapping_2(funName, url1) \\ $GetMappingDeclare(funName, url1) \\ Q_INVOKABLE #define $GetMapping_3(funName, url1, url2) \\ $GetMappingDeclare(funName, url1, url2) \\ Q_INVOKABLE #define $GetMapping_4(funName, url1, url2, url3) \\ $GetMappingDeclare(funName, url1, url2, url3) \\ Q_INVOKABLE #define $GetMapping_5(funName, url1, url2, url3, url4) \\ $GetMappingDeclare(funName, url1, url2, url3, url4) \\ Q_INVOKABLE #define $GetMapping_6(funName, url1, url2, url3, url4, url5) \\ $GetMappingDeclare(funName, url1, url2, url3, url4, url5) \\ Q_INVOKABLE #define $GetMapping_7(funName, url1, url2, url3, url4, url5, url6) \\ $GetMappingDeclare(funName, url1, url2, url3, url4, url5, url6) \\ Q_INVOKABLE #define $GetMapping_8(funName, url1, url2, url3, url4, url5, url6, url7) \\ $GetMappingDeclare(funName, url1, url2, url3, url4, url5, url6, url7) \\ Q_INVOKABLE #define $GetMapping_9(funName, url1, url2, url3, url4, url5, url6, url7, url8) \\ $GetMappingDeclare(funName, url1, url2, url3, url4, url5, url6, url7, url8) \\ Q_INVOKABLE #define $GetMapping_(N) $GetMapping_##N #define $GetMapping_EVAL(N) $GetMapping_(N) #define $GetMapping(...) PP_EXPAND( $GetMapping_EVAL(PP_EXPAND( PP_NARG(__VA_ARGS__) ))(__VA_ARGS__) ) \u53ef\u4ee5\u770b\u89c1\u7b2c\u4e00\u4e2a\u53c2\u6570\u6c38\u8fdc\u65f6 \u5bf9\u5e94\u7684\u51fd\u6570\u540d\u79f0\uff0c \u5426\u5219\u5c31\u4e0d\u6b63\u786e\u3002 \u5f53\u53ea\u6709\u4e00\u4e2a\u53c2\u6570\u65f6\uff0c\u5bf9\u5e94\u7684\u51fd\u6570\u6620\u5c04\u5230\u5f53\u524dcontroller \u7684\u6839\u76ee\u5f55\u3002\u4e5f\u5c31\u662f / \u76ee\u5f55\u3002\u5f53controller \u6ca1\u6709\u6307\u5b9a\u76ee\u5f55\u65f6\uff0c \u7b2c2\u4e2a\u5230\u7b2c9\u4e2a\u53c2\u6570\u662f \u4e0d\u540c\u7684url,\u6700\u591a\u4e00\u5171\u53ef\u4ee5\u67098\u4e2a\u4e0d\u540c\u7684url\u6620\u5c04\u5230\u540c\u4e00\u4e2a\u51fd\u6570\u5f53\u4e2d\u3002","title":"$XxxMapping"},{"location":"controller/define_controller/#url-pattern","text":"\u5199\u5728 $XxxMapping \u4e2d\u7684url \u4e0d\u4ec5\u662f\u9759\u6001\u7684\uff0c\u800c\u4e14\u662f\u53ef\u4ee5\u52a8\u6001\u6620\u5c04\u7684\u3002\u6bd4\u5982\u5f53 url \u662f /<name:string>/<age:int> \u8fd9\u79cd\u683c\u5f0f\u65f6\uff0c\u5b83\u8868\u793aurl \u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u65f6 string \u7c7b\u578b\u7684\uff0c\u800c\u6620\u5c04\u7cfb\u7edf\u4f1a\u4fdd\u7559\u8fd9\u4e2a\u53c2\u6570\u4ee5 name \u7684\u5f62\u5f0f\u4f20\u7ed9\u51fd\u6570\u3002\u7b2c\u4e8c\u4e2a\u53c2\u6570 <age:int> \u5219\u8868\u793a\u8fd9\u4e2a\u53c2\u6570\u5fc5\u987b\u80fd\u591f\u8f6c\u6362\u6210 int \u7c7b\u578b\uff0c\u5982\u679c\u8f6c\u6362\u4e0d\u6210\uff0c\u8fd9\u4e2aurl\u5c31\u4e0d\u4f1a\u88ab\u5339\u914d\u3002\u7b2c\u4e8c\u4e2a\u53c2\u6570\u4f1a\u88ab\u8d4b\u503c\u5230 name, \u4f20\u7ed9 \u51fd\u6570\u4f7f\u7528\u3002 \u5173\u4e8e\u5177\u4f53\u7684url\u5982\u4f55\u4f7f\u7528\uff0c\u8bf7\u53c2\u8003 Url \u5b9a\u4e49","title":"url pattern"},{"location":"controller/define_controller/#q_invokable","text":"\u5728 Qt \u7684\u5143\u5bf9\u8c61\u7cfb\u7edf\u5f53\u4e2d\uff0c\u5982\u4f55\u8ba9\u4e00\u4e2a\u5185\u90e8\u7684\u51fd\u6570\u88ab\u5bf9\u8c61\u7cfb\u7edf\u4e86\u89e3\uff0c\u5e76\u4e14\u80fd\u591f\u505a\u51fa\u53cd\u5c04\uff1f \u7b54\u6848\u5c31\u662f\u5728\u8fd9\u4e2a\u51fd\u6570\u9762\u524d\u6dfb\u52a0 Q_INVOKABLE \u3002 \u5f53\u51fd\u6570\u6dfb\u52a0 Q_INVOKABLE \u4e4b\u540e\uff0c moc \u5de5\u5177\u4f1a\u8bb0\u5f55\u5f53\u524d\u51fd\u6570\u7684\u6240\u6709\u4fe1\u606f\uff0c\u751f\u6210\u5728 moc_xxx.cpp \u6587\u4ef6\u5f53\u4e2d\u3002\u8bb0\u5f55\u7684\u4fe1\u606f\u5305\u62ec\u4f46\u4e0d\u9650\u4e8e \u51fd\u6570\u540d\u79f0\uff0c\u51fd\u6570\u7b7e\u540d \u51fd\u6570\u8fd4\u56de\u503c\u548c\u8fd4\u56de\u503c\u7c7b\u578b\u548c \u5bf9\u8c61\u8fd4\u56de\u503c\u7c7b\u578b\u7684 MetaType \u51fd\u6570\u5404\u4e2a\u53c2\u6570\u7c7b\u578b\uff0c\u53c2\u6570\u540d\u79f0\u548c\u53c2\u6570\u7c7b\u578b\u7684 MetaType \u51fd\u6570\u7684\u5f15\u7528\u672c\u8eab\uff0c\u662f\u51fd\u6570\u53ef\u4ee5\u901a\u8fc7 invokeOnGadget \u88ab\u8c03\u7528\u3002 \u8fd9\u4e2a\u4e5f\u662f Qt signal/slots\u7684\u57fa\u7840\u4e4b\u4e00\u3002\u4e0d\u8fc7\u5728\u5b9e\u73b0 IWebCore \u65f6\uff0c\u5e76\u6ca1\u6709\u4f7f\u7528 signal/slots\uff0c\u800c\u662f\u4f7f\u7528\u4e86\u539f\u59cb\u7684\u53cd\u5c04\u7cfb\u7edf\uff0csignal/slots \u4f7f\u7528\u8d77\u6765\u53cd\u800c\u4e0d\u65b9\u4fbf\u3002 \u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u770b\u89c1\uff0c\u6240\u6709\u7684 $XxxMapping \u5b8f\u6ce8\u89e3\u540e\u9762\u90fd\u6709\u4e00\u4e2a Q_INVOKABLE \u8ddf\u7740\u3002\u8fd9\u4e2a\u4e5f\u5c31\u610f\u5473\u7740\u5b8f\u6ce8\u89e3\u540e\u9762\u5f97\u8ddf\u4e0a\u4e00\u4e2a\u51fd\u6570\uff0c\u5426\u5219\u7f16\u8bd1\u5668\u5728\u5b8f\u5904\u7406\u8fd9\u4e2a\u9636\u6bb5\u5c31\u4f1a\u62a5\u9519\uff0c\u540c\u6837\uff0c $XxxMapping \u4e0d\u80fd\u5806\u53e0\u4f7f\u7528\u3002\u8fd9\u4e2a\u4e5f\u4f1a\u62a5\u9519\u3002 \u51e1\u662f\u90fd\u6709\u4f8b\u5916\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u4f7f\u7528 $MappingDeclare \u8fd9\u79cd\u5f62\u5f0f\u6765\u8fdb\u884c\u5b9a\u4e49 \u3002\u6bd4\u5982\u6211\u4eec\u60f3\u8ba9\u4e00\u4e2a\u51fd\u6570\u6709\u591a\u4e2a \u80fd\u591f\u5339\u914d\u591a\u4e2a\u7c7b\u578b\u7684\u8c03\u7528\uff0c\u6211\u4eec\u53ef\u4ee5\u5199\u4ee3\u7801\u5982\u4e0b 1 2 3 4 5 6 $GetMappingDeclare ( index , / ) $PostMappingDeclare ( index , / ) $PutMappingDeclare ( index , / ) $DeleteMappingDeclare ( index , / ) $PatchMappingDeclare ( index , / ) Q_INVOKABLE IJsonResponse index (); \u8fd9\u6837\uff0c\u6240\u6709\u7684\u8bf7\u6c42\u90fd mapping \u5230 index \u51fd\u6570\u3002","title":"Q_INVOKABLE"},{"location":"controller/define_controller/#_7","text":"\u6620\u5c04\u51fd\u6570\u662f\u6307\u88ab url \u6620\u5c04\u7684\u51fd\u6570\u3002\u5b83\u6709\u7279\u5b9a\u7684\u8981\u6c42\uff0c\u6bd4\u5982\u8bf4\u4e0d\u80fd\u662f\u91cd\u8f7d\u51fd\u6570\uff0c\u51fd\u6570\u53c2\u6570\u4e0d\u80fd\u6709\u9ed8\u8ba4\u503c\u7b49\u7b49\u7684\u8981\u6c42\u3002\u8fd9\u91cc\u4e0d\u505a\u8be6\u7ec6\u7684\u8bb2\u89e3\uff0c\u5177\u4f53\u8bf7\u770b \u6620\u5c04\u51fd\u6570 \u3002\u8fd9\u4e00\u7ae0\u8282\u3002 \u5728 MyController \u6848\u4f8b\u4e2d\uff0c\u51fd\u6570\u8fd4\u56de\u503c\u662f QString \u7c7b\u578b\u3002\u5728\u89e3\u6790\u7684\u8fc7\u7a0b\u4e2d\uff0c QString \u7c7b\u578b\u7684\u4e00\u822c\u5c06\u88ab\u89e3\u6790\u6210 plain/text \u8fd9\u6837\u7684 mime \u7c7b\u578b\uff0c \u8868\u793a\u8fd9\u662f\u4e00\u4e2a\u666e\u901a\u7684\u5b57\u7b26\u4e32\u7c7b\u578b\u3002 \u5267\u900f\u4e00\u70b9\uff1a\u5982\u679c \u8fd4\u56de\u7684\u5b57\u7b26\u4e32 \u662f \"$json:[1,2,3,4]\", \u90a3\u4e48\u8fd4\u56de\u7684\u7c7b\u578b\u662f json \u7c7b\u578b\u7684\u3002\u8fd4\u56dejson\u7c7b\u578b\u7684\u6570\u636e\u4e5f\u53ef\u4ee5\u4f7f\u7528 IJsonResponse \u8fd9\u6837\u7684\u7c7b\u578b\uff0c\u8fd4\u56de QJsonObject,\u7b49\uff0c \u4e5f\u53ef\u4ee5\u4f7f\u7528 \"[1,2,3]\"_json \u8fd9\u79cd\u683c\u5f0f\u8fd4\u56de\u3002","title":"\u6620\u5c04\u51fd\u6570"},{"location":"controller/define_controller/#_8","text":"\u5173\u4e8eController\u7684\u8be6\u7ec6\u8bb2\u89e3\u5230\u6b64\u4e3a\u6b62\u3002\u4e4b\u540e\u7684\u5185\u5bb9\uff0c\u5982 Q_GADGET \u8fd9\u79cd\u4e1c\u897f\u4f1a\u9ed8\u8ba4\u5f00\u53d1\u8005\u5df2\u7ecf\u4e86\u89e3\u3002\u5982\u679c\u6709\u4e0d\u6e05\u695a\u7684\u53ef\u4ee5\u56de\u5934\u770b\u770b\u8fd9\u4e00\u7ae0\u8282\uff0c\u6216\u8005\u770b\u770b Qt Documentation | Home \u3002\u5f53\u7136\u628a\u5b83\u5f53\u4f5c\u88c5\u9970\u6027\u7684\u4e1c\u897f\u4e5f\u5e76\u4e0d\u5f71\u54cd\u5f00\u53d1\u3002","title":"\u603b\u7ed3"},{"location":"controller/mapped_function/","text":"\u5904\u7406\u51fd\u6570 \u00b6 \u5904\u7406\u51fd\u6570\u662f\u76f4\u63a5\u5904\u7406request\u8bf7\u6c42\u7684\u51fd\u6570\uff0c\u8be5\u51fd\u6570\u5199\u5728 Controller \u7c7b\u4e2d\uff0c\u5e76\u4e14\u88ab $xxxMapping \u7684\u5b8f\u6ce8\u89e3\u6240\u6ce8\u89e3\u3002\u5176\u4e2d $xxxMapping \u8bf7\u53c2\u8003 \u5b9a\u4e49\u63a7\u5236\u5668 \u548c Url \u89c4\u5219 \u4e24\u4e2a\u90e8\u5206\u3002\u8fd9\u4e00\u90e8\u5206\u4e13\u95e8\u8bb2\u8bf4\u5904\u7406\u51fd\u6570\u3002 \u5904\u7406\u51fd\u6570\u8fd9\u91cc\u53ea\u8bb2\u8bf4\u4e00\u90e8\u5206\uff0c\u5f00\u4e00\u4e2a\u5934\uff0c\u5176\u4e2d\u53e6\u5916\u7684\u90e8\u5206\u5728\u5982\u4e0b\u4e24\u4e2a\u7ae0\u8282\u63cf\u8ff0\u3002 \u51fd\u6570\u8fd4\u56de\u7c7b\u578b \u51fd\u6570\u53c2\u6570s \u8bf7\u6c42\u4e0e\u54cd\u5e94\u7c7b \u6211\u4eec\u5148\u5199\u4e00\u4e2a\u5904\u7406\u51fd\u6570: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 #pragma once #include <IWebCore> #include \"UserTable.h\" class MyController : public IControllerInterface < MyController > { public : MyController () = default ; $GetMapping ( fun1 , / fun1 ) QString fun1 (); $GetMapping ( fun2 , / fun2 ) QString fun2 (); $GetMapping ( fun3 , / fun3 ) IJsonResponse fun3 ( $Param ( UserTable , userTable )); $GetMapping ( fun4 , / fun5 ) IJsonResponse fun4 (); $GetMapping ( fun5 , / fun5 ) IJsonResponse fun5 (); $GetMapping ( fun6 , / fun6 ) void fun6 ( IRequest & request , IResponse & response ); }; \u6211\u4eec\u6682\u65f6\u5b9a\u4e49\u4e86\u516d\u4e2a\u6620\u5c04\u51fd\u6570,fun1-fun6\u3002\u4ed6\u4eec\u7684\u5b9e\u73b0\u5982\u4e0b: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 #include \"MyController.h\" QString MyController::fun1 () { return \"hello world\" ; } QString MyController::fun2 () { return \"$json:[1,2,3,4,5,6]\" ; } IJsonResponse MyController::fun3 ( $Param ( UserTable , userTable )) { return userTable_param ; } IJsonResponse MyController::fun4 () { QJsonObject obj ; obj [ \"name\" ] = \"yuekeyuan\" ; obj [ \"masterPiece\" ] = \"IWebCore\" ; obj [ \"expactation\" ] = \"world famouse\" ; return obj ; } IJsonResponse MyController::fun5 () { QList < UserTable > tables ; UserTable table1 ; tables . append ( table1 ); tables . append ( UserTable {}); return tables ; } void MyController::fun6 ( IRequest & request , IResponse & response ) { Q_UNUSED ( request ) response . setStatus ( IHttpStatus :: OK_200 ); response . setMime ( IHttpMime :: TEXT_PLAIN_UTF8 ); response << \"hello world\" ; } \u5e0c\u671b\u5199\u8fd9\u591a\u7684\u4ee3\u7801\u8bfb\u8005\u4e0d\u8981\u89c9\u5f97\u538c\u70e6\u3002\u6211\u4eec\u7528\u8fd9\u51e0\u4e2a\u51fd\u6570\u5c55\u793a\u4ee5\u4e0b\u5982\u4f55\u63a5\u6536\uff0c\u5904\u7406\uff0c\u5e76\u8fd4\u56de\u4e00\u4e2arequest\u3002\u4e2d\u95f4\u53ef\u80fd\u4f1a\u8ba9\u8bfb\u8005\u7ffb\u770b\u8fd9\u91cc\u7684\u4ee3\u7801\u3002 \u8fd4\u56de\u503c\u548c\u8fd4\u56de\u503c\u7c7b\u578b \u00b6 \u5728\u4e0a\u9762\u7684\u4ee3\u7801\u5c55\u793a\u4e2d\uff0c\u6211\u4eec\u770b\u5230\u4e86\u8fd4\u56de\u503c\u7c7b\u578b\u3002 QString , IJsonResponse , \u548c void \u3002function\u5141\u8bb8\u7684\u8fd4\u56de\u503c\u7c7b\u578b\u5e76\u4e0d\u6b62\u8fd9\u4e48\u591a\uff0c\u4e0b\u9762\u8be6\u7ec6\u5217\u51fa\u4e86\u8fd4\u56de\u503c\u7c7b\u578b\uff0c \u8fd9\u4e9b\u5728 \u51fd\u6570\u8fd4\u56de\u7c7b\u578b \u8fd8\u4f1a\u518d\u63d0\u5230\u3002 \u57fa\u7840\u7c7b\u578b: void\uff0c int Qt\u5185\u7f6e\u7c7b\u578b\uff0c QString, QJsonValue, QJsonArray, QJsonObject, QJsonValue, QByteArray\u3002 \u5185\u7f6e\u81ea\u5b9a\u4e49\u7c7b\u578b, IByteArrayResponse, IHtmlResponse, IJsonResponse, IPlainTextResponse, IRedirectResponse, IStatusCodeResponse. \u5f53\u7136\uff0c\u5f00\u53d1\u8005\u4e5f\u53ef\u4ee5\u5b9a\u4e49\u81ea\u5df1\u7684\u8fd4\u56de\u503c\u7c7b\u578b\uff0c \u6bd4\u5982\uff0c\u5b9a\u4e49\u4e00\u4e2a IFileResponse , \u8fd4\u56de\u4e00\u4e2a\u6587\u4ef6\u7b49\u3002 IWebCore \u8fd9\u91cc\u5bf9\u524d\u4e24\u79cd\u7c7b\u578b\u505a\u4e86\u7279\u6b8a\u7684\u89e3\u91ca\u548c\u89c4\u5b9a \u5f53\u8fd4\u56de\u503c\u4e3a void\u65f6\uff0c\u4ed6\u7684\u53c2\u6570\u5f53\u4e2d\u5fc5\u987b\u542b\u6709 IResponse& \u7684\u53c2\u6570\u7c7b\u578b\uff0c\u76ee\u7684\u662f\u4e3a\u4e86\u4f7f\u51fd\u6570\u80fd\u591f\u5411\u5916\u6709\u8f93\u51fa\u3002 \u4f8b\u5982 fun6 \u3002\u5982\u679c\u6ca1\u6709\u8fd9\u4e2a\u7c7b\u578b\u7684\u53c2\u6570\uff0c\u7a0b\u5e8f\u5728\u8fd0\u884c\u521d\u671f\u68c0\u67e5\u7684\u65f6\u5019\u4f1a\u4e3b\u52a8\u62a5\u9519\u5e76\u7ed9\u51fa\u63d0\u793a\u4fe1\u606f\u3002 \u5f53\u8fd4\u56de\u503c \u4e3a int \u65f6\uff0c \u8fd9\u4e2aint \u503c\u662f\u6307\u72b6\u6001\u7801\uff0c\u8be6\u89c1 Http\u72b6\u6001\u7801 \u3002\u5f53\u8fd4\u56de\u503c\u6ca1\u6709\u5728\u4ee3\u7801\u7684\u72b6\u6001\u7801\u4e2d\u5b9a\u4e49\u7684\uff0c \u8fd9\u4e2a\u72b6\u6001\u503c\u5c06\u88ab\u8f6c\u6362\u6210 1024 UNKNOWN \u5f53 \u7c7b\u578b\u662f QJsonXXX \u7cfb\u5217\u7684\u65f6, \u4f1a\u88ab\u8f6c\u6362\u6210 IJsonResponse \u7c7b\u578b\u3002 QByteArray \u4f1a\u88ab\u8f6c\u6362\u6210 IByteArrayResponse \u7c7b\u578b\u8fdb\u884c\u8fd4\u56de\u3002 \u5f53","title":"\u5904\u7406\u51fd\u6570"},{"location":"controller/mapped_function/#_1","text":"\u5904\u7406\u51fd\u6570\u662f\u76f4\u63a5\u5904\u7406request\u8bf7\u6c42\u7684\u51fd\u6570\uff0c\u8be5\u51fd\u6570\u5199\u5728 Controller \u7c7b\u4e2d\uff0c\u5e76\u4e14\u88ab $xxxMapping \u7684\u5b8f\u6ce8\u89e3\u6240\u6ce8\u89e3\u3002\u5176\u4e2d $xxxMapping \u8bf7\u53c2\u8003 \u5b9a\u4e49\u63a7\u5236\u5668 \u548c Url \u89c4\u5219 \u4e24\u4e2a\u90e8\u5206\u3002\u8fd9\u4e00\u90e8\u5206\u4e13\u95e8\u8bb2\u8bf4\u5904\u7406\u51fd\u6570\u3002 \u5904\u7406\u51fd\u6570\u8fd9\u91cc\u53ea\u8bb2\u8bf4\u4e00\u90e8\u5206\uff0c\u5f00\u4e00\u4e2a\u5934\uff0c\u5176\u4e2d\u53e6\u5916\u7684\u90e8\u5206\u5728\u5982\u4e0b\u4e24\u4e2a\u7ae0\u8282\u63cf\u8ff0\u3002 \u51fd\u6570\u8fd4\u56de\u7c7b\u578b \u51fd\u6570\u53c2\u6570s \u8bf7\u6c42\u4e0e\u54cd\u5e94\u7c7b \u6211\u4eec\u5148\u5199\u4e00\u4e2a\u5904\u7406\u51fd\u6570: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 #pragma once #include <IWebCore> #include \"UserTable.h\" class MyController : public IControllerInterface < MyController > { public : MyController () = default ; $GetMapping ( fun1 , / fun1 ) QString fun1 (); $GetMapping ( fun2 , / fun2 ) QString fun2 (); $GetMapping ( fun3 , / fun3 ) IJsonResponse fun3 ( $Param ( UserTable , userTable )); $GetMapping ( fun4 , / fun5 ) IJsonResponse fun4 (); $GetMapping ( fun5 , / fun5 ) IJsonResponse fun5 (); $GetMapping ( fun6 , / fun6 ) void fun6 ( IRequest & request , IResponse & response ); }; \u6211\u4eec\u6682\u65f6\u5b9a\u4e49\u4e86\u516d\u4e2a\u6620\u5c04\u51fd\u6570,fun1-fun6\u3002\u4ed6\u4eec\u7684\u5b9e\u73b0\u5982\u4e0b: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 #include \"MyController.h\" QString MyController::fun1 () { return \"hello world\" ; } QString MyController::fun2 () { return \"$json:[1,2,3,4,5,6]\" ; } IJsonResponse MyController::fun3 ( $Param ( UserTable , userTable )) { return userTable_param ; } IJsonResponse MyController::fun4 () { QJsonObject obj ; obj [ \"name\" ] = \"yuekeyuan\" ; obj [ \"masterPiece\" ] = \"IWebCore\" ; obj [ \"expactation\" ] = \"world famouse\" ; return obj ; } IJsonResponse MyController::fun5 () { QList < UserTable > tables ; UserTable table1 ; tables . append ( table1 ); tables . append ( UserTable {}); return tables ; } void MyController::fun6 ( IRequest & request , IResponse & response ) { Q_UNUSED ( request ) response . setStatus ( IHttpStatus :: OK_200 ); response . setMime ( IHttpMime :: TEXT_PLAIN_UTF8 ); response << \"hello world\" ; } \u5e0c\u671b\u5199\u8fd9\u591a\u7684\u4ee3\u7801\u8bfb\u8005\u4e0d\u8981\u89c9\u5f97\u538c\u70e6\u3002\u6211\u4eec\u7528\u8fd9\u51e0\u4e2a\u51fd\u6570\u5c55\u793a\u4ee5\u4e0b\u5982\u4f55\u63a5\u6536\uff0c\u5904\u7406\uff0c\u5e76\u8fd4\u56de\u4e00\u4e2arequest\u3002\u4e2d\u95f4\u53ef\u80fd\u4f1a\u8ba9\u8bfb\u8005\u7ffb\u770b\u8fd9\u91cc\u7684\u4ee3\u7801\u3002","title":"\u5904\u7406\u51fd\u6570"},{"location":"controller/mapped_function/#_2","text":"\u5728\u4e0a\u9762\u7684\u4ee3\u7801\u5c55\u793a\u4e2d\uff0c\u6211\u4eec\u770b\u5230\u4e86\u8fd4\u56de\u503c\u7c7b\u578b\u3002 QString , IJsonResponse , \u548c void \u3002function\u5141\u8bb8\u7684\u8fd4\u56de\u503c\u7c7b\u578b\u5e76\u4e0d\u6b62\u8fd9\u4e48\u591a\uff0c\u4e0b\u9762\u8be6\u7ec6\u5217\u51fa\u4e86\u8fd4\u56de\u503c\u7c7b\u578b\uff0c \u8fd9\u4e9b\u5728 \u51fd\u6570\u8fd4\u56de\u7c7b\u578b \u8fd8\u4f1a\u518d\u63d0\u5230\u3002 \u57fa\u7840\u7c7b\u578b: void\uff0c int Qt\u5185\u7f6e\u7c7b\u578b\uff0c QString, QJsonValue, QJsonArray, QJsonObject, QJsonValue, QByteArray\u3002 \u5185\u7f6e\u81ea\u5b9a\u4e49\u7c7b\u578b, IByteArrayResponse, IHtmlResponse, IJsonResponse, IPlainTextResponse, IRedirectResponse, IStatusCodeResponse. \u5f53\u7136\uff0c\u5f00\u53d1\u8005\u4e5f\u53ef\u4ee5\u5b9a\u4e49\u81ea\u5df1\u7684\u8fd4\u56de\u503c\u7c7b\u578b\uff0c \u6bd4\u5982\uff0c\u5b9a\u4e49\u4e00\u4e2a IFileResponse , \u8fd4\u56de\u4e00\u4e2a\u6587\u4ef6\u7b49\u3002 IWebCore \u8fd9\u91cc\u5bf9\u524d\u4e24\u79cd\u7c7b\u578b\u505a\u4e86\u7279\u6b8a\u7684\u89e3\u91ca\u548c\u89c4\u5b9a \u5f53\u8fd4\u56de\u503c\u4e3a void\u65f6\uff0c\u4ed6\u7684\u53c2\u6570\u5f53\u4e2d\u5fc5\u987b\u542b\u6709 IResponse& \u7684\u53c2\u6570\u7c7b\u578b\uff0c\u76ee\u7684\u662f\u4e3a\u4e86\u4f7f\u51fd\u6570\u80fd\u591f\u5411\u5916\u6709\u8f93\u51fa\u3002 \u4f8b\u5982 fun6 \u3002\u5982\u679c\u6ca1\u6709\u8fd9\u4e2a\u7c7b\u578b\u7684\u53c2\u6570\uff0c\u7a0b\u5e8f\u5728\u8fd0\u884c\u521d\u671f\u68c0\u67e5\u7684\u65f6\u5019\u4f1a\u4e3b\u52a8\u62a5\u9519\u5e76\u7ed9\u51fa\u63d0\u793a\u4fe1\u606f\u3002 \u5f53\u8fd4\u56de\u503c \u4e3a int \u65f6\uff0c \u8fd9\u4e2aint \u503c\u662f\u6307\u72b6\u6001\u7801\uff0c\u8be6\u89c1 Http\u72b6\u6001\u7801 \u3002\u5f53\u8fd4\u56de\u503c\u6ca1\u6709\u5728\u4ee3\u7801\u7684\u72b6\u6001\u7801\u4e2d\u5b9a\u4e49\u7684\uff0c \u8fd9\u4e2a\u72b6\u6001\u503c\u5c06\u88ab\u8f6c\u6362\u6210 1024 UNKNOWN \u5f53 \u7c7b\u578b\u662f QJsonXXX \u7cfb\u5217\u7684\u65f6, \u4f1a\u88ab\u8f6c\u6362\u6210 IJsonResponse \u7c7b\u578b\u3002 QByteArray \u4f1a\u88ab\u8f6c\u6362\u6210 IByteArrayResponse \u7c7b\u578b\u8fdb\u884c\u8fd4\u56de\u3002 \u5f53","title":"\u8fd4\u56de\u503c\u548c\u8fd4\u56de\u503c\u7c7b\u578b"},{"location":"controller/request_and_response/","text":"\u8bf7\u6c42\u4e0e\u54cd\u5e94\u7c7b \u00b6","title":"\u8bf7\u6c42\u4e0e\u54cd\u5e94\u7c7b"},{"location":"controller/request_and_response/#_1","text":"","title":"\u8bf7\u6c42\u4e0e\u54cd\u5e94\u7c7b"},{"location":"controller/url_mapping/","text":"Url \u89c4\u5219 \u00b6 \u4e00\u4e2a\u6848\u4f8b \u00b6 \u6211\u4eec\u5148\u5199\u4e00\u4e2a\u5df2\u7ecf\u5199\u8fc7\u7684\u6848\u4f8b 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 #pragma once #include <IWebCore> class MyController : public IControllerInterface < MyController > { Q_GADGET $AsController ( MyController ) public : MyController () = default ; $IgnoreParamWarn ( hello ) $GetMapping ( hello , /< name > ) QString hello ( QString name ); }; \u8fd9\u4e2a\u6848\u4f8b\u5728 \u7f16\u5199\u4e00\u4e2a\u7f51\u7edc\u670d\u52a1\u5668 \u5f53\u4e2d\u4f7f\u7528\u8fc7\uff0c\u610f\u601d\u662f \u5c06 /<name> \u6620\u5c04\u5230 hello \u51fd\u6570\u4e0a\u9762\u3002\u6211\u4eec\u91cd\u65b0\u6574\u7406\u4ee3\u7801\u5982\u4e0b: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 #pragma once #include <IWebCore> class MyController : public IControllerInterface < MyController > { Q_GADGET $AsController ( MyController ) public : MyController () = default ; $GetMapping ( hello , /< name > ) QString hello ( $Url ( QString , name )); }; \u770b\u89c1\u8fd9\u91cc\u7684\u4ee3\u7801\u53d8\u5316\u662f \u5220\u9664\u4e86 $IgnoreParamWarn(hello) \uff0c \u5e76\u4e14\u5c06\u53c2\u6570 QString name \u6539\u6210 $Url(QString, name) \u7684\u5f62\u5f0f\u3002 $Url(QString, name) \u662f\u544a\u8bc9 controller \u8981\u4ece Url \u8fd9\u4e2a\u91cc\u9762\u53bb\u67e5\u627e name \u53c2\u6570\u7684\u503c\uff0c\u5e76\u4e14\u53c2\u6570\u503c\u7684\u7c7b\u578b\u8f6c\u6362\u6210 QString \u7c7b\u578b\u3002 \u5173\u4e8e $Url \uff0c \u8bf7\u53c2\u8003 \u51fd\u6570\u53c2\u6570\u4f4d\u7f6e $IgnoreParamWarn(hello) \u7684\u51fa\u73b0\u662f\u56e0\u4e3a hello \u4e2d\u67e5\u627e name \u4e0d\u77e5\u9053\u4ece\u54ea\u91cc\u67e5\u627e\uff0c\u6240\u4ee5\u5b83\u4f1a\u4ece request \u7684\u6bcf\u4e00\u9879\u53c2\u6570\u4e2d\u95f4\u67e5\u627e\u3002\u4f46\u662f\u8fd9\u91cc\u4f1a\u6709\u4e00\u4e2a\u95ee\u9898\uff0c\u5c31\u662f request \u5f53\u4e2d\u53ef\u80fd\u4f1a\u6709\u591a\u4e2a\u53eb\u505a name \u7684\u53c2\u6570\uff0c\u5339\u914d\u7684\u4e0d\u4e00\u5b9a\u662f\u5f00\u53d1\u8005\u60f3\u8981\u7684\u90a3\u4e2a\uff0c\u6240\u4ee5\u5728\u7b2c\u4e00\u5904\u5c31\u62a5\u4e00\u4e2a\u9519\u8bef\uff0c\u4f46\u662f\u4f7f\u7528 $IgnoreParamWarn(hello) \u5219\u53ef\u4ee5\u6d88\u9664\u8fd9\u4e2a\u8b66\u62a5\u3002 \u5728\u7b2c\u4e8c\u5904\u7684\u4ee3\u7801\u7684\u5730\u65b9\uff0c\u6211\u4eec\u76f4\u63a5\u6307\u5b9a\u4e86name \u7684\u4f4d\u7f6e\u662f Url \u91cc\u9762\uff0c\u8fd9\u65f6\u5c31\u6ca1\u6709\u6b67\u4e49\uff0c\u4e5f\u5c31\u4e0d\u7528\u5c4f\u853d\u8b66\u62a5\u3002 __\u5728\u8fd9\u4e2a\u5730\u65b9\uff0c\u6211\u60f3\u8bf4\u7684\u662f\u6240\u6709\u5728 url \u4e2d\u62e6\u622a\u51fa\u6765\u7684\u6570\u636e\u53ef\u4ee5\u5728 \u51fd\u6570\u4e2d\u4ee5\u53c2\u6570\u7684\u5f62\u5f0f\u88ab\u4f7f\u7528\u3002__\u5f53\u7136\uff0c\u8fd8\u6709\u5176\u4ed6\u4f7f\u7528\u65b9\u5f0f\uff0c\u53c2\u89c1 \u51fd\u6570\u53c2\u6570\u4f4d\u7f6e \u3002 \u4e0b\u9762\u6211\u4eec\u6765\u8bb2\u89e3\u51e0\u79cd\u52a8\u6001\u6620\u5c04url \u7684\u53c2\u6570\u7684\u65b9\u5f0f\u3002 <name> \u7684\u5f62\u5f0f \u00b6 \u8fd9\u79cd\u5f62\u5f0f\uff0c\u7ed3\u679c\u4e0d\u540d\u81ea\u55bb\u3002\u610f\u601d\u5c31\u662f\u4e0d\u7ba1\u662f\u4ec0\u4e48\u6837\u7684\u5f62\u5f0f\uff0c\u90fd\u7ed9\u62e6\u622a\u6389\uff0c\u5e76\u4e14\u628a\u62e6\u622a\u7684url \u7247\u6bb5\u4ee5 name \u7684\u540d\u79f0\u5b58\u50a8\u8d77\u6765\u3002 \u8fd9\u91cc\u6709\u4e00\u4e2a\u7701\u7565\u5f0f\uff0c\u5c31\u662f\u4e2d\u95f4\u7684 name \u53ef\u4ee5\u4e0d\u5199\uff0c \u76f4\u63a5\u5199\u6210 <> \u7684\u5f62\u5f0f\u3002\u6ce8\u610f\u4e2d\u95f4\u4e0d\u8981\u6709\u7a7a\u683c\u4e4b\u7c7b\u7684\u4e1c\u897f\u3002\u8fd9\u4e2a\u8868\u793a\u8fd9\u4e2aurl \u7247\u6bb5\u53ef\u4ee5\u4e3a\u4efb\u4f55\u975e\u7a7a\u6709\u6548\u7684 url \u7247\u6bb5\u3002 \u4e3e\u4f8b\u5982\u4e0b: 1 2 3 4 5 6 7 8 9 10 11 12 13 class MyController : public IControllerInterface < MyController > { Q_GADGET $AsController ( MyController ) public : MyController () = default ; $GetMapping ( hello , /< name >/< age > ) QString hello ( $Url ( QString , name ), $Url ( int , age )); $GetMapping ( world , /<>/<>/< lastName > ) void world ( IResponse & response , QString lastName ); }; \u6839\u636e8-9 \u884c\u7684\u5b9a\u4e49\uff0c\u6240\u6709\u6709\u4e24\u4e2a\u7247\u6bb5\u7684 url \u8bf7\u6c42 \u90fd\u4f1a\u6620\u5c04\u5230 hello \u51fd\u6570\uff0c \u6839\u636e11-12 \u884c\u7684\u5b9a\u4e49\uff0c \u6240\u6709\u6709\u4e09\u4e2a\u7247\u6bb5 \u7684url \u8bf7\u6c42\u90fd\u4f1a\u6620\u5c04\u5230 world \u7684\u51fd\u6570\u3002 \u7ec6\u5fc3\u7684\u5f00\u53d1\u8005\u53ef\u80fd\u4f1a\u53d1\u73b0\u51e0\u4e2a\u95ee\u9898\uff1a \u6bd4\u5982\u8bf4 /yue/keyuan , \u8fd9\u4e2a\u8bf7\u6c42\u4f1a\u6620\u5c04\u5230 hello \u51fd\u6570\uff0c \u90a3\u4e48\u5982\u679c\u6211\u4eec\u5b9a\u4e49\u4e86\u6620\u5c04 /yue/keyuan \u7684\u5176\u4ed6\u51fd\u6570\u8bf7\u6c42\u600e\u4e48\u529e\uff1f \u7b54\u6848\u5f0f\u8fd9\u6b21\u67e5\u627e\u4f1a\u5931\u8d25\uff0c\u5728 IControllerManage \u5185\u90e8\u627e\u5230\u591a\u4e8e\u4e00\u4e2a\u7684\u51fd\u6570\u6620\u5c04\uff0c\u90a3\u4e48\u8fd9\u4e2a\u8bf7\u6c42\u4f1a\u5931\u8d25\uff0c\u8fd4\u56de 404 \u9519\u8bef \u7c7b\u4f3c url /yue/keyuan \u5982\u679c\u6620\u5c04\u6210\u529f\uff0c\u4f46\u662fage\u7684\u4fe1\u606f\u4e0d\u5339\u914d\u600e\u4e48\u529e? \u5728\u89e3\u6790\u7684\u8fc7\u7a0b\u4e2d keyuan \u4f1a\u4ee5QByteArray \u7684\u5f62\u5f0f\u5b58\u50a8\u5728 map \u4e2d\uff0c \u751f\u6210\u7684map \u4e3a {\"name\":\"yue\", \"age\":\"keyuan\"}\u3002 \u5728\u627e\u5230\u51fd\u6570\u65f6\uff0c\u4f1a\u901a\u8fc7\u53cd\u5c04\u751f\u6210\u51fd\u6570 hello \u5185\u90e8\u7684\u4e24\u4e2a\u53c2\u6570\uff0c\u5206\u522b\u4e3a QString* \u548c int* \u3002\u4e4b\u540e\u4f1a\u628a\u76f8\u5e94\u7684\u53c2\u6570\u8f6c\u578b\u6210\u5f53\u524d\u7684\u7c7b\u578b\uff0c \u628a\"yue\" \u8f6c\u6362\u6210 QString \u7c7b\u578b\uff0c\u628a \"keyuan\" \u8f6c\u6362\u6210 int \u7c7b\u578b\u3002 \u5f88\u663e\u7136\uff0c\"keyuan\"\u8f6c\u6362\u4e0d\u6210 int \u7c7b\u578b\uff0c\u6240\u4ee5\u5728\u8fd9\u91cc\u867d\u7136\u6620\u5c04\u6210\u529f\uff0c\u4f46\u662f\u7531\u4e8e\u89e3\u6790\u4e0d\u6210\u529f\uff0c\u5c06\u4f1a\u8fd4\u56de 400 Bad Request \u7531\u4e8e\u8fd9\u79cd\u6620\u5c04\u7c7b\u578b\u4f1a\u6709\u6f0f\u6d1e\uff0c\u6240\u4ee5\u5c31\u6709\u5982\u4e0b\u4e24\u79cd\u6620\u5c04\u7c7b\u578b: <name:type> \u7684\u5f62\u5f0f \u00b6 \u8fd9\u91cc\u7684\u610f\u601d\u4e5f\u662f\u5f88\u6e05\u6670\uff0c name \u8868\u793a\u7247\u6bb5\u5c06\u8981\u8d4b\u4e88\u7684\u540d\u79f0\uff0c type \u8868\u793a\u5bf9\u7247\u6bb5\u7684\u7ea6\u675f\u3002 \u8fd9\u91cc\u4e5f\u53ef\u4ee5\u6709\u7701\u7565\u5f0f\uff0c \u65e2\u53ef\u4ee5\u7701\u7565 name , \u6210\u4e3a <:type> \u8fd9\u79cd\u5f62\u5f0f\uff0c\u8868\u793a\u53ea\u6709\u7ea6\u675f\uff0c\u4e0d\u7528\u91c7\u96c6 url\u91cc\u7684\u53c2\u6570\u3002 \u4e5f\u53ef\u4ee5\u7701\u7565 type , \u6210\u4e3a <name:> \u8fd9\u79cd\u5f62\u5f0f\uff0c\u8868\u793a\u91c7\u96c6\u53c2\u6570\uff0c\u4f46\u4e0d\u52a0\u7ea6\u675f\u3002\u8fd9\u4e2a\u548c <name> \u8fd9\u79cd\u5f62\u5f0f\u662f\u6ca1\u6709\u533a\u522b\u7684\u3002 \u4e5f\u53ef\u4ee5 name \u548c type \u4e24\u8005\u90fd\u7701\u7565\uff0c \u6210\u4e3a <:> \u8fd9\u79cd\u5f62\u5f0f\u3002\u8fd9\u4e2a\u548c <> \u8fd9\u79cd\u5f62\u5f0f\u6ca1\u6709\u533a\u522b\u3002 \u8fd9\u91cc\u7684 type \u7ea6\u675f\u5206\u4e3a\u4e24\u79cd: \u4e00\u79cd\u662f\u5185\u7f6e\u7c7b\u578b\uff0c\u4e00\u79cd\u662f\u7528\u6237\u81ea\u5b9a\u4e49\u6ce8\u518c\u7c7b\u578b\u3002 \u5185\u7f6e\u7c7b\u578b \u00b6 \u76ee\u524d\u5185\u7f6e\u7684\u7c7b\u578b\u5173\u952e\u5b57\u5982\u4e0b\uff1a number\u7cfb\u5217 \uff1ashort, ushort, int, uint, long, ulong, longlong, ulonglong, float, double \u65f6\u95f4\u7c7b\u578b: data, QDate, time, QTime, datetime, QDateTime \u5b57\u7b26\u4e32\u7c7b\u578b: string, QString \u5176\u4ed6\u7c7b\u578b: uuid, base64 \u8fd9\u91cc\u53ea\u8981\u4ee5\u4e0a\u9762\u5b9a\u4e49\u7684\u7c7b\u578b\u540d\u79f0\u5c06type \u66ff\u6362\u6389\u5373\u53ef\u3002 \u6ce8\u610f\uff0c\u8fd9\u91cc\u7684\u5b9a\u4e49\u7684\u7c7b\u578b\u53ef\u4ee5\u4e0d\u548c \u53c2\u6570\u7684\u7c7b\u578b\u4e00\u81f4\uff0c\u4f46\u662f\uff0c\u5efa\u8bae\u548c\u53c2\u6570\u7c7b\u578b\u4e00\u81f4\uff0c\u5426\u5219\u4e0d\u6392\u9664\u51fa\u95ee\u9898\u7684\u53ef\u80fd\u3002\u6bd4\u5982\u8bf4\u6211\u5728url\u4e2d\u4f7f\u7528 int \u7c7b\u578b\u4f5c\u4e3a\u7ea6\u675f\uff0c\u4f46\u662f\u53c2\u6570\u4e2d\u4f7f\u7528 short , \u90a3\u4e48\u5c31\u4f1a\u51fa\u73b0\u8f6c\u6362\u9519\u8bef\u7684\u95ee\u9898\uff0c\u800c\u5bfc\u81f4\u8bf7\u6c42\u65e0\u6cd5\u7ee7\u7eed\u3002 \u81ea\u5b9a\u4e49\u7c7b\u578b\u53ca\u6ce8\u518c\u3002 \u00b6 \u9664\u4e86\u8fd9\u4e9b\u5185\u7f6e\u7c7b\u578b\u4e4b\u5916\uff0c\u7528\u6237\u4e5f\u53ef\u4ee5\u81ea\u5b9a\u4e49\u7c7b\u578b\uff0c\u7528\u5728\u7ea6\u675furl \u7247\u6bb5\u3002 \u81ea\u5b9a\u4e49\u7c7b\u578b\u7684\u6ce8\u518c\u4e5f\u5206\u4e3a\u4e24\u79cd\uff0c\u4e00\u79cd\u662f\u6ce8\u518c\u51fd\u6570\uff0c\u4e00\u79cd\u5219\u662f\u6ce8\u518c\u6b63\u5219\u8868\u8fbe\u5f0f\u3002\u8fd9\u4e24\u4e2a\u6ce8\u518c\u51fd\u6570\u5b9a\u4e49\u5728 IControllerManage \u5f53\u4e2d\uff0c \u5982\u4e0b\uff1a 1 2 3 4 5 6 7 8 9 class IControllerManage { ... ... using ValidatorFun = bool ( * )( const QString & ); ... ... static void registerPathValidator ( const QString & name , const QString & regexp ); static void registerPathValidator ( const QString & name , ValidatorFun fun ); ... ... } \u6ce8\u518c validator \u9700\u8981\u53d1\u751f\u5728\u5bf9 Controller \u4e2d\u7684\u51fd\u6570\u89e3\u6790\u4e4b\u524d\u3002\u800cController\u4e2d\u7684\u51fd\u6570\u5b9e\u9645\u89e3\u6790\u5219\u662f\u53d1\u751f\u5728 ITaskManage\u7684 \u9759\u6001 run \u51fd\u6570\u4e4b\u5185\u6267\u884c\u7684\u3002\u6240\u4ee5\u6211\u4eec\u5728\u6b64\u4e4b\u524d\u89e3\u6790\u5c31\u53ef\u4ee5\u3002 \u4e3a\u4e86\u65b9\u4fbf\u8d77\u89c1\uff0c IWebCore \u5b9a\u4e49\u4e86 IControllerPathValidatorInterface \u3002\u8fd9\u662f\u4e00\u4e2a\u5f88\u957f\u7684\u7c7b\u540d\uff0c\u4f46\u662f\u4e0d\u5e38\u7528\uff0c\u6240\u4ee5\u80fd\u591f\u63a5\u53d7\u3002\u5f53\u7136\uff0c\u4f60\u4e5f\u53ef\u4ee5\u5b9e\u73b0\u81ea\u5df1\u7684\u6ce8\u518c\u65b9\u5f0f\uff0c\u53c2\u8003 SIR \u3002 \u6211\u4eec\u5c31\u5b9e\u73b0\u4e00\u4e2a\u81ea\u5b9a\u4e49\u7684 \u6ce8\u518c\u5668, \u5982\u4e0b: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 // FiveCharaterUrlValidator.h #pragma once #include <IWebCore> class FiveCharaterUrlValidator : public IControllerPathValidatorInterface < FiveCharaterUrlValidator > { $UseInstance ( FiveCharaterUrlValidator ) public : FiveCharaterUrlValidator () = default ; virtual void task () override ; }; // FiveCharaterUrlValidator.cpp #include \"FiveCharaterUrlValidator.h\" void FiveCharaterUrlValidator::task () { auto fiveCharatorValidator = []( const QString & piece ) -> bool { return piece . length () == 5 ; }; registerValidator ( \"5c\" , fiveCharatorValidator ); } \u5982\u4e0a\u6240\u793a\u6211\u4eec\u5b9a\u4e49\u4e86\u4e00\u4e2a\u53eb\u505a 5c \u7684\u89c4\u5219\uff0c\u610f\u601d\u662f\u5b57\u7b26\u6570\u91cf\u53ea\u80fd\u662f5\u4e2a\u3002\u4e4b\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u5728\u4ee3\u7801\u4e2d\u4f7f\u7528\u5982 <name:5c> \u8fd9\u79cd\u7c7b\u578b\u7684\u89c4\u5219\u4e86\u3002 \u4e0a\u9762\u6f14\u793a\u7684\u662f\u6ce8\u518c\u4e00\u4e2a\u51fd\u6570\uff0c\u5982\u679c\u662f\u6ce8\u518c\u4e00\u4e2a\u6b63\u5219\u5f0f\uff0c\u4e5f\u53ef\u4ee5\u76f4\u63a5\u8c03\u7528\u5982\u4e0b: registerValidator ( \"5c\" , \"[.]{5}\" ); \u8fd9\u6837\u540c\u6837\u80fd\u8fbe\u5230\u89c4\u5219\u7ea6\u675f\u7684\u76ee\u7684\u3002 <reg:name:exp> \u7684\u5f62\u5f0f \u00b6 \u8fd9\u4e00\u6b21\u6709\u4e09\u4e2a\u53c2\u6570\uff0c\u4e24\u4e2a\u5192\u53f7\u3002 \u7b2c\u4e00\u4e2a\u53c2\u6570\u5c31\u662f reg (\u5176\u5b9e\u4ec0\u4e48\u90fd\u53ef\u4ee5\uff0c\u8fd9\u4e2a\u73b0\u5728\u6ca1\u6709\u5f3a\u5236\u89c4\u5b9a\u540d\u79f0\u3002\u4f46\u662f\u8003\u8651\u5230\u6269\u5c55\uff0c\u6240\u4ee5\u7528\u6237\u5c31\u76f4\u63a5\u4f7f\u7528 reg \u5427)\u3002\u7b2c\u4e8c\u4e2a\u53c2\u6570\u662f name \u8fd9\u4e2a\u548c\u524d\u9762\u4e00\u6837\u3002 \u4e3b\u8981\u662f\u7b2c\u4e09\u4e2a\u53c2\u6570\uff0c\u7b2c\u4e09\u4e2a\u53c2\u6570\u662f \u6b63\u5219\u8868\u8fbe\u5f0f\u3002\u5982\u679c\u6b63\u5219\u5f0f\u5199\u9519\u4e86\uff0c\u8fd0\u884c\u671f\u68c0\u67e5\u7684\u65f6\u5019\u4f1a\u62a5\u9519\u7684\uff0c\u6240\u6709\u4e0a\u9762\u7684 5c \u5339\u914d\u5176\u5b9e\u4e5f\u53ef\u4ee5\u5199\u6210 \" \" \u7b2c\u4e09\u79cd\u5f62\u5f0f\u4e5f\u6709\u7701\u7565\u5f0f\u3002 <:name:exp> \u7701\u7565\u524d\u9762\u7684 reg <::exp> \u7701\u7565\u524d\u9762\u7684reg \u548c name <:name:> \u8fd9\u79cd\u5f62\u5f0f \u7b49\u4e8e <name> <::> \u55ef\uff0c\u6240\u6709\u7684\u90fd\u7701\u7565\u4e86\uff0c\u5176\u5b9e\u5c31\u7b49\u4e8e <> \u8fd9\u79cd\u683c\u5f0f\u4e86\u3002","title":"Url \u89c4\u5219"},{"location":"controller/url_mapping/#url","text":"","title":"Url \u89c4\u5219"},{"location":"controller/url_mapping/#_1","text":"\u6211\u4eec\u5148\u5199\u4e00\u4e2a\u5df2\u7ecf\u5199\u8fc7\u7684\u6848\u4f8b 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 #pragma once #include <IWebCore> class MyController : public IControllerInterface < MyController > { Q_GADGET $AsController ( MyController ) public : MyController () = default ; $IgnoreParamWarn ( hello ) $GetMapping ( hello , /< name > ) QString hello ( QString name ); }; \u8fd9\u4e2a\u6848\u4f8b\u5728 \u7f16\u5199\u4e00\u4e2a\u7f51\u7edc\u670d\u52a1\u5668 \u5f53\u4e2d\u4f7f\u7528\u8fc7\uff0c\u610f\u601d\u662f \u5c06 /<name> \u6620\u5c04\u5230 hello \u51fd\u6570\u4e0a\u9762\u3002\u6211\u4eec\u91cd\u65b0\u6574\u7406\u4ee3\u7801\u5982\u4e0b: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 #pragma once #include <IWebCore> class MyController : public IControllerInterface < MyController > { Q_GADGET $AsController ( MyController ) public : MyController () = default ; $GetMapping ( hello , /< name > ) QString hello ( $Url ( QString , name )); }; \u770b\u89c1\u8fd9\u91cc\u7684\u4ee3\u7801\u53d8\u5316\u662f \u5220\u9664\u4e86 $IgnoreParamWarn(hello) \uff0c \u5e76\u4e14\u5c06\u53c2\u6570 QString name \u6539\u6210 $Url(QString, name) \u7684\u5f62\u5f0f\u3002 $Url(QString, name) \u662f\u544a\u8bc9 controller \u8981\u4ece Url \u8fd9\u4e2a\u91cc\u9762\u53bb\u67e5\u627e name \u53c2\u6570\u7684\u503c\uff0c\u5e76\u4e14\u53c2\u6570\u503c\u7684\u7c7b\u578b\u8f6c\u6362\u6210 QString \u7c7b\u578b\u3002 \u5173\u4e8e $Url \uff0c \u8bf7\u53c2\u8003 \u51fd\u6570\u53c2\u6570\u4f4d\u7f6e $IgnoreParamWarn(hello) \u7684\u51fa\u73b0\u662f\u56e0\u4e3a hello \u4e2d\u67e5\u627e name \u4e0d\u77e5\u9053\u4ece\u54ea\u91cc\u67e5\u627e\uff0c\u6240\u4ee5\u5b83\u4f1a\u4ece request \u7684\u6bcf\u4e00\u9879\u53c2\u6570\u4e2d\u95f4\u67e5\u627e\u3002\u4f46\u662f\u8fd9\u91cc\u4f1a\u6709\u4e00\u4e2a\u95ee\u9898\uff0c\u5c31\u662f request \u5f53\u4e2d\u53ef\u80fd\u4f1a\u6709\u591a\u4e2a\u53eb\u505a name \u7684\u53c2\u6570\uff0c\u5339\u914d\u7684\u4e0d\u4e00\u5b9a\u662f\u5f00\u53d1\u8005\u60f3\u8981\u7684\u90a3\u4e2a\uff0c\u6240\u4ee5\u5728\u7b2c\u4e00\u5904\u5c31\u62a5\u4e00\u4e2a\u9519\u8bef\uff0c\u4f46\u662f\u4f7f\u7528 $IgnoreParamWarn(hello) \u5219\u53ef\u4ee5\u6d88\u9664\u8fd9\u4e2a\u8b66\u62a5\u3002 \u5728\u7b2c\u4e8c\u5904\u7684\u4ee3\u7801\u7684\u5730\u65b9\uff0c\u6211\u4eec\u76f4\u63a5\u6307\u5b9a\u4e86name \u7684\u4f4d\u7f6e\u662f Url \u91cc\u9762\uff0c\u8fd9\u65f6\u5c31\u6ca1\u6709\u6b67\u4e49\uff0c\u4e5f\u5c31\u4e0d\u7528\u5c4f\u853d\u8b66\u62a5\u3002 __\u5728\u8fd9\u4e2a\u5730\u65b9\uff0c\u6211\u60f3\u8bf4\u7684\u662f\u6240\u6709\u5728 url \u4e2d\u62e6\u622a\u51fa\u6765\u7684\u6570\u636e\u53ef\u4ee5\u5728 \u51fd\u6570\u4e2d\u4ee5\u53c2\u6570\u7684\u5f62\u5f0f\u88ab\u4f7f\u7528\u3002__\u5f53\u7136\uff0c\u8fd8\u6709\u5176\u4ed6\u4f7f\u7528\u65b9\u5f0f\uff0c\u53c2\u89c1 \u51fd\u6570\u53c2\u6570\u4f4d\u7f6e \u3002 \u4e0b\u9762\u6211\u4eec\u6765\u8bb2\u89e3\u51e0\u79cd\u52a8\u6001\u6620\u5c04url \u7684\u53c2\u6570\u7684\u65b9\u5f0f\u3002","title":"\u4e00\u4e2a\u6848\u4f8b"},{"location":"controller/url_mapping/#name","text":"\u8fd9\u79cd\u5f62\u5f0f\uff0c\u7ed3\u679c\u4e0d\u540d\u81ea\u55bb\u3002\u610f\u601d\u5c31\u662f\u4e0d\u7ba1\u662f\u4ec0\u4e48\u6837\u7684\u5f62\u5f0f\uff0c\u90fd\u7ed9\u62e6\u622a\u6389\uff0c\u5e76\u4e14\u628a\u62e6\u622a\u7684url \u7247\u6bb5\u4ee5 name \u7684\u540d\u79f0\u5b58\u50a8\u8d77\u6765\u3002 \u8fd9\u91cc\u6709\u4e00\u4e2a\u7701\u7565\u5f0f\uff0c\u5c31\u662f\u4e2d\u95f4\u7684 name \u53ef\u4ee5\u4e0d\u5199\uff0c \u76f4\u63a5\u5199\u6210 <> \u7684\u5f62\u5f0f\u3002\u6ce8\u610f\u4e2d\u95f4\u4e0d\u8981\u6709\u7a7a\u683c\u4e4b\u7c7b\u7684\u4e1c\u897f\u3002\u8fd9\u4e2a\u8868\u793a\u8fd9\u4e2aurl \u7247\u6bb5\u53ef\u4ee5\u4e3a\u4efb\u4f55\u975e\u7a7a\u6709\u6548\u7684 url \u7247\u6bb5\u3002 \u4e3e\u4f8b\u5982\u4e0b: 1 2 3 4 5 6 7 8 9 10 11 12 13 class MyController : public IControllerInterface < MyController > { Q_GADGET $AsController ( MyController ) public : MyController () = default ; $GetMapping ( hello , /< name >/< age > ) QString hello ( $Url ( QString , name ), $Url ( int , age )); $GetMapping ( world , /<>/<>/< lastName > ) void world ( IResponse & response , QString lastName ); }; \u6839\u636e8-9 \u884c\u7684\u5b9a\u4e49\uff0c\u6240\u6709\u6709\u4e24\u4e2a\u7247\u6bb5\u7684 url \u8bf7\u6c42 \u90fd\u4f1a\u6620\u5c04\u5230 hello \u51fd\u6570\uff0c \u6839\u636e11-12 \u884c\u7684\u5b9a\u4e49\uff0c \u6240\u6709\u6709\u4e09\u4e2a\u7247\u6bb5 \u7684url \u8bf7\u6c42\u90fd\u4f1a\u6620\u5c04\u5230 world \u7684\u51fd\u6570\u3002 \u7ec6\u5fc3\u7684\u5f00\u53d1\u8005\u53ef\u80fd\u4f1a\u53d1\u73b0\u51e0\u4e2a\u95ee\u9898\uff1a \u6bd4\u5982\u8bf4 /yue/keyuan , \u8fd9\u4e2a\u8bf7\u6c42\u4f1a\u6620\u5c04\u5230 hello \u51fd\u6570\uff0c \u90a3\u4e48\u5982\u679c\u6211\u4eec\u5b9a\u4e49\u4e86\u6620\u5c04 /yue/keyuan \u7684\u5176\u4ed6\u51fd\u6570\u8bf7\u6c42\u600e\u4e48\u529e\uff1f \u7b54\u6848\u5f0f\u8fd9\u6b21\u67e5\u627e\u4f1a\u5931\u8d25\uff0c\u5728 IControllerManage \u5185\u90e8\u627e\u5230\u591a\u4e8e\u4e00\u4e2a\u7684\u51fd\u6570\u6620\u5c04\uff0c\u90a3\u4e48\u8fd9\u4e2a\u8bf7\u6c42\u4f1a\u5931\u8d25\uff0c\u8fd4\u56de 404 \u9519\u8bef \u7c7b\u4f3c url /yue/keyuan \u5982\u679c\u6620\u5c04\u6210\u529f\uff0c\u4f46\u662fage\u7684\u4fe1\u606f\u4e0d\u5339\u914d\u600e\u4e48\u529e? \u5728\u89e3\u6790\u7684\u8fc7\u7a0b\u4e2d keyuan \u4f1a\u4ee5QByteArray \u7684\u5f62\u5f0f\u5b58\u50a8\u5728 map \u4e2d\uff0c \u751f\u6210\u7684map \u4e3a {\"name\":\"yue\", \"age\":\"keyuan\"}\u3002 \u5728\u627e\u5230\u51fd\u6570\u65f6\uff0c\u4f1a\u901a\u8fc7\u53cd\u5c04\u751f\u6210\u51fd\u6570 hello \u5185\u90e8\u7684\u4e24\u4e2a\u53c2\u6570\uff0c\u5206\u522b\u4e3a QString* \u548c int* \u3002\u4e4b\u540e\u4f1a\u628a\u76f8\u5e94\u7684\u53c2\u6570\u8f6c\u578b\u6210\u5f53\u524d\u7684\u7c7b\u578b\uff0c \u628a\"yue\" \u8f6c\u6362\u6210 QString \u7c7b\u578b\uff0c\u628a \"keyuan\" \u8f6c\u6362\u6210 int \u7c7b\u578b\u3002 \u5f88\u663e\u7136\uff0c\"keyuan\"\u8f6c\u6362\u4e0d\u6210 int \u7c7b\u578b\uff0c\u6240\u4ee5\u5728\u8fd9\u91cc\u867d\u7136\u6620\u5c04\u6210\u529f\uff0c\u4f46\u662f\u7531\u4e8e\u89e3\u6790\u4e0d\u6210\u529f\uff0c\u5c06\u4f1a\u8fd4\u56de 400 Bad Request \u7531\u4e8e\u8fd9\u79cd\u6620\u5c04\u7c7b\u578b\u4f1a\u6709\u6f0f\u6d1e\uff0c\u6240\u4ee5\u5c31\u6709\u5982\u4e0b\u4e24\u79cd\u6620\u5c04\u7c7b\u578b:","title":"&lt;name> \u7684\u5f62\u5f0f"},{"location":"controller/url_mapping/#nametype","text":"\u8fd9\u91cc\u7684\u610f\u601d\u4e5f\u662f\u5f88\u6e05\u6670\uff0c name \u8868\u793a\u7247\u6bb5\u5c06\u8981\u8d4b\u4e88\u7684\u540d\u79f0\uff0c type \u8868\u793a\u5bf9\u7247\u6bb5\u7684\u7ea6\u675f\u3002 \u8fd9\u91cc\u4e5f\u53ef\u4ee5\u6709\u7701\u7565\u5f0f\uff0c \u65e2\u53ef\u4ee5\u7701\u7565 name , \u6210\u4e3a <:type> \u8fd9\u79cd\u5f62\u5f0f\uff0c\u8868\u793a\u53ea\u6709\u7ea6\u675f\uff0c\u4e0d\u7528\u91c7\u96c6 url\u91cc\u7684\u53c2\u6570\u3002 \u4e5f\u53ef\u4ee5\u7701\u7565 type , \u6210\u4e3a <name:> \u8fd9\u79cd\u5f62\u5f0f\uff0c\u8868\u793a\u91c7\u96c6\u53c2\u6570\uff0c\u4f46\u4e0d\u52a0\u7ea6\u675f\u3002\u8fd9\u4e2a\u548c <name> \u8fd9\u79cd\u5f62\u5f0f\u662f\u6ca1\u6709\u533a\u522b\u7684\u3002 \u4e5f\u53ef\u4ee5 name \u548c type \u4e24\u8005\u90fd\u7701\u7565\uff0c \u6210\u4e3a <:> \u8fd9\u79cd\u5f62\u5f0f\u3002\u8fd9\u4e2a\u548c <> \u8fd9\u79cd\u5f62\u5f0f\u6ca1\u6709\u533a\u522b\u3002 \u8fd9\u91cc\u7684 type \u7ea6\u675f\u5206\u4e3a\u4e24\u79cd: \u4e00\u79cd\u662f\u5185\u7f6e\u7c7b\u578b\uff0c\u4e00\u79cd\u662f\u7528\u6237\u81ea\u5b9a\u4e49\u6ce8\u518c\u7c7b\u578b\u3002","title":"&lt;name:type>  \u7684\u5f62\u5f0f"},{"location":"controller/url_mapping/#_2","text":"\u76ee\u524d\u5185\u7f6e\u7684\u7c7b\u578b\u5173\u952e\u5b57\u5982\u4e0b\uff1a number\u7cfb\u5217 \uff1ashort, ushort, int, uint, long, ulong, longlong, ulonglong, float, double \u65f6\u95f4\u7c7b\u578b: data, QDate, time, QTime, datetime, QDateTime \u5b57\u7b26\u4e32\u7c7b\u578b: string, QString \u5176\u4ed6\u7c7b\u578b: uuid, base64 \u8fd9\u91cc\u53ea\u8981\u4ee5\u4e0a\u9762\u5b9a\u4e49\u7684\u7c7b\u578b\u540d\u79f0\u5c06type \u66ff\u6362\u6389\u5373\u53ef\u3002 \u6ce8\u610f\uff0c\u8fd9\u91cc\u7684\u5b9a\u4e49\u7684\u7c7b\u578b\u53ef\u4ee5\u4e0d\u548c \u53c2\u6570\u7684\u7c7b\u578b\u4e00\u81f4\uff0c\u4f46\u662f\uff0c\u5efa\u8bae\u548c\u53c2\u6570\u7c7b\u578b\u4e00\u81f4\uff0c\u5426\u5219\u4e0d\u6392\u9664\u51fa\u95ee\u9898\u7684\u53ef\u80fd\u3002\u6bd4\u5982\u8bf4\u6211\u5728url\u4e2d\u4f7f\u7528 int \u7c7b\u578b\u4f5c\u4e3a\u7ea6\u675f\uff0c\u4f46\u662f\u53c2\u6570\u4e2d\u4f7f\u7528 short , \u90a3\u4e48\u5c31\u4f1a\u51fa\u73b0\u8f6c\u6362\u9519\u8bef\u7684\u95ee\u9898\uff0c\u800c\u5bfc\u81f4\u8bf7\u6c42\u65e0\u6cd5\u7ee7\u7eed\u3002","title":"\u5185\u7f6e\u7c7b\u578b"},{"location":"controller/url_mapping/#_3","text":"\u9664\u4e86\u8fd9\u4e9b\u5185\u7f6e\u7c7b\u578b\u4e4b\u5916\uff0c\u7528\u6237\u4e5f\u53ef\u4ee5\u81ea\u5b9a\u4e49\u7c7b\u578b\uff0c\u7528\u5728\u7ea6\u675furl \u7247\u6bb5\u3002 \u81ea\u5b9a\u4e49\u7c7b\u578b\u7684\u6ce8\u518c\u4e5f\u5206\u4e3a\u4e24\u79cd\uff0c\u4e00\u79cd\u662f\u6ce8\u518c\u51fd\u6570\uff0c\u4e00\u79cd\u5219\u662f\u6ce8\u518c\u6b63\u5219\u8868\u8fbe\u5f0f\u3002\u8fd9\u4e24\u4e2a\u6ce8\u518c\u51fd\u6570\u5b9a\u4e49\u5728 IControllerManage \u5f53\u4e2d\uff0c \u5982\u4e0b\uff1a 1 2 3 4 5 6 7 8 9 class IControllerManage { ... ... using ValidatorFun = bool ( * )( const QString & ); ... ... static void registerPathValidator ( const QString & name , const QString & regexp ); static void registerPathValidator ( const QString & name , ValidatorFun fun ); ... ... } \u6ce8\u518c validator \u9700\u8981\u53d1\u751f\u5728\u5bf9 Controller \u4e2d\u7684\u51fd\u6570\u89e3\u6790\u4e4b\u524d\u3002\u800cController\u4e2d\u7684\u51fd\u6570\u5b9e\u9645\u89e3\u6790\u5219\u662f\u53d1\u751f\u5728 ITaskManage\u7684 \u9759\u6001 run \u51fd\u6570\u4e4b\u5185\u6267\u884c\u7684\u3002\u6240\u4ee5\u6211\u4eec\u5728\u6b64\u4e4b\u524d\u89e3\u6790\u5c31\u53ef\u4ee5\u3002 \u4e3a\u4e86\u65b9\u4fbf\u8d77\u89c1\uff0c IWebCore \u5b9a\u4e49\u4e86 IControllerPathValidatorInterface \u3002\u8fd9\u662f\u4e00\u4e2a\u5f88\u957f\u7684\u7c7b\u540d\uff0c\u4f46\u662f\u4e0d\u5e38\u7528\uff0c\u6240\u4ee5\u80fd\u591f\u63a5\u53d7\u3002\u5f53\u7136\uff0c\u4f60\u4e5f\u53ef\u4ee5\u5b9e\u73b0\u81ea\u5df1\u7684\u6ce8\u518c\u65b9\u5f0f\uff0c\u53c2\u8003 SIR \u3002 \u6211\u4eec\u5c31\u5b9e\u73b0\u4e00\u4e2a\u81ea\u5b9a\u4e49\u7684 \u6ce8\u518c\u5668, \u5982\u4e0b: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 // FiveCharaterUrlValidator.h #pragma once #include <IWebCore> class FiveCharaterUrlValidator : public IControllerPathValidatorInterface < FiveCharaterUrlValidator > { $UseInstance ( FiveCharaterUrlValidator ) public : FiveCharaterUrlValidator () = default ; virtual void task () override ; }; // FiveCharaterUrlValidator.cpp #include \"FiveCharaterUrlValidator.h\" void FiveCharaterUrlValidator::task () { auto fiveCharatorValidator = []( const QString & piece ) -> bool { return piece . length () == 5 ; }; registerValidator ( \"5c\" , fiveCharatorValidator ); } \u5982\u4e0a\u6240\u793a\u6211\u4eec\u5b9a\u4e49\u4e86\u4e00\u4e2a\u53eb\u505a 5c \u7684\u89c4\u5219\uff0c\u610f\u601d\u662f\u5b57\u7b26\u6570\u91cf\u53ea\u80fd\u662f5\u4e2a\u3002\u4e4b\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u5728\u4ee3\u7801\u4e2d\u4f7f\u7528\u5982 <name:5c> \u8fd9\u79cd\u7c7b\u578b\u7684\u89c4\u5219\u4e86\u3002 \u4e0a\u9762\u6f14\u793a\u7684\u662f\u6ce8\u518c\u4e00\u4e2a\u51fd\u6570\uff0c\u5982\u679c\u662f\u6ce8\u518c\u4e00\u4e2a\u6b63\u5219\u5f0f\uff0c\u4e5f\u53ef\u4ee5\u76f4\u63a5\u8c03\u7528\u5982\u4e0b: registerValidator ( \"5c\" , \"[.]{5}\" ); \u8fd9\u6837\u540c\u6837\u80fd\u8fbe\u5230\u89c4\u5219\u7ea6\u675f\u7684\u76ee\u7684\u3002","title":"\u81ea\u5b9a\u4e49\u7c7b\u578b\u53ca\u6ce8\u518c\u3002"},{"location":"controller/url_mapping/#regnameexp","text":"\u8fd9\u4e00\u6b21\u6709\u4e09\u4e2a\u53c2\u6570\uff0c\u4e24\u4e2a\u5192\u53f7\u3002 \u7b2c\u4e00\u4e2a\u53c2\u6570\u5c31\u662f reg (\u5176\u5b9e\u4ec0\u4e48\u90fd\u53ef\u4ee5\uff0c\u8fd9\u4e2a\u73b0\u5728\u6ca1\u6709\u5f3a\u5236\u89c4\u5b9a\u540d\u79f0\u3002\u4f46\u662f\u8003\u8651\u5230\u6269\u5c55\uff0c\u6240\u4ee5\u7528\u6237\u5c31\u76f4\u63a5\u4f7f\u7528 reg \u5427)\u3002\u7b2c\u4e8c\u4e2a\u53c2\u6570\u662f name \u8fd9\u4e2a\u548c\u524d\u9762\u4e00\u6837\u3002 \u4e3b\u8981\u662f\u7b2c\u4e09\u4e2a\u53c2\u6570\uff0c\u7b2c\u4e09\u4e2a\u53c2\u6570\u662f \u6b63\u5219\u8868\u8fbe\u5f0f\u3002\u5982\u679c\u6b63\u5219\u5f0f\u5199\u9519\u4e86\uff0c\u8fd0\u884c\u671f\u68c0\u67e5\u7684\u65f6\u5019\u4f1a\u62a5\u9519\u7684\uff0c\u6240\u6709\u4e0a\u9762\u7684 5c \u5339\u914d\u5176\u5b9e\u4e5f\u53ef\u4ee5\u5199\u6210 \" \" \u7b2c\u4e09\u79cd\u5f62\u5f0f\u4e5f\u6709\u7701\u7565\u5f0f\u3002 <:name:exp> \u7701\u7565\u524d\u9762\u7684 reg <::exp> \u7701\u7565\u524d\u9762\u7684reg \u548c name <:name:> \u8fd9\u79cd\u5f62\u5f0f \u7b49\u4e8e <name> <::> \u55ef\uff0c\u6240\u6709\u7684\u90fd\u7701\u7565\u4e86\uff0c\u5176\u5b9e\u5c31\u7b49\u4e8e <> \u8fd9\u79cd\u683c\u5f0f\u4e86\u3002","title":"&lt;reg:name:exp>   \u7684\u5f62\u5f0f"},{"location":"guide/install_iwebcore/","text":"\u5b89\u88c5 IWebCore \u00b6 IWebCore \u76ee\u524d\u662f\u4f7f\u7528 qmake \u8fdb\u884c\u7f16\u8bd1\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981 Qt \u7684\u5f00\u53d1\u73af\u5883\u5e76 Qt Creator IDE\u3002\u6240\u4ee5\u7b2c\u4e00\u6b65\uff0c\u6211\u4eec\u662f\u5b89\u88c5\u73af\u5883\u3002 NOTE:\u5728\u4ee5\u540e\u7684\u7248\u672c\u4e2d\uff0c IWebCore \u4f1a\u540c\u65f6\u652f\u6301 qmake \u548c cmake \u7ba1\u7406\uff0c\u652f\u6301 Visual Studio \u548c CLion \u7b49\u5176\u4ed6\u7684IDE. \u73b0\u9636\u6bb5\u5f00\u53d1\u73af\u5883\u6682\u5b9a\u53ea\u80fd\u5728 Qt Creator \u4e0a\u8fdb\u884c\u5f00\u53d1\u548c\u7f16\u8bd1\u3002 \u5728\u5b89\u88c5 Qt Creator \u4e4b\u524d\uff0c\u6211\u4eec\u5148\u5b89\u88c5 Visual Studio \u7248\u672c\u4e0d\u4f4e\u4e8e 2017 \u7248\u672c\u3002\u8fd9\u6837\u6211\u4eec\u5728\u4e4b\u540e\u5b89\u88c5Qt Creator \u65f6\uff0c\u53ef\u4ee5\u52fe\u9009vs2017 \u6216 vs2019 \u7248\u672c\u7684 msvc \u7f16\u8bd1\u5668\u3002\u8fd9\u6837\u7701\u53bb\u4e86\u4e4b\u540e\u914d\u7f6e\u7f16\u8bd1\u5668\u7684\u9ebb\u70e6\u3002 \u540c\u65f6\u8fd9\u91cc\u8981\u6c42 msvc \u7f16\u8bd1\u5668\u7684\u539f\u56e0\u5219\u662f msvc \u7f16\u8bd1\u5668\u7684\u7f16\u8bd1\u901f\u5ea6\u6781\u5feb\u3002\u5728\u672c\u4eba\u7684\u7535\u8111\u4e0a_(Intel(R) Core(TM) i5-3230M, 12GB \u5185\u5b58\uff0c 120G \u56fa\u6001\u76d8) \u7684\u6761\u4ef6\u4e0a\u9762\uff0c\u4f7f\u7528 msvc \u7f16\u8bd1\u5668\u57281\u5206\u949f\u4ee5\u5185\u7f16\u8bd1\u5b8c\u6210\uff0c\u4f7f\u7528 mingw \u7f16\u8bd1\u5668\u9700\u89816\u5206\u949f\uff0c\u5728\u963f\u91cc\u4e91 linux\u4e3b\u673a\u4e0a\u9762 (\u4e00\u68382GB )_ \u4f7f\u7528 GCC \u7f16\u8bd1\u5219\u9700\u8981 20\u5206\u949f\u4ee5\u4e0a\u3002 \u6240\u4ee5\u4e3a\u4e86\u7f29\u77ed\u5f00\u53d1\u7684\u65f6\u95f4\uff0c\u540c\u65f6\u80fd\u591f\u4f7f\u7528 Linux \u4e3b\u673a\u8fd0\u884c\u5e94\u7528\uff0c\u6211\u4eec\u9009\u62e9\u9996\u5148\u5728 windows \u4e0a\u9762\u4f7f\u7528 MSVC \u7f16\u8bd1\u5668\u8fdb\u884c\u5f00\u53d1\u3002\u4f7f\u7528 Qt Creator \u81ea\u5e26\u7684 mingw \u7f16\u8bd1\u5668\u521d\u6b65\u9a8c\u8bc1\u7a0b\u5e8f\u662f\u5426\u80fd\u5728 Linux \u4e0a\u7f16\u8bd1\u901a\u8fc7\uff0c\u800c\u6700\u540e\u5728linux \u4e0a\u4f7f\u7528\u76f8\u5e94\u7684\u7f16\u8bd1\u5668\u5982 GCC \u8fdb\u884c\u7f16\u8bd1\u5e76\u53d1\u5e03\u3002 \u4e0b\u9762\u6211\u4eec\u5b89\u88c5\u7f16\u8bd1\u73af\u5883\u3002 \u7f16\u8bd1\u73af\u5883\u5b89\u88c5 \u00b6 \u5b89\u88c5 VS \u4ece https://visualstudio.microsoft.com/ \u4e0a\u9762\u4e0b\u8f7d\u5e76\u5b89\u88c5 visual studio installer\u5e76\u8fd0\u884c\uff0c\u6309\u7167\u63d0\u793a\u8fdb\u884c\u5b89\u88c5 VS. \u8981\u6c42 VS \u7248\u672c\u4e0d\u4f4e\u4e8e 2017\u3002 \u5982\u679c\u662f\u4e2a\u4eba\u5f00\u53d1\uff0c\u53ef\u4ee5\u9009\u62e9 \u793e\u533a\u7248\u672c\u8fdb\u884c\u5b89\u88c5\u3002 \u5b89\u88c5 Qt Creator \u4ece Index of / (qt.io) \u6216\u8005\u5176\u4ed6\u7684\u955c\u50cf\u7f51\u7ad9\u4e0b\u8f7d Qt \u8fdb\u884c\u5b89\u88c5\uff0c\u8981\u6c42\u7248\u672c\u4e0d\u4f4e\u4e8e Qt5.12\u3002 \u6ce8\u610f\u5728\u5b89\u88c5\u8fc7\u7a0b\u4e2d\u9009\u62e9\u7f16\u8bd1\u5668\u65f6\uff0c\u52fe\u9009 mingw \u548c msvc \u4e24\u79cd\u7f16\u8bd1\u5668\u7c7b\u578b\u3002 \u5b89\u88c5\u5b8c\u7684\u9a8c\u8bc1\u3002 \u6253\u5f00Qt\uff0c\u521b\u5efa\u4e00\u4e2a Qt\u5e94\u7528\uff0c\u5f53\u5f39\u6846\u51fa\u73b0\u5982\u4e0b\u754c\u9762\u65f6\uff0c\u8bf4\u660e\u5b89\u88c5\u6210\u529f\u3002 IWebCore \u4e0b\u8f7d \u00b6 \u4ece github TODO: \u5730\u5740 \u4e0a\u9762\u4e0b\u8f7d IWebCore,\u89e3\u538b\u7f29\uff0c\u53ef\u4ee5\u770b\u5230\u76ee\u5f55\u7ed3\u6784\u5982\u4e0b\u6240\u793a |- iwebcore |- demo |- src |- assertion |- base ... |- src.pri |- test |- IWebCore.pro \u5176\u4e2d demo \u6587\u4ef6\u5939\u662f\u63d0\u4f9b\u7684\u4e00\u4e9b\u6848\u4f8b\uff0c\u80fd\u591f\u76f4\u63a5\u8fd0\u884c\u3002 src \u662f\u6e90\u7801\u6587\u4ef6\u5939\uff0c\u662f\u6211\u4eec\u6240\u9700\u8981\u7528\u7684\u7684\u4e1c\u897f\u3002 test \u662f\u5355\u5143\u6d4b\u8bd5\u6587\u4ef6\u5939\u3002 IWebCore.pro \u662f\u9879\u76ee\u7684\u7ba1\u7406\u6587\u4ef6\u3002 \u6240\u9700\u8981\u7684\u662f src \u6587\u4ef6\u5939\u4e2d\u63d0\u4f9b\u7684\u6e90\u7801\u6587\u4ef6\uff0c\u5728\u4f7f\u7528\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u590d\u5236 src \u6587\u4ef6\u5939\u5230\u6211\u4eec\u7684\u5de5\u7a0b\u76ee\u5f55\u6216\u8005\u76f4\u63a5\u5f15\u7528 src.pri \u6587\u4ef6\u5230\u6211\u4eec\u7684\u5de5\u7a0b .pro \u6587\u4ef6\u5f53\u4e2d\u3002 \u521b\u5efa\u4e00\u4e2a\u5e94\u7528 \u00b6 \u8fd9\u91cc\u6211\u4eec\u4ece\u5df2\u7ecf\u521b\u5efa\u597d\u7684\u73af\u5883\uff0c\u548c\u5df2\u7ecf\u4e0b\u8f7d\u597d\u7684\u4ee3\u7801\u521b\u5efa\u4e00\u4e2a\u6700\u7b80\u5355\u7684\u670d\u52a1\u5668\u3002 \u9996\u5148\u521b\u5efa\u4e00\u4e2a Qt Console Application \u53d6\u540d\u4e3a FirstDemo, \u7f16\u8bd1\u5668\u9009\u62e9\u7684\u65f6\u5019\uff0c\u5168\u9009\u6240\u6709\u7684\u7f16\u8bd1\u5668\u3002 \u521b\u5efa\u5b8c\u6210\u7684\u76ee\u5f55\u7ed3\u6784\u5982\u4e0b: \u53ef\u4ee5\u770b\u89c1\u6574\u4e2a\u9879\u76ee\u5f53\u4e2d\u53ea\u6709\u4e24\u4e2a\u6587\u4ef6\u4e00\u4e2a FirstDemo.pro , \u4e00\u4e2a main.cpp \u6211\u4eec\u6253\u5f00 FirstDemo.pro 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 QT - = gui CONFIG + = c++11 console CONFIG - = app_bundle # The following define makes your compiler emit warnings if you use # any Qt feature that has been marked deprecated (the exact warnings # depend on your compiler). Please consult the documentation of the # deprecated API in order to know how to port your code away from it. DEFINES + = QT_DEPRECATED_WARNINGS # You can also make your code fail to compile if it uses deprecated APIs. # In order to do so, uncomment the following line. # You can also select to disable deprecated APIs only up to a certain version of Qt. #DEFINES += QT_DISABLE_DEPRECATED_BEFORE=0x060000 # disables all the APIs deprecated before Qt 6.0.0 SOURCES + = \\ main.cpp # Default rules for deployment. qnx : target.path = /tmp/$${TARGET}/bin else : unix:!android: target.path = /opt/$${TARGET}/bin !isEmpty(target.path): INSTALLS += target \u9996\u5148\u5728\u7b2c\u4e00\u884c\uff0c\u6211\u4eec\u770b\u89c1 Qt \u6392\u9664\u4e86 gui \u7684\u5e93\u3002\u7b2c\u4e09\u884c\uff0c\u5b9a\u4e49\u7684c++11\u7684\u7f16\u8bd1\u9009\u9879\uff0c\u5e76console \u7f16\u8bd1\u9009\u9879\u3002\u5728\u7b2c17-18\u884c \u5b9a\u4e49main.cpp \u6587\u4ef6\u3002 \u90a3\u4e48\u6211\u4eec\u5bf9\u8fd9\u4e2a\u6587\u4ef6\u8fdb\u884c\u4fee\u6539\u4e00\u4e0b\uff0c\u4ee5\u5305\u542b IWebCore \u7684\u5e93\uff0c\u5982\u4e0b 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 QT - = gui QT + = network xml sql CONFIG + = c++11 console CONFIG - = app_bundle # The following define makes your compiler emit warnings if you use # any Qt feature that has been marked deprecated (the exact warnings # depend on your compiler). Please consult the documentation of the # deprecated API in order to know how to port your code away from it. DEFINES + = QT_DEPRECATED_WARNINGS # You can also make your code fail to compile if it uses deprecated APIs. # In order to do so, uncomment the following line. # You can also select to disable deprecated APIs only up to a certain version of Qt. #DEFINES += QT_DISABLE_DEPRECATED_BEFORE=0x060000 # disables all the APIs deprecated before Qt 6.0.0 include(../../src/src.pri) SOURCES + = \\ main.cpp # Default rules for deployment. qnx : target.path = /tmp/$${TARGET}/bin else : unix:!android: target.path = /opt/$${TARGET}/bin !isEmpty(target.path): INSTALLS += target \u53ef\u4ee5\u770b\u89c1\u6211\u4eec\u53ea\u662f\u589e\u52a0\u4e86\u4e24\u884c\u4ee3\u7801\uff1a \u7b2c\u4e00\u5904\uff1a QT + = network xml sql \u8fd9\u4e2a\u610f\u601d\u4f7f\u6211\u4eec\u4f7f\u7528\u4e86\u4e09\u4e2a\u5e93\uff0c\u5206\u522b\u4f7f network\uff0cxml, \u548c sql \u5e93\u3002\u5176\u5b9e\u8fd8\u6709\u53e6\u5916\u4e00\u4e2a core \u5e93\u7701\u7565\u4e0d\u5199\uff0c\u662f\u56e0\u4e3a core \u5e93\u9879\u76ee\u4f1a\u4e3a\u6211\u4eec\u81ea\u52a8\u914d\u7f6e\u3002 \u7b2c\u4e8c\u5904\uff1a 1 include(../../src/src.pri) \u8fd9\u4e2a\u662f\u6211\u4eec\u5f15\u7528\u7684 IWebCore \u5e93\u7684 src.pri \u76f8\u5bf9\u5730\u5740,\u5f53\u7136\u8fd9\u4e2a\u4e5f\u53ef\u4ee5\u4f7f\u7528\u7edd\u5bf9\u5730\u5740\uff0c\u5f15\u7528\u7684\u4f4d\u7f6e\u53d6\u51b3\u4e8e IWebCore \u653e\u7f6e\u7684\u4f4d\u7f6e\u3002\u8fd9\u91cc\u76ee\u524d\u5efa\u8bae\u628a\u5e93\u653e\u5728\u9879\u76ee\u76ee\u5f55\u5f53\u4e2d\uff0c\u4ee5\u4fbf\u4e8e\u62f7\u8d1d\u5230\u5176\u4ed6\u673a\u5668\u4e0a\u8fdb\u884c\u7f16\u8bd1\u3002 \u6b64\u65f6 \u9879\u76ee\u7ed3\u6784\u53d8\u6210\uff1a \u770b\u5230\u9879\u76ee\u4e2d\u591a\u4e86\u4e00\u4e2a \u7279\u6b8a\u6807\u8bb0\u7684 src \u6587\u4ef6\u5939\u8fd9\u4e2a\u5c31\u662f IWebCore \u7684\u6e90\u7801\u3002 TODO: \u5728\u4ee5\u540e\u7684\u7248\u672c\u4e2d\uff0c\u4f1a\u5f00\u53d1\u51fa\u5305\u7ba1\u7406\u7cfb\u7edf\u3002\u53ef\u4ee5\u901a\u8fc7\u7b80\u5355\u7684\u914d\u7f6e\u8fdb\u884c\u5305\u5b89\u88c5\u548c\u7ba1\u7406\u3002 \u8fd9\u65f6\u73af\u5883\u5df2\u7ecf\u914d\u7f6e\u597d\uff0c\u6211\u4eec\u518d\u6765\u770b main.cpp \u3002 \u5b83\u539f\u5148\u7684\u4ee3\u7801\u5982\u4e0b\uff1a 1 2 3 4 5 6 7 8 #include <QCoreApplication> int main ( int argc , char * argv []) { QCoreApplication a ( argc , argv ); return a . exec (); } \u6211\u4eec\u628a\u8fd9\u4e2a\u4ee3\u7801\u4fee\u6539\u6210\u5982\u4e0b: 1 2 3 4 5 6 7 8 9 10 11 #include <IWebCore> int main ( int argc , char * argv []) { IWebApplication a ( argc , argv ); IHttpServer server ; server . listen (); return a . exec (); } \u8fd9\u4e0a\u9762\u8868\u793a \u521b\u5efa\u4e00\u4e2a IWebApplication \u5e76\u4e14\u521b\u5efa\u5e76\u8fd0\u884c\u4e00\u4e2a server\u3002 \u9009\u62e9msvc \u7f16\u8bd1\u5668\u5e76\u8fd0\u884c: \u4f1a\u51fa\u73b0\u5982\u4e0b\u63d0\u793a\u4fe1\u606f\uff1a _____ _ _ _ _____ |_ _|| | | | | | / __ \\ | | | | | | ___ | |__ | / \\/ ___ _ __ ___ | | | |/\\| | / _ \\| '_ \\ | | / _ \\ | '__|/ _ \\ _| |_ \\ /\\ /| __/| |_) || \\__/\\| (_) || | | __/ \\___/ \\/ \\/ \\___||_.__/ \\____/ \\___/ |_| \\___| Load SystemEnvironment [\u221a] Auto Load Resource Task Finish server started at 127.0.0.1:8088 \u8fd9\u6837\u6211\u4eec\u7684\u73af\u5883\u5df2\u7ecf\u914d\u7f6e\u5b8c\u6210\uff0c\u7b2c\u4e00\u4e2a\u670d\u52a1\u5668\u4e5f\u5df2\u7ecf\u542f\u52a8\u3002","title":"\u5b89\u88c5 IWebCore"},{"location":"guide/install_iwebcore/#iwebcore","text":"IWebCore \u76ee\u524d\u662f\u4f7f\u7528 qmake \u8fdb\u884c\u7f16\u8bd1\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981 Qt \u7684\u5f00\u53d1\u73af\u5883\u5e76 Qt Creator IDE\u3002\u6240\u4ee5\u7b2c\u4e00\u6b65\uff0c\u6211\u4eec\u662f\u5b89\u88c5\u73af\u5883\u3002 NOTE:\u5728\u4ee5\u540e\u7684\u7248\u672c\u4e2d\uff0c IWebCore \u4f1a\u540c\u65f6\u652f\u6301 qmake \u548c cmake \u7ba1\u7406\uff0c\u652f\u6301 Visual Studio \u548c CLion \u7b49\u5176\u4ed6\u7684IDE. \u73b0\u9636\u6bb5\u5f00\u53d1\u73af\u5883\u6682\u5b9a\u53ea\u80fd\u5728 Qt Creator \u4e0a\u8fdb\u884c\u5f00\u53d1\u548c\u7f16\u8bd1\u3002 \u5728\u5b89\u88c5 Qt Creator \u4e4b\u524d\uff0c\u6211\u4eec\u5148\u5b89\u88c5 Visual Studio \u7248\u672c\u4e0d\u4f4e\u4e8e 2017 \u7248\u672c\u3002\u8fd9\u6837\u6211\u4eec\u5728\u4e4b\u540e\u5b89\u88c5Qt Creator \u65f6\uff0c\u53ef\u4ee5\u52fe\u9009vs2017 \u6216 vs2019 \u7248\u672c\u7684 msvc \u7f16\u8bd1\u5668\u3002\u8fd9\u6837\u7701\u53bb\u4e86\u4e4b\u540e\u914d\u7f6e\u7f16\u8bd1\u5668\u7684\u9ebb\u70e6\u3002 \u540c\u65f6\u8fd9\u91cc\u8981\u6c42 msvc \u7f16\u8bd1\u5668\u7684\u539f\u56e0\u5219\u662f msvc \u7f16\u8bd1\u5668\u7684\u7f16\u8bd1\u901f\u5ea6\u6781\u5feb\u3002\u5728\u672c\u4eba\u7684\u7535\u8111\u4e0a_(Intel(R) Core(TM) i5-3230M, 12GB \u5185\u5b58\uff0c 120G \u56fa\u6001\u76d8) \u7684\u6761\u4ef6\u4e0a\u9762\uff0c\u4f7f\u7528 msvc \u7f16\u8bd1\u5668\u57281\u5206\u949f\u4ee5\u5185\u7f16\u8bd1\u5b8c\u6210\uff0c\u4f7f\u7528 mingw \u7f16\u8bd1\u5668\u9700\u89816\u5206\u949f\uff0c\u5728\u963f\u91cc\u4e91 linux\u4e3b\u673a\u4e0a\u9762 (\u4e00\u68382GB )_ \u4f7f\u7528 GCC \u7f16\u8bd1\u5219\u9700\u8981 20\u5206\u949f\u4ee5\u4e0a\u3002 \u6240\u4ee5\u4e3a\u4e86\u7f29\u77ed\u5f00\u53d1\u7684\u65f6\u95f4\uff0c\u540c\u65f6\u80fd\u591f\u4f7f\u7528 Linux \u4e3b\u673a\u8fd0\u884c\u5e94\u7528\uff0c\u6211\u4eec\u9009\u62e9\u9996\u5148\u5728 windows \u4e0a\u9762\u4f7f\u7528 MSVC \u7f16\u8bd1\u5668\u8fdb\u884c\u5f00\u53d1\u3002\u4f7f\u7528 Qt Creator \u81ea\u5e26\u7684 mingw \u7f16\u8bd1\u5668\u521d\u6b65\u9a8c\u8bc1\u7a0b\u5e8f\u662f\u5426\u80fd\u5728 Linux \u4e0a\u7f16\u8bd1\u901a\u8fc7\uff0c\u800c\u6700\u540e\u5728linux \u4e0a\u4f7f\u7528\u76f8\u5e94\u7684\u7f16\u8bd1\u5668\u5982 GCC \u8fdb\u884c\u7f16\u8bd1\u5e76\u53d1\u5e03\u3002 \u4e0b\u9762\u6211\u4eec\u5b89\u88c5\u7f16\u8bd1\u73af\u5883\u3002","title":"\u5b89\u88c5 IWebCore"},{"location":"guide/install_iwebcore/#_1","text":"\u5b89\u88c5 VS \u4ece https://visualstudio.microsoft.com/ \u4e0a\u9762\u4e0b\u8f7d\u5e76\u5b89\u88c5 visual studio installer\u5e76\u8fd0\u884c\uff0c\u6309\u7167\u63d0\u793a\u8fdb\u884c\u5b89\u88c5 VS. \u8981\u6c42 VS \u7248\u672c\u4e0d\u4f4e\u4e8e 2017\u3002 \u5982\u679c\u662f\u4e2a\u4eba\u5f00\u53d1\uff0c\u53ef\u4ee5\u9009\u62e9 \u793e\u533a\u7248\u672c\u8fdb\u884c\u5b89\u88c5\u3002 \u5b89\u88c5 Qt Creator \u4ece Index of / (qt.io) \u6216\u8005\u5176\u4ed6\u7684\u955c\u50cf\u7f51\u7ad9\u4e0b\u8f7d Qt \u8fdb\u884c\u5b89\u88c5\uff0c\u8981\u6c42\u7248\u672c\u4e0d\u4f4e\u4e8e Qt5.12\u3002 \u6ce8\u610f\u5728\u5b89\u88c5\u8fc7\u7a0b\u4e2d\u9009\u62e9\u7f16\u8bd1\u5668\u65f6\uff0c\u52fe\u9009 mingw \u548c msvc \u4e24\u79cd\u7f16\u8bd1\u5668\u7c7b\u578b\u3002 \u5b89\u88c5\u5b8c\u7684\u9a8c\u8bc1\u3002 \u6253\u5f00Qt\uff0c\u521b\u5efa\u4e00\u4e2a Qt\u5e94\u7528\uff0c\u5f53\u5f39\u6846\u51fa\u73b0\u5982\u4e0b\u754c\u9762\u65f6\uff0c\u8bf4\u660e\u5b89\u88c5\u6210\u529f\u3002","title":"\u7f16\u8bd1\u73af\u5883\u5b89\u88c5"},{"location":"guide/install_iwebcore/#iwebcore_1","text":"\u4ece github TODO: \u5730\u5740 \u4e0a\u9762\u4e0b\u8f7d IWebCore,\u89e3\u538b\u7f29\uff0c\u53ef\u4ee5\u770b\u5230\u76ee\u5f55\u7ed3\u6784\u5982\u4e0b\u6240\u793a |- iwebcore |- demo |- src |- assertion |- base ... |- src.pri |- test |- IWebCore.pro \u5176\u4e2d demo \u6587\u4ef6\u5939\u662f\u63d0\u4f9b\u7684\u4e00\u4e9b\u6848\u4f8b\uff0c\u80fd\u591f\u76f4\u63a5\u8fd0\u884c\u3002 src \u662f\u6e90\u7801\u6587\u4ef6\u5939\uff0c\u662f\u6211\u4eec\u6240\u9700\u8981\u7528\u7684\u7684\u4e1c\u897f\u3002 test \u662f\u5355\u5143\u6d4b\u8bd5\u6587\u4ef6\u5939\u3002 IWebCore.pro \u662f\u9879\u76ee\u7684\u7ba1\u7406\u6587\u4ef6\u3002 \u6240\u9700\u8981\u7684\u662f src \u6587\u4ef6\u5939\u4e2d\u63d0\u4f9b\u7684\u6e90\u7801\u6587\u4ef6\uff0c\u5728\u4f7f\u7528\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u590d\u5236 src \u6587\u4ef6\u5939\u5230\u6211\u4eec\u7684\u5de5\u7a0b\u76ee\u5f55\u6216\u8005\u76f4\u63a5\u5f15\u7528 src.pri \u6587\u4ef6\u5230\u6211\u4eec\u7684\u5de5\u7a0b .pro \u6587\u4ef6\u5f53\u4e2d\u3002","title":"IWebCore \u4e0b\u8f7d"},{"location":"guide/install_iwebcore/#_2","text":"\u8fd9\u91cc\u6211\u4eec\u4ece\u5df2\u7ecf\u521b\u5efa\u597d\u7684\u73af\u5883\uff0c\u548c\u5df2\u7ecf\u4e0b\u8f7d\u597d\u7684\u4ee3\u7801\u521b\u5efa\u4e00\u4e2a\u6700\u7b80\u5355\u7684\u670d\u52a1\u5668\u3002 \u9996\u5148\u521b\u5efa\u4e00\u4e2a Qt Console Application \u53d6\u540d\u4e3a FirstDemo, \u7f16\u8bd1\u5668\u9009\u62e9\u7684\u65f6\u5019\uff0c\u5168\u9009\u6240\u6709\u7684\u7f16\u8bd1\u5668\u3002 \u521b\u5efa\u5b8c\u6210\u7684\u76ee\u5f55\u7ed3\u6784\u5982\u4e0b: \u53ef\u4ee5\u770b\u89c1\u6574\u4e2a\u9879\u76ee\u5f53\u4e2d\u53ea\u6709\u4e24\u4e2a\u6587\u4ef6\u4e00\u4e2a FirstDemo.pro , \u4e00\u4e2a main.cpp \u6211\u4eec\u6253\u5f00 FirstDemo.pro 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 QT - = gui CONFIG + = c++11 console CONFIG - = app_bundle # The following define makes your compiler emit warnings if you use # any Qt feature that has been marked deprecated (the exact warnings # depend on your compiler). Please consult the documentation of the # deprecated API in order to know how to port your code away from it. DEFINES + = QT_DEPRECATED_WARNINGS # You can also make your code fail to compile if it uses deprecated APIs. # In order to do so, uncomment the following line. # You can also select to disable deprecated APIs only up to a certain version of Qt. #DEFINES += QT_DISABLE_DEPRECATED_BEFORE=0x060000 # disables all the APIs deprecated before Qt 6.0.0 SOURCES + = \\ main.cpp # Default rules for deployment. qnx : target.path = /tmp/$${TARGET}/bin else : unix:!android: target.path = /opt/$${TARGET}/bin !isEmpty(target.path): INSTALLS += target \u9996\u5148\u5728\u7b2c\u4e00\u884c\uff0c\u6211\u4eec\u770b\u89c1 Qt \u6392\u9664\u4e86 gui \u7684\u5e93\u3002\u7b2c\u4e09\u884c\uff0c\u5b9a\u4e49\u7684c++11\u7684\u7f16\u8bd1\u9009\u9879\uff0c\u5e76console \u7f16\u8bd1\u9009\u9879\u3002\u5728\u7b2c17-18\u884c \u5b9a\u4e49main.cpp \u6587\u4ef6\u3002 \u90a3\u4e48\u6211\u4eec\u5bf9\u8fd9\u4e2a\u6587\u4ef6\u8fdb\u884c\u4fee\u6539\u4e00\u4e0b\uff0c\u4ee5\u5305\u542b IWebCore \u7684\u5e93\uff0c\u5982\u4e0b 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 QT - = gui QT + = network xml sql CONFIG + = c++11 console CONFIG - = app_bundle # The following define makes your compiler emit warnings if you use # any Qt feature that has been marked deprecated (the exact warnings # depend on your compiler). Please consult the documentation of the # deprecated API in order to know how to port your code away from it. DEFINES + = QT_DEPRECATED_WARNINGS # You can also make your code fail to compile if it uses deprecated APIs. # In order to do so, uncomment the following line. # You can also select to disable deprecated APIs only up to a certain version of Qt. #DEFINES += QT_DISABLE_DEPRECATED_BEFORE=0x060000 # disables all the APIs deprecated before Qt 6.0.0 include(../../src/src.pri) SOURCES + = \\ main.cpp # Default rules for deployment. qnx : target.path = /tmp/$${TARGET}/bin else : unix:!android: target.path = /opt/$${TARGET}/bin !isEmpty(target.path): INSTALLS += target \u53ef\u4ee5\u770b\u89c1\u6211\u4eec\u53ea\u662f\u589e\u52a0\u4e86\u4e24\u884c\u4ee3\u7801\uff1a \u7b2c\u4e00\u5904\uff1a QT + = network xml sql \u8fd9\u4e2a\u610f\u601d\u4f7f\u6211\u4eec\u4f7f\u7528\u4e86\u4e09\u4e2a\u5e93\uff0c\u5206\u522b\u4f7f network\uff0cxml, \u548c sql \u5e93\u3002\u5176\u5b9e\u8fd8\u6709\u53e6\u5916\u4e00\u4e2a core \u5e93\u7701\u7565\u4e0d\u5199\uff0c\u662f\u56e0\u4e3a core \u5e93\u9879\u76ee\u4f1a\u4e3a\u6211\u4eec\u81ea\u52a8\u914d\u7f6e\u3002 \u7b2c\u4e8c\u5904\uff1a 1 include(../../src/src.pri) \u8fd9\u4e2a\u662f\u6211\u4eec\u5f15\u7528\u7684 IWebCore \u5e93\u7684 src.pri \u76f8\u5bf9\u5730\u5740,\u5f53\u7136\u8fd9\u4e2a\u4e5f\u53ef\u4ee5\u4f7f\u7528\u7edd\u5bf9\u5730\u5740\uff0c\u5f15\u7528\u7684\u4f4d\u7f6e\u53d6\u51b3\u4e8e IWebCore \u653e\u7f6e\u7684\u4f4d\u7f6e\u3002\u8fd9\u91cc\u76ee\u524d\u5efa\u8bae\u628a\u5e93\u653e\u5728\u9879\u76ee\u76ee\u5f55\u5f53\u4e2d\uff0c\u4ee5\u4fbf\u4e8e\u62f7\u8d1d\u5230\u5176\u4ed6\u673a\u5668\u4e0a\u8fdb\u884c\u7f16\u8bd1\u3002 \u6b64\u65f6 \u9879\u76ee\u7ed3\u6784\u53d8\u6210\uff1a \u770b\u5230\u9879\u76ee\u4e2d\u591a\u4e86\u4e00\u4e2a \u7279\u6b8a\u6807\u8bb0\u7684 src \u6587\u4ef6\u5939\u8fd9\u4e2a\u5c31\u662f IWebCore \u7684\u6e90\u7801\u3002 TODO: \u5728\u4ee5\u540e\u7684\u7248\u672c\u4e2d\uff0c\u4f1a\u5f00\u53d1\u51fa\u5305\u7ba1\u7406\u7cfb\u7edf\u3002\u53ef\u4ee5\u901a\u8fc7\u7b80\u5355\u7684\u914d\u7f6e\u8fdb\u884c\u5305\u5b89\u88c5\u548c\u7ba1\u7406\u3002 \u8fd9\u65f6\u73af\u5883\u5df2\u7ecf\u914d\u7f6e\u597d\uff0c\u6211\u4eec\u518d\u6765\u770b main.cpp \u3002 \u5b83\u539f\u5148\u7684\u4ee3\u7801\u5982\u4e0b\uff1a 1 2 3 4 5 6 7 8 #include <QCoreApplication> int main ( int argc , char * argv []) { QCoreApplication a ( argc , argv ); return a . exec (); } \u6211\u4eec\u628a\u8fd9\u4e2a\u4ee3\u7801\u4fee\u6539\u6210\u5982\u4e0b: 1 2 3 4 5 6 7 8 9 10 11 #include <IWebCore> int main ( int argc , char * argv []) { IWebApplication a ( argc , argv ); IHttpServer server ; server . listen (); return a . exec (); } \u8fd9\u4e0a\u9762\u8868\u793a \u521b\u5efa\u4e00\u4e2a IWebApplication \u5e76\u4e14\u521b\u5efa\u5e76\u8fd0\u884c\u4e00\u4e2a server\u3002 \u9009\u62e9msvc \u7f16\u8bd1\u5668\u5e76\u8fd0\u884c: \u4f1a\u51fa\u73b0\u5982\u4e0b\u63d0\u793a\u4fe1\u606f\uff1a _____ _ _ _ _____ |_ _|| | | | | | / __ \\ | | | | | | ___ | |__ | / \\/ ___ _ __ ___ | | | |/\\| | / _ \\| '_ \\ | | / _ \\ | '__|/ _ \\ _| |_ \\ /\\ /| __/| |_) || \\__/\\| (_) || | | __/ \\___/ \\/ \\/ \\___||_.__/ \\____/ \\___/ |_| \\___| Load SystemEnvironment [\u221a] Auto Load Resource Task Finish server started at 127.0.0.1:8088 \u8fd9\u6837\u6211\u4eec\u7684\u73af\u5883\u5df2\u7ecf\u914d\u7f6e\u5b8c\u6210\uff0c\u7b2c\u4e00\u4e2a\u670d\u52a1\u5668\u4e5f\u5df2\u7ecf\u542f\u52a8\u3002","title":"\u521b\u5efa\u4e00\u4e2a\u5e94\u7528"},{"location":"guide/start_a_web_server/","text":"\u7f16\u5199\u4e00\u4e2a\u7f51\u7edc\u670d\u52a1\u5668 \u00b6 \u63a5\u4e0b\u6765\u4e3a\u4e86\u8bf4\u660e IWebCore \u7684\u4f7f\u7528\uff0c\u6211\u4eec\u521b\u5efa\u4e00\u4e2a\u7b80\u5355\u7684 web \u9879\u76ee \u521b\u5efa \u4e00\u4e2a\u57fa\u672c\u7684\u670d\u52a1\u5668\u9879\u76ee \u00b6 \u4e0b\u8f7dIWebCore, \u5173\u4e8e IWebCore \u7684\u4f7f\u7528\u65b9\u5f0f\uff0c \u53c2\u8003 IWebCore\u4f7f\u7528\u65b9\u5f0f \u65b0\u5efa\u4e00\u4e2a Qt Console Application , \u4fee\u6539 *.pro \u6587\u4ef6\u5982\u4e0b\uff1a 1 2 3 4 5 6 7 8 9 10 QT - = gui QT + = sql core network xml CONFIG + = c++11 console CONFIG - = app_bundle include(../../../src/src.pri) SOURCES + = \\ main.cpp \u5728\u7b2c2\u884c\uff0c \u5f15\u5165 sql, core, network, xml \u56db\u4e2a\u5e93 \u5728\u7b2c7\u884c\uff0c\u5305\u542b \"IWebCore\" \u7684 src.pri \uff0c \u5f15\u5165 IWebCore \u5e93 \u4fee\u6539 main.cpp \u5982\u4e0b\uff1a 1 2 3 4 5 6 7 8 9 10 11 #include <IWebCore> int main ( int argc , char * argv []) { IWebApplication app ( argc , argv ); IHttpServer server ; server . listen (); return app . exec (); } \u5728\u7b2c1\u884c\uff0c\u5f15\u5165IWebCore\u5e93\uff0c \u8fd9\u540c\u6837\u662f\u5728\u6bcf\u4e00\u4e2a\u5934\u6587\u4ef6\u4e2d\u9700\u8981\u5f15\u7528\u7684\u5e93\u3002 \u5728\u7b2c5-10\u884c\uff0c\u521d\u59cb\u5316 IWebApplication,\u521b\u5efa\u5e76\u8fd0\u884c\u4e00\u4e2aserver\u3002 \u8fd9\u6837\u4e00\u4e2aserver \u5c31\u5b8c\u6210\u4e86\uff0c \u5148\u8fd0\u884c\u8fd0\u884c\u4e00\u4e0b\u9879\u76ee, console \u8f93\u51fa\u5982\u4e0b\uff1a 1 2 3 4 5 6 7 8 9 10 _____ _ _ _ _____ |_ _|| | | | | | / __ \\ | | | | | | ___ | |__ | / \\/ ___ _ __ ___ | | | |/\\| | / _ \\| '_ \\ | | / _ \\ | '__|/ _ \\ _| |_ \\ /\\ /| __/| |_) || \\__/\\| (_) || | | __/ \\___/ \\/ \\/ \\___||_.__/ \\____/ \\___/ |_| \\___| Load SystemEnvironment [\u221a] Auto Load Resource Task Finish server started at 127.0.0.1:8088 and the server will be run at: http://127.0.0.1:8088, open it in browser and the browser will show: \u6dfb\u52a0\u4e00\u4e2aController\u548c\u9996\u9875\u8bf7\u6c42 \u00b6 \u5728\u4e0a\u9762\u7684\u4f8b\u5b50\u4e2d\uff0c\u4e00\u4e2a\u670d\u52a1\u5668\u521b\u5efa\u4e86\uff0c\u4f46\u662f\u6ca1\u6709\u4efb\u4f55\u7684 url \u6620\u5c04\uff0c\u6240\u4ee5\u4e0d\u7ba1\u4ec0\u4e48\u6837url, \u90fd\u4f1a\u8fd4\u56de 404 NOT FOUND \u4fe1\u606f\u3002\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u6dfb\u52a0\u4e00\u4e2a controller \u5904\u7406 url\u3002 \u9996\u5148\uff0c\u521b\u5efa MyController \u7c7b, \u5305\u542b MyController.h \u548c MyController.cpp \u4e24\u4e2a\u6587\u4ef6\uff1a \u5934\u6587\u4ef6\u7684\u4ee3\u7801\u662f\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 #pragma once #include <IWebCore> class MyController : public IControllerInterface < MyController > { Q_GADGET $AsController ( MyController ) public : MyController () = default ; $GetMapping ( index , / ) QString index (); }; \u7b2c1\u884c #pragma once \u5f00\u5934\uff0c \u53ef\u4ee5\u67e5\u770b [] \u7b2c3\u884c \u5305\u542b\u5e93\u7684\u5934\u6587\u4ef6 \u7b2c5\u884c \u4ee5public \u7684\u65b9\u5f0f \u7ee7\u627f IControllerInterface. \u7b2c7\u884c \u4f7f\u7528 Q_GADGET \u7b2c8\u884c \u4f7f\u7528 $AsController \u8868\u793a\u8fd9\u4e2a\u662f\u4e00\u4e2a controller \u7c7b\uff0c \u7b2c12-13\u884c \u5b9a\u4e49\u4e00\u4e2a index \u51fd\u6570,\u5e76\u5c06\u51fd\u6570\u6620\u5c04\u5230 / \u5730\u5740\uff0c \u6e90\u6587\u4ef6\u5982\u4e0b 1 2 3 4 5 6 #include \"MyController.h\" QString MyController::index () { return \"hello world\" ; } \u8fd9\u4e2a\u5e76\u4e0d\u9700\u8981\u591a\u89e3\u91ca\uff0c\u5c31\u662findex \u51fd\u6570\uff0c \u8fd4\u56de \"hello world\". \u8ba9\u6211\u4eec\u91cd\u65b0\u8fd0\u884c\u9879\u76ee console \u5f53\u4e2d\u8f93\u51fa: _____ _ _ _ _____ |_ _|| | | | | | / __ \\ | | | | | | ___ | |__ | / \\/ ___ _ __ ___ | | | |/\\| | / _ \\| '_ \\ | | / _ \\ | '__|/ _ \\ _| |_ \\ /\\ /| __/| |_) || \\__/\\| (_) || | | __/ \\___/ \\/ \\/ \\___||_.__/ \\____/ \\___/ |_| \\___| Load SystemEnvironment [\u221a] Auto Load Resource Task Finish [\u221a] Controller MyController registered server started at 127.0.0.1:8088 \u53ef\u4ee5\u770b\u89c1\u8f93\u51fa\u591a\u4e86\u7b2c10\u884c\uff0c Controller MyController registered , \u8fd9\u4e2a\u8868\u793a controller \u5df2\u7ecf\u81ea\u52a8\u6ce8\u518c\u5230\u6211\u4eec\u7684\u7a0b\u5e8f\u91cc\u9762\u4e86\uff0c\u5173\u4e8e\u5982\u4f55\u6ce8\u518c\uff0c\u53ef\u4ee5\u53c2\u8003 \u9759\u6001\u6ce8\u518c \u6211\u4eec\u91cd\u65b0\u6253\u5f00 \u6d4f\u89c8\u5668\uff0c\u8f93\u5165 http://127.0.0.1:8088, \u6d4f\u89c8\u5668\u8f93\u51fa\u4ee5\u4e0b\u5185\u5bb9: \u53ef\u4ee5\u770b\u5230\u8bf7\u6c42\u6210\u529f\u3002 \u518d\u5199\u4e00\u4e2a\u8bf7\u6c42 \u00b6 \u5934\u6587\u4ef6\u4fee\u6539\u5982\u4e0b\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 #pragma once #include <IWebCore> class MyController : public IControllerInterface < MyController > { Q_GADGET $AsController ( MyController ) public : MyController () = default ; $GetMapping ( index , / ) QString index (); $IgnoreParamWarn ( hello ) $GetMapping ( hello , /< name > ) QString hello ( QString name ); }; \u53ef\u4ee5\u770b\u89c1 \u53ea\u662f\u6dfb\u52a0\u4e8615-17 \u4e09\u884c\u4ee3\u7801\uff0c \u7b2c15 \u884c\uff1a\u8fd9\u662f runtime-assertion \u68c0\u67e5\u7684\u4e00\u90e8\u5206\uff0c\u73b0\u5728\u4e0d\u9700\u8981\u5173\u5fc3\uff0c\u6709\u5174\u8da3\u53ef\u4ee5\u67e5\u770b \u8fd0\u884c\u65f6\u68c0\u67e5 \u7b2c17\u884c\uff0c\u5b9a\u4e49 hello \u51fd\u6570\uff0c \u5e76\u4e14\u6709\u4e00\u4e2a QString name \u53c2\u6570\u3002\u5173\u4e8e\u51fd\u6570\u53c2\u6570\u7684\u8bbe\u5b9a,\u8bf7\u67e5\u770b controller\u51fd\u6570\u53c2\u6570 \u7b2c16\u884c\uff0c\u5b9a\u4e49\u4e2a GET \u8bf7\u6c42\uff0c\u5c06 /<name> url \u6620\u5c04\u5230 hello \u51fd\u6570\u3002 \u5173\u4e8e /<name> \u8bf7\u67e5\u770b url \u6620\u5c04\u89c4\u5219 \u6e90\u6587\u4ef6\u5982\u4e0b: 1 2 3 4 5 6 7 8 9 10 11 #include \"MyController.h\" QString MyController::index () { return \"hello world\" ; } QString MyController::hello ( QString name ) { return \"hello \" + name ; } \u4f9d\u7136\u662f\u4e00\u4e2a\u5f88\u666e\u901a\u7684\u51fd\u6570\u3002 \u63a5\u4e0b\u6765\u6211\u4eec\u6253\u5f00\u6d4f\u89c8\u5668\u8f93\u5165 http://127.0.0.1/yuekeyuan, \u6d4f\u89c8\u5668\u8f93\u51fa\u4ee5\u4e0b\u5185\u5bb9\uff1a \u53ef\u4ee5\u770b\u89c1\u6d4f\u89c8\u5668\u8fd4\u56de\u7684\u6b63\u662f\u6211\u4eec\u60f3\u8981\u7684\u5185\u5bb9. \u57fa\u672c\u7684\u4ecb\u7ecd\u5c31\u5230\u8fd9\u91cc\uff0c\u63a5\u4e0b\u6765\u53ef\u4ee5\u5b66\u4e60\uff1a assertion configuration controller and mapping database, table, view, and model.","title":"\u7f16\u5199\u4e00\u4e2a\u7f51\u7edc\u670d\u52a1\u5668"},{"location":"guide/start_a_web_server/#_1","text":"\u63a5\u4e0b\u6765\u4e3a\u4e86\u8bf4\u660e IWebCore \u7684\u4f7f\u7528\uff0c\u6211\u4eec\u521b\u5efa\u4e00\u4e2a\u7b80\u5355\u7684 web \u9879\u76ee","title":"\u7f16\u5199\u4e00\u4e2a\u7f51\u7edc\u670d\u52a1\u5668"},{"location":"guide/start_a_web_server/#_2","text":"\u4e0b\u8f7dIWebCore, \u5173\u4e8e IWebCore \u7684\u4f7f\u7528\u65b9\u5f0f\uff0c \u53c2\u8003 IWebCore\u4f7f\u7528\u65b9\u5f0f \u65b0\u5efa\u4e00\u4e2a Qt Console Application , \u4fee\u6539 *.pro \u6587\u4ef6\u5982\u4e0b\uff1a 1 2 3 4 5 6 7 8 9 10 QT - = gui QT + = sql core network xml CONFIG + = c++11 console CONFIG - = app_bundle include(../../../src/src.pri) SOURCES + = \\ main.cpp \u5728\u7b2c2\u884c\uff0c \u5f15\u5165 sql, core, network, xml \u56db\u4e2a\u5e93 \u5728\u7b2c7\u884c\uff0c\u5305\u542b \"IWebCore\" \u7684 src.pri \uff0c \u5f15\u5165 IWebCore \u5e93 \u4fee\u6539 main.cpp \u5982\u4e0b\uff1a 1 2 3 4 5 6 7 8 9 10 11 #include <IWebCore> int main ( int argc , char * argv []) { IWebApplication app ( argc , argv ); IHttpServer server ; server . listen (); return app . exec (); } \u5728\u7b2c1\u884c\uff0c\u5f15\u5165IWebCore\u5e93\uff0c \u8fd9\u540c\u6837\u662f\u5728\u6bcf\u4e00\u4e2a\u5934\u6587\u4ef6\u4e2d\u9700\u8981\u5f15\u7528\u7684\u5e93\u3002 \u5728\u7b2c5-10\u884c\uff0c\u521d\u59cb\u5316 IWebApplication,\u521b\u5efa\u5e76\u8fd0\u884c\u4e00\u4e2aserver\u3002 \u8fd9\u6837\u4e00\u4e2aserver \u5c31\u5b8c\u6210\u4e86\uff0c \u5148\u8fd0\u884c\u8fd0\u884c\u4e00\u4e0b\u9879\u76ee, console \u8f93\u51fa\u5982\u4e0b\uff1a 1 2 3 4 5 6 7 8 9 10 _____ _ _ _ _____ |_ _|| | | | | | / __ \\ | | | | | | ___ | |__ | / \\/ ___ _ __ ___ | | | |/\\| | / _ \\| '_ \\ | | / _ \\ | '__|/ _ \\ _| |_ \\ /\\ /| __/| |_) || \\__/\\| (_) || | | __/ \\___/ \\/ \\/ \\___||_.__/ \\____/ \\___/ |_| \\___| Load SystemEnvironment [\u221a] Auto Load Resource Task Finish server started at 127.0.0.1:8088 and the server will be run at: http://127.0.0.1:8088, open it in browser and the browser will show:","title":"\u521b\u5efa \u4e00\u4e2a\u57fa\u672c\u7684\u670d\u52a1\u5668\u9879\u76ee"},{"location":"guide/start_a_web_server/#controller","text":"\u5728\u4e0a\u9762\u7684\u4f8b\u5b50\u4e2d\uff0c\u4e00\u4e2a\u670d\u52a1\u5668\u521b\u5efa\u4e86\uff0c\u4f46\u662f\u6ca1\u6709\u4efb\u4f55\u7684 url \u6620\u5c04\uff0c\u6240\u4ee5\u4e0d\u7ba1\u4ec0\u4e48\u6837url, \u90fd\u4f1a\u8fd4\u56de 404 NOT FOUND \u4fe1\u606f\u3002\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u6dfb\u52a0\u4e00\u4e2a controller \u5904\u7406 url\u3002 \u9996\u5148\uff0c\u521b\u5efa MyController \u7c7b, \u5305\u542b MyController.h \u548c MyController.cpp \u4e24\u4e2a\u6587\u4ef6\uff1a \u5934\u6587\u4ef6\u7684\u4ee3\u7801\u662f\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 #pragma once #include <IWebCore> class MyController : public IControllerInterface < MyController > { Q_GADGET $AsController ( MyController ) public : MyController () = default ; $GetMapping ( index , / ) QString index (); }; \u7b2c1\u884c #pragma once \u5f00\u5934\uff0c \u53ef\u4ee5\u67e5\u770b [] \u7b2c3\u884c \u5305\u542b\u5e93\u7684\u5934\u6587\u4ef6 \u7b2c5\u884c \u4ee5public \u7684\u65b9\u5f0f \u7ee7\u627f IControllerInterface. \u7b2c7\u884c \u4f7f\u7528 Q_GADGET \u7b2c8\u884c \u4f7f\u7528 $AsController \u8868\u793a\u8fd9\u4e2a\u662f\u4e00\u4e2a controller \u7c7b\uff0c \u7b2c12-13\u884c \u5b9a\u4e49\u4e00\u4e2a index \u51fd\u6570,\u5e76\u5c06\u51fd\u6570\u6620\u5c04\u5230 / \u5730\u5740\uff0c \u6e90\u6587\u4ef6\u5982\u4e0b 1 2 3 4 5 6 #include \"MyController.h\" QString MyController::index () { return \"hello world\" ; } \u8fd9\u4e2a\u5e76\u4e0d\u9700\u8981\u591a\u89e3\u91ca\uff0c\u5c31\u662findex \u51fd\u6570\uff0c \u8fd4\u56de \"hello world\". \u8ba9\u6211\u4eec\u91cd\u65b0\u8fd0\u884c\u9879\u76ee console \u5f53\u4e2d\u8f93\u51fa: _____ _ _ _ _____ |_ _|| | | | | | / __ \\ | | | | | | ___ | |__ | / \\/ ___ _ __ ___ | | | |/\\| | / _ \\| '_ \\ | | / _ \\ | '__|/ _ \\ _| |_ \\ /\\ /| __/| |_) || \\__/\\| (_) || | | __/ \\___/ \\/ \\/ \\___||_.__/ \\____/ \\___/ |_| \\___| Load SystemEnvironment [\u221a] Auto Load Resource Task Finish [\u221a] Controller MyController registered server started at 127.0.0.1:8088 \u53ef\u4ee5\u770b\u89c1\u8f93\u51fa\u591a\u4e86\u7b2c10\u884c\uff0c Controller MyController registered , \u8fd9\u4e2a\u8868\u793a controller \u5df2\u7ecf\u81ea\u52a8\u6ce8\u518c\u5230\u6211\u4eec\u7684\u7a0b\u5e8f\u91cc\u9762\u4e86\uff0c\u5173\u4e8e\u5982\u4f55\u6ce8\u518c\uff0c\u53ef\u4ee5\u53c2\u8003 \u9759\u6001\u6ce8\u518c \u6211\u4eec\u91cd\u65b0\u6253\u5f00 \u6d4f\u89c8\u5668\uff0c\u8f93\u5165 http://127.0.0.1:8088, \u6d4f\u89c8\u5668\u8f93\u51fa\u4ee5\u4e0b\u5185\u5bb9: \u53ef\u4ee5\u770b\u5230\u8bf7\u6c42\u6210\u529f\u3002","title":"\u6dfb\u52a0\u4e00\u4e2aController\u548c\u9996\u9875\u8bf7\u6c42"},{"location":"guide/start_a_web_server/#_3","text":"\u5934\u6587\u4ef6\u4fee\u6539\u5982\u4e0b\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 #pragma once #include <IWebCore> class MyController : public IControllerInterface < MyController > { Q_GADGET $AsController ( MyController ) public : MyController () = default ; $GetMapping ( index , / ) QString index (); $IgnoreParamWarn ( hello ) $GetMapping ( hello , /< name > ) QString hello ( QString name ); }; \u53ef\u4ee5\u770b\u89c1 \u53ea\u662f\u6dfb\u52a0\u4e8615-17 \u4e09\u884c\u4ee3\u7801\uff0c \u7b2c15 \u884c\uff1a\u8fd9\u662f runtime-assertion \u68c0\u67e5\u7684\u4e00\u90e8\u5206\uff0c\u73b0\u5728\u4e0d\u9700\u8981\u5173\u5fc3\uff0c\u6709\u5174\u8da3\u53ef\u4ee5\u67e5\u770b \u8fd0\u884c\u65f6\u68c0\u67e5 \u7b2c17\u884c\uff0c\u5b9a\u4e49 hello \u51fd\u6570\uff0c \u5e76\u4e14\u6709\u4e00\u4e2a QString name \u53c2\u6570\u3002\u5173\u4e8e\u51fd\u6570\u53c2\u6570\u7684\u8bbe\u5b9a,\u8bf7\u67e5\u770b controller\u51fd\u6570\u53c2\u6570 \u7b2c16\u884c\uff0c\u5b9a\u4e49\u4e2a GET \u8bf7\u6c42\uff0c\u5c06 /<name> url \u6620\u5c04\u5230 hello \u51fd\u6570\u3002 \u5173\u4e8e /<name> \u8bf7\u67e5\u770b url \u6620\u5c04\u89c4\u5219 \u6e90\u6587\u4ef6\u5982\u4e0b: 1 2 3 4 5 6 7 8 9 10 11 #include \"MyController.h\" QString MyController::index () { return \"hello world\" ; } QString MyController::hello ( QString name ) { return \"hello \" + name ; } \u4f9d\u7136\u662f\u4e00\u4e2a\u5f88\u666e\u901a\u7684\u51fd\u6570\u3002 \u63a5\u4e0b\u6765\u6211\u4eec\u6253\u5f00\u6d4f\u89c8\u5668\u8f93\u5165 http://127.0.0.1/yuekeyuan, \u6d4f\u89c8\u5668\u8f93\u51fa\u4ee5\u4e0b\u5185\u5bb9\uff1a \u53ef\u4ee5\u770b\u89c1\u6d4f\u89c8\u5668\u8fd4\u56de\u7684\u6b63\u662f\u6211\u4eec\u60f3\u8981\u7684\u5185\u5bb9. \u57fa\u672c\u7684\u4ecb\u7ecd\u5c31\u5230\u8fd9\u91cc\uff0c\u63a5\u4e0b\u6765\u53ef\u4ee5\u5b66\u4e60\uff1a assertion configuration controller and mapping database, table, view, and model.","title":"\u518d\u5199\u4e00\u4e2a\u8bf7\u6c42"},{"location":"guide/using_orm/","text":"\u4f7f\u7528 orm \u00b6 orm \u5305\u62ec\u4e86 bean table, view, model \u548c\u6570\u636e\u5e93\u7b49\u4e00\u7cfb\u5217\u7684\u5185\u5bb9\uff0c\u76ee\u7684\u662f\u4f7f\u5f00\u53d1\u8005\u65b9\u4fbf\u7684\u5bf9\u6570\u636e\u8fdb\u884c\u64cd\u4f5c\uff0c\u4ee5\u53ca\u4f7f\u7528\u6570\u636e\u5e93\u8fdb\u884c\u589e\u5220\u6539\u67e5 \u4e0b\u9762\u6211\u4eec\u5f00\u59cb\u4e00\u4e2a\u4f8b\u5b50 \u9996\u5148\u6211\u4eec\u521b\u5efa\u4e00\u4e2a IWebCore \u5e94\u7528\u3002\u5173\u4e8e\u5982\u4f55\u521b\u5efaIWebCore\u5e94\u7528\uff0c\u53c2\u8003 IWebCore\u4f7f\u7528\u65b9\u5f0f Bean \u7684\u521b\u5efa \u00b6 \u5728\u9879\u76ee\u5f53\u4e2d\uff0c\u6211\u4eec\u521b\u5efa\u4e00\u4e2aUserBean, \u5934\u6587\u4ef6\u5982\u4e0b: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 // UserBean.h #pragma once #include <IWebCore> class UserBean : public IBeanInterface < UserBean > { Q_GADGET $AsBean ( UserBean ) public : UserBean (); $BeanField ( int , age ); $BeanFieldDeclare ( QString , name ) QString name ; $BeanFieldDeclare ( QString , country ) QString country = \"CHINA\" ; }; bean \u7684\u5b9a\u4e49\u9700\u8981\uff1a \u4ee5 public \u65b9\u5f0f\u7ee7\u627f IBeanInterface \u4f7f\u7528 Q_GADGET \u548c $AsBean(klassName) \u4e24\u4e2a\u5b8f \u5b57\u6bb5\u7684\u5b9a\u4e49\u4e5f\u6709\u4e24\u79cd\u65b9\u5f0f\uff1a \u4f7f\u7528 $BeanField(type, name) \u6765\u5b9a\u4e49\u4e00\u4e2a\u5b57\u6bb5,\u5982\u4e0a\u9762\u7b2c13 \u884c \u4f7f\u7528 $BeanFieldDeclare(type, name) \u6765\u58f0\u660e\u4e00\u4e2a\u5b57\u6bb5\uff0c \u4e4b\u540e\u518d\u5199\u4e0a type name; \u5b9a\u4e49\u5b57\u6bb5\uff0c\u598215-16\u884c \u548c 18-19 \u884c\u6240\u793a\u3002 \u6e90\u6587\u4ef6\u5982\u4e0b\uff1a 1 2 3 4 5 6 // UserBean.cpp #include \"UserBean.h\" UserBean :: UserBean () { } \u6211\u4eec\u91cd\u65b0\u5199 main.cpp\uff0c\u7528\u4e8e\u8f93\u51faUserBean, \u4ee3\u7801\u5982\u4e0b\uff0c \u8f93\u51fa\u4e5f\u4e00\u8d77\u5199\u5230\u4ee3\u7801\u91cc\u9762\uff0c\u4f9b\u53c2\u8003 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 // main.cpp #include <IWebCore> #include \"UserBean.h\" int main ( int argc , char * argv []) { Q_UNUSED ( argc ) Q_UNUSED ( argv ) UserBean bean ; qDebug (). noquote () << bean ; // {\"age\":0,\"country\":\"CHINA\",\"name\":\"\"} qDebug (). noquote () << static_cast < QString > ( bean ); // {\"age\":0,\"country\":\"CHINA\",\"name\":\"\"} qDebug (). noquote () << bean . toString (); // {\"age\":0,\"country\":\"CHINA\",\"name\":\"\"} qDebug (). noquote () << bean . toJson (); // QJsonObject({\"age\":0,\"country\":\"CHINA\",\"name\":\"\"}) qDebug (). noquote () << bean . toVariantMap (); // QMap((age, QVariant(int, 0))(country, QVariant(QString, CHINA))(name, QVariant(QString, ))) bean . age = 27 ; bean . name = \"yuekeyuan\" ; QJsonObject json = bean . toJson (); qDebug (). noquote () << json ; // QJsonObject({\"age\":27,\"country\":\"CHINA\",\"name\":\"yuekeyuan\"}) auto bean1 = UserBean :: fromJson ( json ); qDebug (). noquote () << ( bean == bean1 ) << bean1 ; // true {\"age\":27,\"country\":\"CHINA\",\"name\":\"yuekeyuan\"} bool convertOk ; auto bean2 = IConvertUtil :: toBean < UserBean > ( json , & convertOk ); qDebug (). noquote () << convertOk << ( bean == bean2 ) << bean2 ; // true true {\"age\":27,\"country\":\"CHINA\",\"name\":\"yuekeyuan\"} } \u4e0a\u9762\u662f\u4e00\u4e2a bean \u7684\u4e00\u4e9b\u652f\u6301\u65b9\u6cd5\u5c55\u793a\u3002bean \u5185\u7f6e\u65b9\u6cd5\u5f88\u591a\uff0c \u60f3\u5177\u4f53\u4e86\u89e3\u53ef\u4ee5\u53c2\u8003 Bean \u3002 Table \u7684\u521b\u5efa \u00b6 Table \u662f\u7ee7\u627f\u4e8e Bean \u5e76\u6dfb\u52a0\u4e00\u4e9b\u6570\u636e\u5e93\u8868\u76f8\u5173\u7684\u5185\u5bb9 \u4e0b\u9762\u6211\u4eec\u540c\u6837\u521b\u5efa\u4e00\u4e2a UserTable \u6765\u5c55\u793a \u4ee3\u7801 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 // UserTable.h #pragma once #include <IWebCore> class UserTable : public IOrmTableInterface < UserTable > { Q_GADGET $AsTable ( UserTable ) public : UserTable (); $AutoGenerate ( id ) $PrimaryKey ( id ) $Column ( int64_t , id ); $Column ( QString , name ); $ColumnDeclare ( QString , country ); QString country { \"CHINA\" }; }; 1 2 3 4 5 6 // UserTable.cpp #include \"UserTable.h\" UserTable :: UserTable () { } Table \u7684\u5b9a\u4e49\u548c Bean \u7684\u5b9a\u4e49\u5f88\u76f8\u4f3c Table \u4ee5 public \u65b9\u5f0f \u7ee7\u627f IOrmTableInterface. \u4f7f\u7528 Q_GADGET \u548c $AsTable(klassName) \u6807\u6ce8\u7c7b \u6709\u4e24\u79cd \u65b9\u5f0f\u5b9a\u4e49\u4e00\u4e2a\u5b57\u6bb5\uff1a \u4ee5 $Column(type, name) \u5b9a\u4e49\u4e00\u4e2a\u5b57\u6bb5\uff0c \u5982 \u7b2c15\u884c \u4ee5 $ColumnDeclare(type, name) \u58f0\u660e\u4e00\u4e2a\u5b57\u6bb5\uff0c \u5e76 \u4ee5 type name; \u7684\u65b9\u5f0f\u5b9a\u4e49\u5b57\u6bb5\u3002\u5982 19-20 \u884c\u3002 \u540c\u6837\u6211\u4eec\u770b\u5230 13\u884c\uff0c 14\u884c\uff0c\u8fd9\u662f\u5b9a\u4e49\u4e00\u4e2a \u4e3b\u952e\u7684\u6807\u914d\u3002 $PrimaryKey(name) \u5b9a\u4e49 name \u5b57\u6bb5\u662f\u4e00\u4e2a \u4e3b\u952e\u5b57\u6bb5\u3002 $AutoGenerate(name) \u5b9a\u4e49\u4e3b\u952ename \u7684\u4ea7\u751f\u65b9\u5f0f\u3002 \u5728\u8fd9\u4e9b\u5b8f\u4e4b\u5916\uff0c\u8fd8\u6709\u4e00\u4e9b\u5b8f $NotNull(name) $Unique(name) $SqlType(name, sqlType) DataBase \u7684\u521b\u5efa \u00b6 IWebOrm \u5305\u88c5\u4e86 Qt \u7684 \u5173\u7cfb\u578b\u6570\u636e\u5e93\uff0c\u5e76\u4f7f\u5b83\u66f4\u597d\u7528\u3002\u65b9\u4fbf\u8d77\u89c1\uff0c\u6211\u4eec\u521b\u5efa\u4e00\u4e2a Sqlite \u7684\u6570\u636e\u5e93\uff1a \u521b\u5efa SqliteDataBase \u5982\u4e0b\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 // SqliteDatabase.h #pragma once #include <IWebCore> class SqliteDatabase : public IOrmDatabaseInterface < SqliteDatabase > { $AsDatabase ( SqliteDatabase ) public : SqliteDatabase (); virtual IOrmDataSource configDataSource () final ; virtual void registerTables () final ; }; database \u7684\u521b\u5efa\u9700\u8981\u4ee5 public \u65b9\u5f0f\u7ee7\u627f IOrmDatabaseInterface \u4f7f\u7528 $AsDatabase(klassName) \u6765\u6807\u8bb0\u7c7b\u4e3a \u4e00\u4e2a Database\u7c7b \u91cd\u8f7d configDataSource \u548c registerTables \u4e24\u4e2a\u51fd\u6570\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 // SqliteDatabase.cpp #include \"SqliteDatabase.h\" #include \"UserTable.h\" SqliteDatabase :: SqliteDatabase () { } IOrmDataSource SqliteDatabase :: configDataSource () { IOrmDataSource source ; source . driverName = \"QSQLITE\" ; source . databaseName = \"SqliteDatabase.db\" ; return source ; } void SqliteDatabase :: registerTables () { registerTable < UserTable > (); } configDataSource \u8fd4\u56de\u4e00\u4e2a\u5c01\u88c5\u597d\u7684 dataSource \u7528\u4e8e\u521b\u5efa database registerTables \u6ce8\u518c UserBean\u3002 \u8fd9\u91cc\u7684\u6ce8\u518c\u4f1a\u68c0\u67e5\u6570\u636e\u5e93\u4e2d\u662f\u5426\u6709 UserTable, \u5982\u679c\u6ca1\u6709\u7684\u5316\uff0c\u6839\u636e\u4e8e table \u7684\u5b9a\u4e49\u751f\u6210\u521b\u5efa table \u7684sql\u3002\u5f53\u7136\uff0c\u5f00\u53d1\u8005\u4e5f\u53ef\u4ee5\u5728 registerTable \u51fd\u6570\u4e2d\u4f20\u5165 \u4e00\u4e2aQString \u7c7b\u578b\u7684sql \u7528\u4e8e\u521b\u5efa sql\u3002 \u73b0\u5728\u6211\u4eec\u4fee\u6539 main.cpp \u5230\u5982\u4e0b\u6a21\u578b\uff1a 1 2 3 4 5 6 7 8 9 10 11 // main.cpp #include <IWebCore> #include \"UserBean.h\" int main ( int argc , char * argv []) { IWebApplication app ( argc , argv ); return app . exec (); } \u8fd0\u884c\u4ee3\u7801\uff0c\u4f1a\u6709\u5982\u4e0b\u8f93\u51fa\uff1a _____ _ _ _ _____ |_ _|| | | | | | / __ \\ | | | | | | ___ | |__ | / \\/ ___ _ __ ___ | | | |/\\| | / _ \\| '_ \\ | | / _ \\ | '__|/ _ \\ _| |_ \\ /\\ /| __/| |_) || \\__/\\| (_) || | | __/ \\___/ \\/ \\/ \\___||_.__/ \\____/ \\___/ |_| \\___| Load SystemEnvironment [\u221a] Auto Load Resource Task Finish [\u221a] Database At Class: webCore::IOrmDataSource, At Connection: default, At Db: SqliteDatabase.db, Opened \u770b\u89c1\u5728\u7b2c10\u884c\uff0c Database \u5df2\u7ecf\u521b\u5efa\u3002 \u6211\u4eec\u6253\u5f00 SqliteDatabase.db \u67e5\u770b\u6570\u636e\u5e93\u5982\u4e0b\uff1a \u770b\u89c1 \u6570\u636e\u8868 UserTable \u5df2\u7ecf\u81ea\u52a8\u521b\u5efa\u3002 Orm Model \u7684\u521b\u5efa \u00b6 \u73b0\u5728\u5df2\u7ecf\u521b\u5efa\u6570\u636e\u8868\u548c\u6570\u636e\u5e93\uff0c\u6211\u4eec\u5728\u521b\u5efa model \u7528\u4e8e\u64cd\u7eb5\u6570\u636e\u8868\u548c\u6570\u636e\u5e93 \u521b\u5efa UserModel \u5982\u4e0b\uff1a 1 2 3 4 5 6 7 8 9 10 11 // UserModel.h #pragma once #include <IWebCore> #include \"UserTable.h\" class UserModel : public IOrmTableModelInterface < UserTable > { public : UserModel (); }; 1 2 3 4 5 6 // UserModel.cpp #include \"UserModel.h\" UserModel :: UserModel () { } \u55ef\uff0c\u521b\u5efa\u4e00\u4e2amodel \u5c31\u662f\u5982\u6b64\u7b80\u5355\uff0c\u4ee5 public \u7684\u65b9\u5f0f\u7ee7\u627f IOrmTableModelInterface \u5e76\u4e14\u4f20\u5165\u8981\u64cd\u4f5c\u7684Table \u7c7b\u578b\uff0c \u5982\u7b2c7\u884c\u6240\u793a\uff0c\u4e00\u4e2a model \u5c31\u521b\u5efa\u53f7\u4e86\u3002 model \u63d0\u4f9b\u65b9\u4fbf\u7684\u5185\u7f6e\u51fd\u6570\u7528\u4e8e\u589e\u5220\u6539\u67e5\u7b49\u64cd\u4f5c\u6570\u636e\u5e93\u3002\u8be6\u60c5\u8bf7\u53c2\u8003 Model \u7684\u4f7f\u7528 \u6211\u4eec\u4e3e\u51e0\u4e2a\u4f8b\u5b50\uff0c\u6539\u5199 main.cpp \u5982\u4e0b: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 // main.cpp #include <IWebCore> #include \"UserTable.h\" #include \"UserModel.h\" int main ( int argc , char * argv []) { IWebApplication app ( argc , argv ); UserModel model ; UserTable table1 ; table1 . name = \"yuekeyuan\" ; model . insert ( table1 ); qDebug () << table1 ; UserTable table2 ; table2 . name = \"zhiyongfei\" ; model . insert ( table2 ); qDebug () << model . count (); qDebug () << model . findAll (); model . deleted ( table1 ); qDebug () << model . count (); qDebug () << model . findAll (); return app . exec (); } \u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\uff0c\u63d2\u5165\u4e24\u6761\u6570\u636e\uff0c \u5e76\u4e14\u5220\u9664\u5176\u4e2d\u7684\u4e00\u6761\uff0c\u76f8\u5173\u7684\u8f93\u51fa\u5982\u4e0b\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 00 : 35 : 57 : Starting E : \\ project \\ cpp \\ IWeb \\ build - IWeb - Desktop_Qt_5_14_2_MSVC2017_32bit - Debug \\ demo \\ OrmDemo \\ debug \\ OrmDemo . exe ... _____ _ _ _ _____ | _ _ || | | | | | / __ \\ | | | | | | ___ | | __ | / \\ / ___ _ __ ___ | | | |/ \\ | | / _ \\ | ' _ \\ | | / _ \\ | ' __ |/ _ \\ _ | | _ \\ / \\ /| __ /| | _ ) || \\ __ / \\ | ( _ ) || | | __ / \\ ___ / \\ / \\ / \\ ___ || _ . __ / \\ ____ / \\ ___ / | _ | \\ ___ | Load SystemEnvironment [ \u221a ] Auto Load Resource Task Finish [ \u221a ] Database At Class : webCore :: IOrmDataSource , At Connection : default , At Db : SqliteDatabase . db , Opened \"select id from UserTable where rowid = :rowid\" { \":rowid\" : 1 } \"insert into UserTable ( id, name, country ) values ( :id, :name, :country ) \" { \":country\" : \"CHINA\" , \":id\" : null , \":name\" : \"yuekeyuan\" } { \"country\" : \"CHINA\" , \"id\" : 1 , \"name\" : \"yuekeyuan\" } \"select id from UserTable where rowid = :rowid\" { \":rowid\" : 2 } \"insert into UserTable ( id, name, country ) values ( :id, :name, :country ) \" { \":country\" : \"CHINA\" , \":id\" : null , \":name\" : \"zhiyongfei\" } { \"country\" : \"CHINA\" , \"id\" : 2 , \"name\" : \"zhiyongfei\" } \"SELECT COUNT(1) FROM UserTable\" 2 \"SELECT * FROM UserTable\" [{ \"country\" : \"CHINA\" , \"id\" : 1 , \"name\" : \"yuekeyuan\" },{ \"country\" : \"CHINA\" , \"id\" : 2 , \"name\" : \"zhiyongfei\" }] \"DELETE FROM UserTable WHERE id = :id\" { \":id\" : 1 } \"SELECT COUNT(1) FROM UserTable\" 1 \"SELECT * FROM UserTable\" [{ \"country\" : \"CHINA\" , \"id\" : 2 , \"name\" : \"zhiyongfei\" }] \u55ef\uff0c\u5f88\u5927\u7684\u4e00\u7fa4\u4e1c\u897f\uff0c\u4e0d\u8fc7\u8f93\u51fa\u662f\u6b63\u786e\u7684\u3002\u4e3a\u4e86\u7b80\u5316\u8f93\u51fa\uff0c\u6211\u4eec\u5148\u5c4f\u853d\u6389 sql \u4fe1\u606f\uff0c\u518d\u67e5\u770b\u4e00\u904d \u5728 main \u51fd\u6570\u524d\u9762\u5199\u4e0a: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 // main.cpp #include <IWebCore> #include \"UserTable.h\" #include \"UserModel.h\" $EnableSqlInfoPrint ( false ) int main ( int argc , char * argv []) { IWebApplication app ( argc , argv ); UserModel model ; ..... } \u6ce8\u610f\u7b2c7 \u884c\uff0c\u6211\u4eec\u5df2\u7ecf\u7981\u6389 sql info\u4e86\uff0c\u5f53\u6211\u4eec\u518d\u6b21\u8fd0\u884c\u4ee3\u7801\u65f6\uff0c\u8f93\u51fa\u5982\u4e0b: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 _____ _ _ _ _____ |_ _|| | | | | | / __ \\ | | | | | | ___ | |__ | / \\/ ___ _ __ ___ | | | |/\\| | / _ \\| '_ \\ | | / _ \\ | '__|/ _ \\ _| |_ \\ /\\ /| __/| |_) || \\__/\\| (_) || | | __/ \\___/ \\/ \\/ \\___||_.__/ \\____/ \\___/ |_| \\___| Load SystemEnvironment [\u221a] Auto Load Resource Task Finish [\u221a] Database At Class: webCore::IOrmDataSource, At Connection: default, At Db: SqliteDatabase.db, Opened {\"country\":\"CHINA\",\"id\":3,\"name\":\"yuekeyuan\"} {\"country\":\"CHINA\",\"id\":4,\"name\":\"zhiyongfei\"} 3 [{\"country\":\"CHINA\",\"id\":2,\"name\":\"zhiyongfei\"},{\"country\":\"CHINA\",\"id\":3,\"name\":\"yuekeyuan\"},{\"country\":\"CHINA\",\"id\":4,\"name\":\"zhiyongfei\"}] 2 [{\"country\":\"CHINA\",\"id\":2,\"name\":\"zhiyongfei\"},{\"country\":\"CHINA\",\"id\":4,\"name\":\"zhiyongfei\"}] \u6570\u636e\u5e93\u91cc\u7684\u7ed3\u679c\u5982\u4e0b: \u55ef\uff0c\u4e00\u5207\u90fd\u662f\u5bf9\u7684,\u521a\u521a\u597d\u3002\uff08\u4e0a\u9762\u6700\u7ec8\u8f93\u51fa\u4e24\u6761\u6570\u636e\uff0c\u662f\u56e0\u4e3a \u4ee3\u7801\u6267\u884c\u4e86\u4e24\u6b21\uff09 \u73b0\u5728 orm \u7684\u9e1f\u77b0\u5df2\u7ecf\u5b8c\u6210\u3002\u63a5\u4e0b\u6765\u4f60\u53ef\u4ee5\u6df1\u5165\u4e86\u89e3: bean table database orm","title":"\u4f7f\u7528 orm"},{"location":"guide/using_orm/#orm","text":"orm \u5305\u62ec\u4e86 bean table, view, model \u548c\u6570\u636e\u5e93\u7b49\u4e00\u7cfb\u5217\u7684\u5185\u5bb9\uff0c\u76ee\u7684\u662f\u4f7f\u5f00\u53d1\u8005\u65b9\u4fbf\u7684\u5bf9\u6570\u636e\u8fdb\u884c\u64cd\u4f5c\uff0c\u4ee5\u53ca\u4f7f\u7528\u6570\u636e\u5e93\u8fdb\u884c\u589e\u5220\u6539\u67e5 \u4e0b\u9762\u6211\u4eec\u5f00\u59cb\u4e00\u4e2a\u4f8b\u5b50 \u9996\u5148\u6211\u4eec\u521b\u5efa\u4e00\u4e2a IWebCore \u5e94\u7528\u3002\u5173\u4e8e\u5982\u4f55\u521b\u5efaIWebCore\u5e94\u7528\uff0c\u53c2\u8003 IWebCore\u4f7f\u7528\u65b9\u5f0f","title":"\u4f7f\u7528 orm"},{"location":"guide/using_orm/#bean","text":"\u5728\u9879\u76ee\u5f53\u4e2d\uff0c\u6211\u4eec\u521b\u5efa\u4e00\u4e2aUserBean, \u5934\u6587\u4ef6\u5982\u4e0b: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 // UserBean.h #pragma once #include <IWebCore> class UserBean : public IBeanInterface < UserBean > { Q_GADGET $AsBean ( UserBean ) public : UserBean (); $BeanField ( int , age ); $BeanFieldDeclare ( QString , name ) QString name ; $BeanFieldDeclare ( QString , country ) QString country = \"CHINA\" ; }; bean \u7684\u5b9a\u4e49\u9700\u8981\uff1a \u4ee5 public \u65b9\u5f0f\u7ee7\u627f IBeanInterface \u4f7f\u7528 Q_GADGET \u548c $AsBean(klassName) \u4e24\u4e2a\u5b8f \u5b57\u6bb5\u7684\u5b9a\u4e49\u4e5f\u6709\u4e24\u79cd\u65b9\u5f0f\uff1a \u4f7f\u7528 $BeanField(type, name) \u6765\u5b9a\u4e49\u4e00\u4e2a\u5b57\u6bb5,\u5982\u4e0a\u9762\u7b2c13 \u884c \u4f7f\u7528 $BeanFieldDeclare(type, name) \u6765\u58f0\u660e\u4e00\u4e2a\u5b57\u6bb5\uff0c \u4e4b\u540e\u518d\u5199\u4e0a type name; \u5b9a\u4e49\u5b57\u6bb5\uff0c\u598215-16\u884c \u548c 18-19 \u884c\u6240\u793a\u3002 \u6e90\u6587\u4ef6\u5982\u4e0b\uff1a 1 2 3 4 5 6 // UserBean.cpp #include \"UserBean.h\" UserBean :: UserBean () { } \u6211\u4eec\u91cd\u65b0\u5199 main.cpp\uff0c\u7528\u4e8e\u8f93\u51faUserBean, \u4ee3\u7801\u5982\u4e0b\uff0c \u8f93\u51fa\u4e5f\u4e00\u8d77\u5199\u5230\u4ee3\u7801\u91cc\u9762\uff0c\u4f9b\u53c2\u8003 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 // main.cpp #include <IWebCore> #include \"UserBean.h\" int main ( int argc , char * argv []) { Q_UNUSED ( argc ) Q_UNUSED ( argv ) UserBean bean ; qDebug (). noquote () << bean ; // {\"age\":0,\"country\":\"CHINA\",\"name\":\"\"} qDebug (). noquote () << static_cast < QString > ( bean ); // {\"age\":0,\"country\":\"CHINA\",\"name\":\"\"} qDebug (). noquote () << bean . toString (); // {\"age\":0,\"country\":\"CHINA\",\"name\":\"\"} qDebug (). noquote () << bean . toJson (); // QJsonObject({\"age\":0,\"country\":\"CHINA\",\"name\":\"\"}) qDebug (). noquote () << bean . toVariantMap (); // QMap((age, QVariant(int, 0))(country, QVariant(QString, CHINA))(name, QVariant(QString, ))) bean . age = 27 ; bean . name = \"yuekeyuan\" ; QJsonObject json = bean . toJson (); qDebug (). noquote () << json ; // QJsonObject({\"age\":27,\"country\":\"CHINA\",\"name\":\"yuekeyuan\"}) auto bean1 = UserBean :: fromJson ( json ); qDebug (). noquote () << ( bean == bean1 ) << bean1 ; // true {\"age\":27,\"country\":\"CHINA\",\"name\":\"yuekeyuan\"} bool convertOk ; auto bean2 = IConvertUtil :: toBean < UserBean > ( json , & convertOk ); qDebug (). noquote () << convertOk << ( bean == bean2 ) << bean2 ; // true true {\"age\":27,\"country\":\"CHINA\",\"name\":\"yuekeyuan\"} } \u4e0a\u9762\u662f\u4e00\u4e2a bean \u7684\u4e00\u4e9b\u652f\u6301\u65b9\u6cd5\u5c55\u793a\u3002bean \u5185\u7f6e\u65b9\u6cd5\u5f88\u591a\uff0c \u60f3\u5177\u4f53\u4e86\u89e3\u53ef\u4ee5\u53c2\u8003 Bean \u3002","title":"Bean \u7684\u521b\u5efa"},{"location":"guide/using_orm/#table","text":"Table \u662f\u7ee7\u627f\u4e8e Bean \u5e76\u6dfb\u52a0\u4e00\u4e9b\u6570\u636e\u5e93\u8868\u76f8\u5173\u7684\u5185\u5bb9 \u4e0b\u9762\u6211\u4eec\u540c\u6837\u521b\u5efa\u4e00\u4e2a UserTable \u6765\u5c55\u793a \u4ee3\u7801 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 // UserTable.h #pragma once #include <IWebCore> class UserTable : public IOrmTableInterface < UserTable > { Q_GADGET $AsTable ( UserTable ) public : UserTable (); $AutoGenerate ( id ) $PrimaryKey ( id ) $Column ( int64_t , id ); $Column ( QString , name ); $ColumnDeclare ( QString , country ); QString country { \"CHINA\" }; }; 1 2 3 4 5 6 // UserTable.cpp #include \"UserTable.h\" UserTable :: UserTable () { } Table \u7684\u5b9a\u4e49\u548c Bean \u7684\u5b9a\u4e49\u5f88\u76f8\u4f3c Table \u4ee5 public \u65b9\u5f0f \u7ee7\u627f IOrmTableInterface. \u4f7f\u7528 Q_GADGET \u548c $AsTable(klassName) \u6807\u6ce8\u7c7b \u6709\u4e24\u79cd \u65b9\u5f0f\u5b9a\u4e49\u4e00\u4e2a\u5b57\u6bb5\uff1a \u4ee5 $Column(type, name) \u5b9a\u4e49\u4e00\u4e2a\u5b57\u6bb5\uff0c \u5982 \u7b2c15\u884c \u4ee5 $ColumnDeclare(type, name) \u58f0\u660e\u4e00\u4e2a\u5b57\u6bb5\uff0c \u5e76 \u4ee5 type name; \u7684\u65b9\u5f0f\u5b9a\u4e49\u5b57\u6bb5\u3002\u5982 19-20 \u884c\u3002 \u540c\u6837\u6211\u4eec\u770b\u5230 13\u884c\uff0c 14\u884c\uff0c\u8fd9\u662f\u5b9a\u4e49\u4e00\u4e2a \u4e3b\u952e\u7684\u6807\u914d\u3002 $PrimaryKey(name) \u5b9a\u4e49 name \u5b57\u6bb5\u662f\u4e00\u4e2a \u4e3b\u952e\u5b57\u6bb5\u3002 $AutoGenerate(name) \u5b9a\u4e49\u4e3b\u952ename \u7684\u4ea7\u751f\u65b9\u5f0f\u3002 \u5728\u8fd9\u4e9b\u5b8f\u4e4b\u5916\uff0c\u8fd8\u6709\u4e00\u4e9b\u5b8f $NotNull(name) $Unique(name) $SqlType(name, sqlType)","title":"Table \u7684\u521b\u5efa"},{"location":"guide/using_orm/#database","text":"IWebOrm \u5305\u88c5\u4e86 Qt \u7684 \u5173\u7cfb\u578b\u6570\u636e\u5e93\uff0c\u5e76\u4f7f\u5b83\u66f4\u597d\u7528\u3002\u65b9\u4fbf\u8d77\u89c1\uff0c\u6211\u4eec\u521b\u5efa\u4e00\u4e2a Sqlite \u7684\u6570\u636e\u5e93\uff1a \u521b\u5efa SqliteDataBase \u5982\u4e0b\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 // SqliteDatabase.h #pragma once #include <IWebCore> class SqliteDatabase : public IOrmDatabaseInterface < SqliteDatabase > { $AsDatabase ( SqliteDatabase ) public : SqliteDatabase (); virtual IOrmDataSource configDataSource () final ; virtual void registerTables () final ; }; database \u7684\u521b\u5efa\u9700\u8981\u4ee5 public \u65b9\u5f0f\u7ee7\u627f IOrmDatabaseInterface \u4f7f\u7528 $AsDatabase(klassName) \u6765\u6807\u8bb0\u7c7b\u4e3a \u4e00\u4e2a Database\u7c7b \u91cd\u8f7d configDataSource \u548c registerTables \u4e24\u4e2a\u51fd\u6570\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 // SqliteDatabase.cpp #include \"SqliteDatabase.h\" #include \"UserTable.h\" SqliteDatabase :: SqliteDatabase () { } IOrmDataSource SqliteDatabase :: configDataSource () { IOrmDataSource source ; source . driverName = \"QSQLITE\" ; source . databaseName = \"SqliteDatabase.db\" ; return source ; } void SqliteDatabase :: registerTables () { registerTable < UserTable > (); } configDataSource \u8fd4\u56de\u4e00\u4e2a\u5c01\u88c5\u597d\u7684 dataSource \u7528\u4e8e\u521b\u5efa database registerTables \u6ce8\u518c UserBean\u3002 \u8fd9\u91cc\u7684\u6ce8\u518c\u4f1a\u68c0\u67e5\u6570\u636e\u5e93\u4e2d\u662f\u5426\u6709 UserTable, \u5982\u679c\u6ca1\u6709\u7684\u5316\uff0c\u6839\u636e\u4e8e table \u7684\u5b9a\u4e49\u751f\u6210\u521b\u5efa table \u7684sql\u3002\u5f53\u7136\uff0c\u5f00\u53d1\u8005\u4e5f\u53ef\u4ee5\u5728 registerTable \u51fd\u6570\u4e2d\u4f20\u5165 \u4e00\u4e2aQString \u7c7b\u578b\u7684sql \u7528\u4e8e\u521b\u5efa sql\u3002 \u73b0\u5728\u6211\u4eec\u4fee\u6539 main.cpp \u5230\u5982\u4e0b\u6a21\u578b\uff1a 1 2 3 4 5 6 7 8 9 10 11 // main.cpp #include <IWebCore> #include \"UserBean.h\" int main ( int argc , char * argv []) { IWebApplication app ( argc , argv ); return app . exec (); } \u8fd0\u884c\u4ee3\u7801\uff0c\u4f1a\u6709\u5982\u4e0b\u8f93\u51fa\uff1a _____ _ _ _ _____ |_ _|| | | | | | / __ \\ | | | | | | ___ | |__ | / \\/ ___ _ __ ___ | | | |/\\| | / _ \\| '_ \\ | | / _ \\ | '__|/ _ \\ _| |_ \\ /\\ /| __/| |_) || \\__/\\| (_) || | | __/ \\___/ \\/ \\/ \\___||_.__/ \\____/ \\___/ |_| \\___| Load SystemEnvironment [\u221a] Auto Load Resource Task Finish [\u221a] Database At Class: webCore::IOrmDataSource, At Connection: default, At Db: SqliteDatabase.db, Opened \u770b\u89c1\u5728\u7b2c10\u884c\uff0c Database \u5df2\u7ecf\u521b\u5efa\u3002 \u6211\u4eec\u6253\u5f00 SqliteDatabase.db \u67e5\u770b\u6570\u636e\u5e93\u5982\u4e0b\uff1a \u770b\u89c1 \u6570\u636e\u8868 UserTable \u5df2\u7ecf\u81ea\u52a8\u521b\u5efa\u3002","title":"DataBase \u7684\u521b\u5efa"},{"location":"guide/using_orm/#orm-model","text":"\u73b0\u5728\u5df2\u7ecf\u521b\u5efa\u6570\u636e\u8868\u548c\u6570\u636e\u5e93\uff0c\u6211\u4eec\u5728\u521b\u5efa model \u7528\u4e8e\u64cd\u7eb5\u6570\u636e\u8868\u548c\u6570\u636e\u5e93 \u521b\u5efa UserModel \u5982\u4e0b\uff1a 1 2 3 4 5 6 7 8 9 10 11 // UserModel.h #pragma once #include <IWebCore> #include \"UserTable.h\" class UserModel : public IOrmTableModelInterface < UserTable > { public : UserModel (); }; 1 2 3 4 5 6 // UserModel.cpp #include \"UserModel.h\" UserModel :: UserModel () { } \u55ef\uff0c\u521b\u5efa\u4e00\u4e2amodel \u5c31\u662f\u5982\u6b64\u7b80\u5355\uff0c\u4ee5 public \u7684\u65b9\u5f0f\u7ee7\u627f IOrmTableModelInterface \u5e76\u4e14\u4f20\u5165\u8981\u64cd\u4f5c\u7684Table \u7c7b\u578b\uff0c \u5982\u7b2c7\u884c\u6240\u793a\uff0c\u4e00\u4e2a model \u5c31\u521b\u5efa\u53f7\u4e86\u3002 model \u63d0\u4f9b\u65b9\u4fbf\u7684\u5185\u7f6e\u51fd\u6570\u7528\u4e8e\u589e\u5220\u6539\u67e5\u7b49\u64cd\u4f5c\u6570\u636e\u5e93\u3002\u8be6\u60c5\u8bf7\u53c2\u8003 Model \u7684\u4f7f\u7528 \u6211\u4eec\u4e3e\u51e0\u4e2a\u4f8b\u5b50\uff0c\u6539\u5199 main.cpp \u5982\u4e0b: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 // main.cpp #include <IWebCore> #include \"UserTable.h\" #include \"UserModel.h\" int main ( int argc , char * argv []) { IWebApplication app ( argc , argv ); UserModel model ; UserTable table1 ; table1 . name = \"yuekeyuan\" ; model . insert ( table1 ); qDebug () << table1 ; UserTable table2 ; table2 . name = \"zhiyongfei\" ; model . insert ( table2 ); qDebug () << model . count (); qDebug () << model . findAll (); model . deleted ( table1 ); qDebug () << model . count (); qDebug () << model . findAll (); return app . exec (); } \u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\uff0c\u63d2\u5165\u4e24\u6761\u6570\u636e\uff0c \u5e76\u4e14\u5220\u9664\u5176\u4e2d\u7684\u4e00\u6761\uff0c\u76f8\u5173\u7684\u8f93\u51fa\u5982\u4e0b\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 00 : 35 : 57 : Starting E : \\ project \\ cpp \\ IWeb \\ build - IWeb - Desktop_Qt_5_14_2_MSVC2017_32bit - Debug \\ demo \\ OrmDemo \\ debug \\ OrmDemo . exe ... _____ _ _ _ _____ | _ _ || | | | | | / __ \\ | | | | | | ___ | | __ | / \\ / ___ _ __ ___ | | | |/ \\ | | / _ \\ | ' _ \\ | | / _ \\ | ' __ |/ _ \\ _ | | _ \\ / \\ /| __ /| | _ ) || \\ __ / \\ | ( _ ) || | | __ / \\ ___ / \\ / \\ / \\ ___ || _ . __ / \\ ____ / \\ ___ / | _ | \\ ___ | Load SystemEnvironment [ \u221a ] Auto Load Resource Task Finish [ \u221a ] Database At Class : webCore :: IOrmDataSource , At Connection : default , At Db : SqliteDatabase . db , Opened \"select id from UserTable where rowid = :rowid\" { \":rowid\" : 1 } \"insert into UserTable ( id, name, country ) values ( :id, :name, :country ) \" { \":country\" : \"CHINA\" , \":id\" : null , \":name\" : \"yuekeyuan\" } { \"country\" : \"CHINA\" , \"id\" : 1 , \"name\" : \"yuekeyuan\" } \"select id from UserTable where rowid = :rowid\" { \":rowid\" : 2 } \"insert into UserTable ( id, name, country ) values ( :id, :name, :country ) \" { \":country\" : \"CHINA\" , \":id\" : null , \":name\" : \"zhiyongfei\" } { \"country\" : \"CHINA\" , \"id\" : 2 , \"name\" : \"zhiyongfei\" } \"SELECT COUNT(1) FROM UserTable\" 2 \"SELECT * FROM UserTable\" [{ \"country\" : \"CHINA\" , \"id\" : 1 , \"name\" : \"yuekeyuan\" },{ \"country\" : \"CHINA\" , \"id\" : 2 , \"name\" : \"zhiyongfei\" }] \"DELETE FROM UserTable WHERE id = :id\" { \":id\" : 1 } \"SELECT COUNT(1) FROM UserTable\" 1 \"SELECT * FROM UserTable\" [{ \"country\" : \"CHINA\" , \"id\" : 2 , \"name\" : \"zhiyongfei\" }] \u55ef\uff0c\u5f88\u5927\u7684\u4e00\u7fa4\u4e1c\u897f\uff0c\u4e0d\u8fc7\u8f93\u51fa\u662f\u6b63\u786e\u7684\u3002\u4e3a\u4e86\u7b80\u5316\u8f93\u51fa\uff0c\u6211\u4eec\u5148\u5c4f\u853d\u6389 sql \u4fe1\u606f\uff0c\u518d\u67e5\u770b\u4e00\u904d \u5728 main \u51fd\u6570\u524d\u9762\u5199\u4e0a: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 // main.cpp #include <IWebCore> #include \"UserTable.h\" #include \"UserModel.h\" $EnableSqlInfoPrint ( false ) int main ( int argc , char * argv []) { IWebApplication app ( argc , argv ); UserModel model ; ..... } \u6ce8\u610f\u7b2c7 \u884c\uff0c\u6211\u4eec\u5df2\u7ecf\u7981\u6389 sql info\u4e86\uff0c\u5f53\u6211\u4eec\u518d\u6b21\u8fd0\u884c\u4ee3\u7801\u65f6\uff0c\u8f93\u51fa\u5982\u4e0b: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 _____ _ _ _ _____ |_ _|| | | | | | / __ \\ | | | | | | ___ | |__ | / \\/ ___ _ __ ___ | | | |/\\| | / _ \\| '_ \\ | | / _ \\ | '__|/ _ \\ _| |_ \\ /\\ /| __/| |_) || \\__/\\| (_) || | | __/ \\___/ \\/ \\/ \\___||_.__/ \\____/ \\___/ |_| \\___| Load SystemEnvironment [\u221a] Auto Load Resource Task Finish [\u221a] Database At Class: webCore::IOrmDataSource, At Connection: default, At Db: SqliteDatabase.db, Opened {\"country\":\"CHINA\",\"id\":3,\"name\":\"yuekeyuan\"} {\"country\":\"CHINA\",\"id\":4,\"name\":\"zhiyongfei\"} 3 [{\"country\":\"CHINA\",\"id\":2,\"name\":\"zhiyongfei\"},{\"country\":\"CHINA\",\"id\":3,\"name\":\"yuekeyuan\"},{\"country\":\"CHINA\",\"id\":4,\"name\":\"zhiyongfei\"}] 2 [{\"country\":\"CHINA\",\"id\":2,\"name\":\"zhiyongfei\"},{\"country\":\"CHINA\",\"id\":4,\"name\":\"zhiyongfei\"}] \u6570\u636e\u5e93\u91cc\u7684\u7ed3\u679c\u5982\u4e0b: \u55ef\uff0c\u4e00\u5207\u90fd\u662f\u5bf9\u7684,\u521a\u521a\u597d\u3002\uff08\u4e0a\u9762\u6700\u7ec8\u8f93\u51fa\u4e24\u6761\u6570\u636e\uff0c\u662f\u56e0\u4e3a \u4ee3\u7801\u6267\u884c\u4e86\u4e24\u6b21\uff09 \u73b0\u5728 orm \u7684\u9e1f\u77b0\u5df2\u7ecf\u5b8c\u6210\u3002\u63a5\u4e0b\u6765\u4f60\u53ef\u4ee5\u6df1\u5165\u4e86\u89e3: bean table database orm","title":"Orm Model \u7684\u521b\u5efa"},{"location":"orm/bean_usage/","text":"","title":"Bean usage"},{"location":"orm/introduction/","text":"Orm \u7b80\u4ecb \u00b6 orm \u5305\u62ec\u4e86 bean table, view, model \u548c\u6570\u636e\u5e93\u7b49\u4e00\u7cfb\u5217\u7684\u5185\u5bb9\uff0c\u76ee\u7684\u662f\u4f7f\u5f00\u53d1\u8005\u65b9\u4fbf\u7684\u5bf9\u6570\u636e\u8fdb\u884c\u64cd\u4f5c\uff0c\u4ee5\u53ca\u4f7f\u7528\u6570\u636e\u5e93\u8fdb\u884c\u589e\u5220\u6539\u67e5 \u4e0b\u9762\u6211\u4eec\u5f00\u59cb\u4e00\u4e2a\u4f8b\u5b50 \u9996\u5148\u6211\u4eec\u521b\u5efa\u4e00\u4e2a IWebCore \u5e94\u7528\u3002\u5173\u4e8e\u5982\u4f55\u521b\u5efaIWebCore\u5e94\u7528\uff0c\u53c2\u8003 IWebCore\u4f7f\u7528\u65b9\u5f0f Bean \u7684\u521b\u5efa \u00b6 \u5728\u9879\u76ee\u5f53\u4e2d\uff0c\u6211\u4eec\u521b\u5efa\u4e00\u4e2aUserBean, \u5934\u6587\u4ef6\u5982\u4e0b: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 // UserBean.h #pragma once #include <IWebCore> class UserBean : public IBeanInterface < UserBean > { Q_GADGET $AsBean ( UserBean ) public : UserBean (); $BeanField ( int , age ); $BeanFieldDeclare ( QString , name ) QString name ; $BeanFieldDeclare ( QString , country ) QString country = \"CHINA\" ; }; bean \u7684\u5b9a\u4e49\u9700\u8981\uff1a \u4ee5 public \u65b9\u5f0f\u7ee7\u627f IBeanInterface \u4f7f\u7528 Q_GADGET \u548c $AsBean(klassName) \u4e24\u4e2a\u5b8f \u5b57\u6bb5\u7684\u5b9a\u4e49\u4e5f\u6709\u4e24\u79cd\u65b9\u5f0f\uff1a \u4f7f\u7528 $BeanField(type, name) \u6765\u5b9a\u4e49\u4e00\u4e2a\u5b57\u6bb5,\u5982\u4e0a\u9762\u7b2c13 \u884c \u4f7f\u7528 $BeanFieldDeclare(type, name) \u6765\u58f0\u660e\u4e00\u4e2a\u5b57\u6bb5\uff0c \u4e4b\u540e\u518d\u5199\u4e0a type name; \u5b9a\u4e49\u5b57\u6bb5\uff0c\u598215-16\u884c \u548c 18-19 \u884c\u6240\u793a\u3002 \u6e90\u6587\u4ef6\u5982\u4e0b\uff1a 1 2 3 4 5 6 // UserBean.cpp #include \"UserBean.h\" UserBean :: UserBean () { } \u6211\u4eec\u91cd\u65b0\u5199 main.cpp\uff0c\u7528\u4e8e\u8f93\u51faUserBean, \u4ee3\u7801\u5982\u4e0b\uff0c \u8f93\u51fa\u4e5f\u4e00\u8d77\u5199\u5230\u4ee3\u7801\u91cc\u9762\uff0c\u4f9b\u53c2\u8003 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 // main.cpp #include <IWebCore> #include \"UserBean.h\" int main ( int argc , char * argv []) { Q_UNUSED ( argc ) Q_UNUSED ( argv ) UserBean bean ; qDebug (). noquote () << bean ; // {\"age\":0,\"country\":\"CHINA\",\"name\":\"\"} qDebug (). noquote () << static_cast < QString > ( bean ); // {\"age\":0,\"country\":\"CHINA\",\"name\":\"\"} qDebug (). noquote () << bean . toString (); // {\"age\":0,\"country\":\"CHINA\",\"name\":\"\"} qDebug (). noquote () << bean . toJson (); // QJsonObject({\"age\":0,\"country\":\"CHINA\",\"name\":\"\"}) qDebug (). noquote () << bean . toVariantMap (); // QMap((age, QVariant(int, 0))(country, QVariant(QString, CHINA))(name, QVariant(QString, ))) bean . age = 27 ; bean . name = \"yuekeyuan\" ; QJsonObject json = bean . toJson (); qDebug (). noquote () << json ; // QJsonObject({\"age\":27,\"country\":\"CHINA\",\"name\":\"yuekeyuan\"}) auto bean1 = UserBean :: fromJson ( json ); qDebug (). noquote () << ( bean == bean1 ) << bean1 ; // true {\"age\":27,\"country\":\"CHINA\",\"name\":\"yuekeyuan\"} bool convertOk ; auto bean2 = IConvertUtil :: toBean < UserBean > ( json , & convertOk ); qDebug (). noquote () << convertOk << ( bean == bean2 ) << bean2 ; // true true {\"age\":27,\"country\":\"CHINA\",\"name\":\"yuekeyuan\"} } \u4e0a\u9762\u662f\u4e00\u4e2a bean \u7684\u4e00\u4e9b\u652f\u6301\u65b9\u6cd5\u5c55\u793a\u3002bean \u5185\u7f6e\u65b9\u6cd5\u5f88\u591a\uff0c \u60f3\u5177\u4f53\u4e86\u89e3\u53ef\u4ee5\u53c2\u8003 Bean \u3002 Table \u7684\u521b\u5efa \u00b6 Table \u662f\u7ee7\u627f\u4e8e Bean \u5e76\u6dfb\u52a0\u4e00\u4e9b\u6570\u636e\u5e93\u8868\u76f8\u5173\u7684\u5185\u5bb9 \u4e0b\u9762\u6211\u4eec\u540c\u6837\u521b\u5efa\u4e00\u4e2a UserTable \u6765\u5c55\u793a \u4ee3\u7801 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 // UserTable.h #pragma once #include <IWebCore> class UserTable : public IOrmTableInterface < UserTable > { Q_GADGET $AsTable ( UserTable ) public : UserTable (); $AutoGenerate ( id ) $PrimaryKey ( id ) $Column ( int64_t , id ); $Column ( QString , name ); $ColumnDeclare ( QString , country ); QString country { \"CHINA\" }; }; 1 2 3 4 5 6 // UserTable.cpp #include \"UserTable.h\" UserTable :: UserTable () { } Table \u7684\u5b9a\u4e49\u548c Bean \u7684\u5b9a\u4e49\u5f88\u76f8\u4f3c Table \u4ee5 public \u65b9\u5f0f \u7ee7\u627f IOrmTableInterface. \u4f7f\u7528 Q_GADGET \u548c $AsTable(klassName) \u6807\u6ce8\u7c7b \u6709\u4e24\u79cd \u65b9\u5f0f\u5b9a\u4e49\u4e00\u4e2a\u5b57\u6bb5\uff1a \u4ee5 $Column(type, name) \u5b9a\u4e49\u4e00\u4e2a\u5b57\u6bb5\uff0c \u5982 \u7b2c15\u884c \u4ee5 $ColumnDeclare(type, name) \u58f0\u660e\u4e00\u4e2a\u5b57\u6bb5\uff0c \u5e76 \u4ee5 type name; \u7684\u65b9\u5f0f\u5b9a\u4e49\u5b57\u6bb5\u3002\u5982 19-20 \u884c\u3002 \u540c\u6837\u6211\u4eec\u770b\u5230 13\u884c\uff0c 14\u884c\uff0c\u8fd9\u662f\u5b9a\u4e49\u4e00\u4e2a \u4e3b\u952e\u7684\u6807\u914d\u3002 $PrimaryKey(name) \u5b9a\u4e49 name \u5b57\u6bb5\u662f\u4e00\u4e2a \u4e3b\u952e\u5b57\u6bb5\u3002 $AutoGenerate(name) \u5b9a\u4e49\u4e3b\u952ename \u7684\u4ea7\u751f\u65b9\u5f0f\u3002 \u5728\u8fd9\u4e9b\u5b8f\u4e4b\u5916\uff0c\u8fd8\u6709\u4e00\u4e9b\u5b8f $NotNull(name) $Unique(name) $SqlType(name, sqlType) DataBase \u7684\u521b\u5efa \u00b6 IWebOrm \u5305\u88c5\u4e86 Qt \u7684 \u5173\u7cfb\u578b\u6570\u636e\u5e93\uff0c\u5e76\u4f7f\u5b83\u66f4\u597d\u7528\u3002\u65b9\u4fbf\u8d77\u89c1\uff0c\u6211\u4eec\u521b\u5efa\u4e00\u4e2a Sqlite \u7684\u6570\u636e\u5e93\uff1a \u521b\u5efa SqliteDataBase \u5982\u4e0b\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 // SqliteDatabase.h #pragma once #include <IWebCore> class SqliteDatabase : public IOrmDatabaseInterface < SqliteDatabase > { $AsDatabase ( SqliteDatabase ) public : SqliteDatabase (); virtual IOrmDataSource configDataSource () final ; virtual void registerTables () final ; }; database \u7684\u521b\u5efa\u9700\u8981\u4ee5 public \u65b9\u5f0f\u7ee7\u627f IOrmDatabaseInterface \u4f7f\u7528 $AsDatabase(klassName) \u6765\u6807\u8bb0\u7c7b\u4e3a \u4e00\u4e2a Database\u7c7b \u91cd\u8f7d configDataSource \u548c registerTables \u4e24\u4e2a\u51fd\u6570\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 // SqliteDatabase.cpp #include \"SqliteDatabase.h\" #include \"UserTable.h\" SqliteDatabase :: SqliteDatabase () { } IOrmDataSource SqliteDatabase :: configDataSource () { IOrmDataSource source ; source . driverName = \"QSQLITE\" ; source . databaseName = \"SqliteDatabase.db\" ; return source ; } void SqliteDatabase :: registerTables () { registerTable < UserTable > (); } configDataSource \u8fd4\u56de\u4e00\u4e2a\u5c01\u88c5\u597d\u7684 dataSource \u7528\u4e8e\u521b\u5efa database registerTables \u6ce8\u518c UserBean\u3002 \u8fd9\u91cc\u7684\u6ce8\u518c\u4f1a\u68c0\u67e5\u6570\u636e\u5e93\u4e2d\u662f\u5426\u6709 UserTable, \u5982\u679c\u6ca1\u6709\u7684\u5316\uff0c\u6839\u636e\u4e8e table \u7684\u5b9a\u4e49\u751f\u6210\u521b\u5efa table \u7684sql\u3002\u5f53\u7136\uff0c\u5f00\u53d1\u8005\u4e5f\u53ef\u4ee5\u5728 registerTable \u51fd\u6570\u4e2d\u4f20\u5165 \u4e00\u4e2aQString \u7c7b\u578b\u7684sql \u7528\u4e8e\u521b\u5efa sql\u3002 \u73b0\u5728\u6211\u4eec\u4fee\u6539 main.cpp \u5230\u5982\u4e0b\u6a21\u578b\uff1a 1 2 3 4 5 6 7 8 9 10 11 // main.cpp #include <IWebCore> #include \"UserBean.h\" int main ( int argc , char * argv []) { IWebApplication app ( argc , argv ); return app . exec (); } \u8fd0\u884c\u4ee3\u7801\uff0c\u4f1a\u6709\u5982\u4e0b\u8f93\u51fa\uff1a _____ _ _ _ _____ |_ _|| | | | | | / __ \\ | | | | | | ___ | |__ | / \\/ ___ _ __ ___ | | | |/\\| | / _ \\| '_ \\ | | / _ \\ | '__|/ _ \\ _| |_ \\ /\\ /| __/| |_) || \\__/\\| (_) || | | __/ \\___/ \\/ \\/ \\___||_.__/ \\____/ \\___/ |_| \\___| Load SystemEnvironment [\u221a] Auto Load Resource Task Finish [\u221a] Database At Class: webCore::IOrmDataSource, At Connection: default, At Db: SqliteDatabase.db, Opened \u770b\u89c1\u5728\u7b2c10\u884c\uff0c Database \u5df2\u7ecf\u521b\u5efa\u3002 \u6211\u4eec\u6253\u5f00 SqliteDatabase.db \u67e5\u770b\u6570\u636e\u5e93\u5982\u4e0b\uff1a \u770b\u89c1 \u6570\u636e\u8868 UserTable \u5df2\u7ecf\u81ea\u52a8\u521b\u5efa\u3002 Orm Model \u7684\u521b\u5efa \u00b6 \u73b0\u5728\u5df2\u7ecf\u521b\u5efa\u6570\u636e\u8868\u548c\u6570\u636e\u5e93\uff0c\u6211\u4eec\u5728\u521b\u5efa model \u7528\u4e8e\u64cd\u7eb5\u6570\u636e\u8868\u548c\u6570\u636e\u5e93 \u521b\u5efa UserModel \u5982\u4e0b\uff1a 1 2 3 4 5 6 7 8 9 10 11 // UserModel.h #pragma once #include <IWebCore> #include \"UserTable.h\" class UserModel : public IOrmTableModelInterface < UserTable > { public : UserModel (); }; 1 2 3 4 5 6 // UserModel.cpp #include \"UserModel.h\" UserModel :: UserModel () { } \u55ef\uff0c\u521b\u5efa\u4e00\u4e2amodel \u5c31\u662f\u5982\u6b64\u7b80\u5355\uff0c\u4ee5 public \u7684\u65b9\u5f0f\u7ee7\u627f IOrmTableModelInterface \u5e76\u4e14\u4f20\u5165\u8981\u64cd\u4f5c\u7684Table \u7c7b\u578b\uff0c \u5982\u7b2c7\u884c\u6240\u793a\uff0c\u4e00\u4e2a model \u5c31\u521b\u5efa\u53f7\u4e86\u3002 model \u63d0\u4f9b\u65b9\u4fbf\u7684\u5185\u7f6e\u51fd\u6570\u7528\u4e8e\u589e\u5220\u6539\u67e5\u7b49\u64cd\u4f5c\u6570\u636e\u5e93\u3002\u8be6\u60c5\u8bf7\u53c2\u8003 Model \u7684\u4f7f\u7528 \u6211\u4eec\u4e3e\u51e0\u4e2a\u4f8b\u5b50\uff0c\u6539\u5199 main.cpp \u5982\u4e0b: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 // main.cpp #include <IWebCore> #include \"UserTable.h\" #include \"UserModel.h\" int main ( int argc , char * argv []) { IWebApplication app ( argc , argv ); UserModel model ; UserTable table1 ; table1 . name = \"yuekeyuan\" ; model . insert ( table1 ); qDebug () << table1 ; UserTable table2 ; table2 . name = \"zhiyongfei\" ; model . insert ( table2 ); qDebug () << model . count (); qDebug () << model . findAll (); model . deleted ( table1 ); qDebug () << model . count (); qDebug () << model . findAll (); return app . exec (); } \u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\uff0c\u63d2\u5165\u4e24\u6761\u6570\u636e\uff0c \u5e76\u4e14\u5220\u9664\u5176\u4e2d\u7684\u4e00\u6761\uff0c\u76f8\u5173\u7684\u8f93\u51fa\u5982\u4e0b\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 00 : 35 : 57 : Starting E : \\ project \\ cpp \\ IWeb \\ build - IWeb - Desktop_Qt_5_14_2_MSVC2017_32bit - Debug \\ demo \\ OrmDemo \\ debug \\ OrmDemo . exe ... _____ _ _ _ _____ | _ _ || | | | | | / __ \\ | | | | | | ___ | | __ | / \\ / ___ _ __ ___ | | | |/ \\ | | / _ \\ | ' _ \\ | | / _ \\ | ' __ |/ _ \\ _ | | _ \\ / \\ /| __ /| | _ ) || \\ __ / \\ | ( _ ) || | | __ / \\ ___ / \\ / \\ / \\ ___ || _ . __ / \\ ____ / \\ ___ / | _ | \\ ___ | Load SystemEnvironment [ \u221a ] Auto Load Resource Task Finish [ \u221a ] Database At Class : webCore :: IOrmDataSource , At Connection : default , At Db : SqliteDatabase . db , Opened \"select id from UserTable where rowid = :rowid\" { \":rowid\" : 1 } \"insert into UserTable ( id, name, country ) values ( :id, :name, :country ) \" { \":country\" : \"CHINA\" , \":id\" : null , \":name\" : \"yuekeyuan\" } { \"country\" : \"CHINA\" , \"id\" : 1 , \"name\" : \"yuekeyuan\" } \"select id from UserTable where rowid = :rowid\" { \":rowid\" : 2 } \"insert into UserTable ( id, name, country ) values ( :id, :name, :country ) \" { \":country\" : \"CHINA\" , \":id\" : null , \":name\" : \"zhiyongfei\" } { \"country\" : \"CHINA\" , \"id\" : 2 , \"name\" : \"zhiyongfei\" } \"SELECT COUNT(1) FROM UserTable\" 2 \"SELECT * FROM UserTable\" [{ \"country\" : \"CHINA\" , \"id\" : 1 , \"name\" : \"yuekeyuan\" },{ \"country\" : \"CHINA\" , \"id\" : 2 , \"name\" : \"zhiyongfei\" }] \"DELETE FROM UserTable WHERE id = :id\" { \":id\" : 1 } \"SELECT COUNT(1) FROM UserTable\" 1 \"SELECT * FROM UserTable\" [{ \"country\" : \"CHINA\" , \"id\" : 2 , \"name\" : \"zhiyongfei\" }] \u55ef\uff0c\u5f88\u5927\u7684\u4e00\u7fa4\u4e1c\u897f\uff0c\u4e0d\u8fc7\u8f93\u51fa\u662f\u6b63\u786e\u7684\u3002\u4e3a\u4e86\u7b80\u5316\u8f93\u51fa\uff0c\u6211\u4eec\u5148\u5c4f\u853d\u6389 sql \u4fe1\u606f\uff0c\u518d\u67e5\u770b\u4e00\u904d \u5728 main \u51fd\u6570\u524d\u9762\u5199\u4e0a: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 // main.cpp #include <IWebCore> #include \"UserTable.h\" #include \"UserModel.h\" $EnableSqlInfoPrint ( false ) int main ( int argc , char * argv []) { IWebApplication app ( argc , argv ); UserModel model ; ..... } \u6ce8\u610f\u7b2c7 \u884c\uff0c\u6211\u4eec\u5df2\u7ecf\u7981\u6389 sql info\u4e86\uff0c\u5f53\u6211\u4eec\u518d\u6b21\u8fd0\u884c\u4ee3\u7801\u65f6\uff0c\u8f93\u51fa\u5982\u4e0b: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 _____ _ _ _ _____ |_ _|| | | | | | / __ \\ | | | | | | ___ | |__ | / \\/ ___ _ __ ___ | | | |/\\| | / _ \\| '_ \\ | | / _ \\ | '__|/ _ \\ _| |_ \\ /\\ /| __/| |_) || \\__/\\| (_) || | | __/ \\___/ \\/ \\/ \\___||_.__/ \\____/ \\___/ |_| \\___| Load SystemEnvironment [\u221a] Auto Load Resource Task Finish [\u221a] Database At Class: webCore::IOrmDataSource, At Connection: default, At Db: SqliteDatabase.db, Opened {\"country\":\"CHINA\",\"id\":3,\"name\":\"yuekeyuan\"} {\"country\":\"CHINA\",\"id\":4,\"name\":\"zhiyongfei\"} 3 [{\"country\":\"CHINA\",\"id\":2,\"name\":\"zhiyongfei\"},{\"country\":\"CHINA\",\"id\":3,\"name\":\"yuekeyuan\"},{\"country\":\"CHINA\",\"id\":4,\"name\":\"zhiyongfei\"}] 2 [{\"country\":\"CHINA\",\"id\":2,\"name\":\"zhiyongfei\"},{\"country\":\"CHINA\",\"id\":4,\"name\":\"zhiyongfei\"}] \u6570\u636e\u5e93\u91cc\u7684\u7ed3\u679c\u5982\u4e0b: \u55ef\uff0c\u4e00\u5207\u90fd\u662f\u5bf9\u7684,\u521a\u521a\u597d\u3002\uff08\u4e0a\u9762\u6700\u7ec8\u8f93\u51fa\u4e24\u6761\u6570\u636e\uff0c\u662f\u56e0\u4e3a \u4ee3\u7801\u6267\u884c\u4e86\u4e24\u6b21\uff09 \u73b0\u5728 orm \u7684\u9e1f\u77b0\u5df2\u7ecf\u5b8c\u6210\u3002\u63a5\u4e0b\u6765\u4f60\u53ef\u4ee5\u6df1\u5165\u4e86\u89e3: bean table database orm","title":"Orm \u7b80\u4ecb"},{"location":"orm/introduction/#orm","text":"orm \u5305\u62ec\u4e86 bean table, view, model \u548c\u6570\u636e\u5e93\u7b49\u4e00\u7cfb\u5217\u7684\u5185\u5bb9\uff0c\u76ee\u7684\u662f\u4f7f\u5f00\u53d1\u8005\u65b9\u4fbf\u7684\u5bf9\u6570\u636e\u8fdb\u884c\u64cd\u4f5c\uff0c\u4ee5\u53ca\u4f7f\u7528\u6570\u636e\u5e93\u8fdb\u884c\u589e\u5220\u6539\u67e5 \u4e0b\u9762\u6211\u4eec\u5f00\u59cb\u4e00\u4e2a\u4f8b\u5b50 \u9996\u5148\u6211\u4eec\u521b\u5efa\u4e00\u4e2a IWebCore \u5e94\u7528\u3002\u5173\u4e8e\u5982\u4f55\u521b\u5efaIWebCore\u5e94\u7528\uff0c\u53c2\u8003 IWebCore\u4f7f\u7528\u65b9\u5f0f","title":"Orm \u7b80\u4ecb"},{"location":"orm/introduction/#bean","text":"\u5728\u9879\u76ee\u5f53\u4e2d\uff0c\u6211\u4eec\u521b\u5efa\u4e00\u4e2aUserBean, \u5934\u6587\u4ef6\u5982\u4e0b: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 // UserBean.h #pragma once #include <IWebCore> class UserBean : public IBeanInterface < UserBean > { Q_GADGET $AsBean ( UserBean ) public : UserBean (); $BeanField ( int , age ); $BeanFieldDeclare ( QString , name ) QString name ; $BeanFieldDeclare ( QString , country ) QString country = \"CHINA\" ; }; bean \u7684\u5b9a\u4e49\u9700\u8981\uff1a \u4ee5 public \u65b9\u5f0f\u7ee7\u627f IBeanInterface \u4f7f\u7528 Q_GADGET \u548c $AsBean(klassName) \u4e24\u4e2a\u5b8f \u5b57\u6bb5\u7684\u5b9a\u4e49\u4e5f\u6709\u4e24\u79cd\u65b9\u5f0f\uff1a \u4f7f\u7528 $BeanField(type, name) \u6765\u5b9a\u4e49\u4e00\u4e2a\u5b57\u6bb5,\u5982\u4e0a\u9762\u7b2c13 \u884c \u4f7f\u7528 $BeanFieldDeclare(type, name) \u6765\u58f0\u660e\u4e00\u4e2a\u5b57\u6bb5\uff0c \u4e4b\u540e\u518d\u5199\u4e0a type name; \u5b9a\u4e49\u5b57\u6bb5\uff0c\u598215-16\u884c \u548c 18-19 \u884c\u6240\u793a\u3002 \u6e90\u6587\u4ef6\u5982\u4e0b\uff1a 1 2 3 4 5 6 // UserBean.cpp #include \"UserBean.h\" UserBean :: UserBean () { } \u6211\u4eec\u91cd\u65b0\u5199 main.cpp\uff0c\u7528\u4e8e\u8f93\u51faUserBean, \u4ee3\u7801\u5982\u4e0b\uff0c \u8f93\u51fa\u4e5f\u4e00\u8d77\u5199\u5230\u4ee3\u7801\u91cc\u9762\uff0c\u4f9b\u53c2\u8003 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 // main.cpp #include <IWebCore> #include \"UserBean.h\" int main ( int argc , char * argv []) { Q_UNUSED ( argc ) Q_UNUSED ( argv ) UserBean bean ; qDebug (). noquote () << bean ; // {\"age\":0,\"country\":\"CHINA\",\"name\":\"\"} qDebug (). noquote () << static_cast < QString > ( bean ); // {\"age\":0,\"country\":\"CHINA\",\"name\":\"\"} qDebug (). noquote () << bean . toString (); // {\"age\":0,\"country\":\"CHINA\",\"name\":\"\"} qDebug (). noquote () << bean . toJson (); // QJsonObject({\"age\":0,\"country\":\"CHINA\",\"name\":\"\"}) qDebug (). noquote () << bean . toVariantMap (); // QMap((age, QVariant(int, 0))(country, QVariant(QString, CHINA))(name, QVariant(QString, ))) bean . age = 27 ; bean . name = \"yuekeyuan\" ; QJsonObject json = bean . toJson (); qDebug (). noquote () << json ; // QJsonObject({\"age\":27,\"country\":\"CHINA\",\"name\":\"yuekeyuan\"}) auto bean1 = UserBean :: fromJson ( json ); qDebug (). noquote () << ( bean == bean1 ) << bean1 ; // true {\"age\":27,\"country\":\"CHINA\",\"name\":\"yuekeyuan\"} bool convertOk ; auto bean2 = IConvertUtil :: toBean < UserBean > ( json , & convertOk ); qDebug (). noquote () << convertOk << ( bean == bean2 ) << bean2 ; // true true {\"age\":27,\"country\":\"CHINA\",\"name\":\"yuekeyuan\"} } \u4e0a\u9762\u662f\u4e00\u4e2a bean \u7684\u4e00\u4e9b\u652f\u6301\u65b9\u6cd5\u5c55\u793a\u3002bean \u5185\u7f6e\u65b9\u6cd5\u5f88\u591a\uff0c \u60f3\u5177\u4f53\u4e86\u89e3\u53ef\u4ee5\u53c2\u8003 Bean \u3002","title":"Bean \u7684\u521b\u5efa"},{"location":"orm/introduction/#table","text":"Table \u662f\u7ee7\u627f\u4e8e Bean \u5e76\u6dfb\u52a0\u4e00\u4e9b\u6570\u636e\u5e93\u8868\u76f8\u5173\u7684\u5185\u5bb9 \u4e0b\u9762\u6211\u4eec\u540c\u6837\u521b\u5efa\u4e00\u4e2a UserTable \u6765\u5c55\u793a \u4ee3\u7801 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 // UserTable.h #pragma once #include <IWebCore> class UserTable : public IOrmTableInterface < UserTable > { Q_GADGET $AsTable ( UserTable ) public : UserTable (); $AutoGenerate ( id ) $PrimaryKey ( id ) $Column ( int64_t , id ); $Column ( QString , name ); $ColumnDeclare ( QString , country ); QString country { \"CHINA\" }; }; 1 2 3 4 5 6 // UserTable.cpp #include \"UserTable.h\" UserTable :: UserTable () { } Table \u7684\u5b9a\u4e49\u548c Bean \u7684\u5b9a\u4e49\u5f88\u76f8\u4f3c Table \u4ee5 public \u65b9\u5f0f \u7ee7\u627f IOrmTableInterface. \u4f7f\u7528 Q_GADGET \u548c $AsTable(klassName) \u6807\u6ce8\u7c7b \u6709\u4e24\u79cd \u65b9\u5f0f\u5b9a\u4e49\u4e00\u4e2a\u5b57\u6bb5\uff1a \u4ee5 $Column(type, name) \u5b9a\u4e49\u4e00\u4e2a\u5b57\u6bb5\uff0c \u5982 \u7b2c15\u884c \u4ee5 $ColumnDeclare(type, name) \u58f0\u660e\u4e00\u4e2a\u5b57\u6bb5\uff0c \u5e76 \u4ee5 type name; \u7684\u65b9\u5f0f\u5b9a\u4e49\u5b57\u6bb5\u3002\u5982 19-20 \u884c\u3002 \u540c\u6837\u6211\u4eec\u770b\u5230 13\u884c\uff0c 14\u884c\uff0c\u8fd9\u662f\u5b9a\u4e49\u4e00\u4e2a \u4e3b\u952e\u7684\u6807\u914d\u3002 $PrimaryKey(name) \u5b9a\u4e49 name \u5b57\u6bb5\u662f\u4e00\u4e2a \u4e3b\u952e\u5b57\u6bb5\u3002 $AutoGenerate(name) \u5b9a\u4e49\u4e3b\u952ename \u7684\u4ea7\u751f\u65b9\u5f0f\u3002 \u5728\u8fd9\u4e9b\u5b8f\u4e4b\u5916\uff0c\u8fd8\u6709\u4e00\u4e9b\u5b8f $NotNull(name) $Unique(name) $SqlType(name, sqlType)","title":"Table \u7684\u521b\u5efa"},{"location":"orm/introduction/#database","text":"IWebOrm \u5305\u88c5\u4e86 Qt \u7684 \u5173\u7cfb\u578b\u6570\u636e\u5e93\uff0c\u5e76\u4f7f\u5b83\u66f4\u597d\u7528\u3002\u65b9\u4fbf\u8d77\u89c1\uff0c\u6211\u4eec\u521b\u5efa\u4e00\u4e2a Sqlite \u7684\u6570\u636e\u5e93\uff1a \u521b\u5efa SqliteDataBase \u5982\u4e0b\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 // SqliteDatabase.h #pragma once #include <IWebCore> class SqliteDatabase : public IOrmDatabaseInterface < SqliteDatabase > { $AsDatabase ( SqliteDatabase ) public : SqliteDatabase (); virtual IOrmDataSource configDataSource () final ; virtual void registerTables () final ; }; database \u7684\u521b\u5efa\u9700\u8981\u4ee5 public \u65b9\u5f0f\u7ee7\u627f IOrmDatabaseInterface \u4f7f\u7528 $AsDatabase(klassName) \u6765\u6807\u8bb0\u7c7b\u4e3a \u4e00\u4e2a Database\u7c7b \u91cd\u8f7d configDataSource \u548c registerTables \u4e24\u4e2a\u51fd\u6570\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 // SqliteDatabase.cpp #include \"SqliteDatabase.h\" #include \"UserTable.h\" SqliteDatabase :: SqliteDatabase () { } IOrmDataSource SqliteDatabase :: configDataSource () { IOrmDataSource source ; source . driverName = \"QSQLITE\" ; source . databaseName = \"SqliteDatabase.db\" ; return source ; } void SqliteDatabase :: registerTables () { registerTable < UserTable > (); } configDataSource \u8fd4\u56de\u4e00\u4e2a\u5c01\u88c5\u597d\u7684 dataSource \u7528\u4e8e\u521b\u5efa database registerTables \u6ce8\u518c UserBean\u3002 \u8fd9\u91cc\u7684\u6ce8\u518c\u4f1a\u68c0\u67e5\u6570\u636e\u5e93\u4e2d\u662f\u5426\u6709 UserTable, \u5982\u679c\u6ca1\u6709\u7684\u5316\uff0c\u6839\u636e\u4e8e table \u7684\u5b9a\u4e49\u751f\u6210\u521b\u5efa table \u7684sql\u3002\u5f53\u7136\uff0c\u5f00\u53d1\u8005\u4e5f\u53ef\u4ee5\u5728 registerTable \u51fd\u6570\u4e2d\u4f20\u5165 \u4e00\u4e2aQString \u7c7b\u578b\u7684sql \u7528\u4e8e\u521b\u5efa sql\u3002 \u73b0\u5728\u6211\u4eec\u4fee\u6539 main.cpp \u5230\u5982\u4e0b\u6a21\u578b\uff1a 1 2 3 4 5 6 7 8 9 10 11 // main.cpp #include <IWebCore> #include \"UserBean.h\" int main ( int argc , char * argv []) { IWebApplication app ( argc , argv ); return app . exec (); } \u8fd0\u884c\u4ee3\u7801\uff0c\u4f1a\u6709\u5982\u4e0b\u8f93\u51fa\uff1a _____ _ _ _ _____ |_ _|| | | | | | / __ \\ | | | | | | ___ | |__ | / \\/ ___ _ __ ___ | | | |/\\| | / _ \\| '_ \\ | | / _ \\ | '__|/ _ \\ _| |_ \\ /\\ /| __/| |_) || \\__/\\| (_) || | | __/ \\___/ \\/ \\/ \\___||_.__/ \\____/ \\___/ |_| \\___| Load SystemEnvironment [\u221a] Auto Load Resource Task Finish [\u221a] Database At Class: webCore::IOrmDataSource, At Connection: default, At Db: SqliteDatabase.db, Opened \u770b\u89c1\u5728\u7b2c10\u884c\uff0c Database \u5df2\u7ecf\u521b\u5efa\u3002 \u6211\u4eec\u6253\u5f00 SqliteDatabase.db \u67e5\u770b\u6570\u636e\u5e93\u5982\u4e0b\uff1a \u770b\u89c1 \u6570\u636e\u8868 UserTable \u5df2\u7ecf\u81ea\u52a8\u521b\u5efa\u3002","title":"DataBase \u7684\u521b\u5efa"},{"location":"orm/introduction/#orm-model","text":"\u73b0\u5728\u5df2\u7ecf\u521b\u5efa\u6570\u636e\u8868\u548c\u6570\u636e\u5e93\uff0c\u6211\u4eec\u5728\u521b\u5efa model \u7528\u4e8e\u64cd\u7eb5\u6570\u636e\u8868\u548c\u6570\u636e\u5e93 \u521b\u5efa UserModel \u5982\u4e0b\uff1a 1 2 3 4 5 6 7 8 9 10 11 // UserModel.h #pragma once #include <IWebCore> #include \"UserTable.h\" class UserModel : public IOrmTableModelInterface < UserTable > { public : UserModel (); }; 1 2 3 4 5 6 // UserModel.cpp #include \"UserModel.h\" UserModel :: UserModel () { } \u55ef\uff0c\u521b\u5efa\u4e00\u4e2amodel \u5c31\u662f\u5982\u6b64\u7b80\u5355\uff0c\u4ee5 public \u7684\u65b9\u5f0f\u7ee7\u627f IOrmTableModelInterface \u5e76\u4e14\u4f20\u5165\u8981\u64cd\u4f5c\u7684Table \u7c7b\u578b\uff0c \u5982\u7b2c7\u884c\u6240\u793a\uff0c\u4e00\u4e2a model \u5c31\u521b\u5efa\u53f7\u4e86\u3002 model \u63d0\u4f9b\u65b9\u4fbf\u7684\u5185\u7f6e\u51fd\u6570\u7528\u4e8e\u589e\u5220\u6539\u67e5\u7b49\u64cd\u4f5c\u6570\u636e\u5e93\u3002\u8be6\u60c5\u8bf7\u53c2\u8003 Model \u7684\u4f7f\u7528 \u6211\u4eec\u4e3e\u51e0\u4e2a\u4f8b\u5b50\uff0c\u6539\u5199 main.cpp \u5982\u4e0b: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 // main.cpp #include <IWebCore> #include \"UserTable.h\" #include \"UserModel.h\" int main ( int argc , char * argv []) { IWebApplication app ( argc , argv ); UserModel model ; UserTable table1 ; table1 . name = \"yuekeyuan\" ; model . insert ( table1 ); qDebug () << table1 ; UserTable table2 ; table2 . name = \"zhiyongfei\" ; model . insert ( table2 ); qDebug () << model . count (); qDebug () << model . findAll (); model . deleted ( table1 ); qDebug () << model . count (); qDebug () << model . findAll (); return app . exec (); } \u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\uff0c\u63d2\u5165\u4e24\u6761\u6570\u636e\uff0c \u5e76\u4e14\u5220\u9664\u5176\u4e2d\u7684\u4e00\u6761\uff0c\u76f8\u5173\u7684\u8f93\u51fa\u5982\u4e0b\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 00 : 35 : 57 : Starting E : \\ project \\ cpp \\ IWeb \\ build - IWeb - Desktop_Qt_5_14_2_MSVC2017_32bit - Debug \\ demo \\ OrmDemo \\ debug \\ OrmDemo . exe ... _____ _ _ _ _____ | _ _ || | | | | | / __ \\ | | | | | | ___ | | __ | / \\ / ___ _ __ ___ | | | |/ \\ | | / _ \\ | ' _ \\ | | / _ \\ | ' __ |/ _ \\ _ | | _ \\ / \\ /| __ /| | _ ) || \\ __ / \\ | ( _ ) || | | __ / \\ ___ / \\ / \\ / \\ ___ || _ . __ / \\ ____ / \\ ___ / | _ | \\ ___ | Load SystemEnvironment [ \u221a ] Auto Load Resource Task Finish [ \u221a ] Database At Class : webCore :: IOrmDataSource , At Connection : default , At Db : SqliteDatabase . db , Opened \"select id from UserTable where rowid = :rowid\" { \":rowid\" : 1 } \"insert into UserTable ( id, name, country ) values ( :id, :name, :country ) \" { \":country\" : \"CHINA\" , \":id\" : null , \":name\" : \"yuekeyuan\" } { \"country\" : \"CHINA\" , \"id\" : 1 , \"name\" : \"yuekeyuan\" } \"select id from UserTable where rowid = :rowid\" { \":rowid\" : 2 } \"insert into UserTable ( id, name, country ) values ( :id, :name, :country ) \" { \":country\" : \"CHINA\" , \":id\" : null , \":name\" : \"zhiyongfei\" } { \"country\" : \"CHINA\" , \"id\" : 2 , \"name\" : \"zhiyongfei\" } \"SELECT COUNT(1) FROM UserTable\" 2 \"SELECT * FROM UserTable\" [{ \"country\" : \"CHINA\" , \"id\" : 1 , \"name\" : \"yuekeyuan\" },{ \"country\" : \"CHINA\" , \"id\" : 2 , \"name\" : \"zhiyongfei\" }] \"DELETE FROM UserTable WHERE id = :id\" { \":id\" : 1 } \"SELECT COUNT(1) FROM UserTable\" 1 \"SELECT * FROM UserTable\" [{ \"country\" : \"CHINA\" , \"id\" : 2 , \"name\" : \"zhiyongfei\" }] \u55ef\uff0c\u5f88\u5927\u7684\u4e00\u7fa4\u4e1c\u897f\uff0c\u4e0d\u8fc7\u8f93\u51fa\u662f\u6b63\u786e\u7684\u3002\u4e3a\u4e86\u7b80\u5316\u8f93\u51fa\uff0c\u6211\u4eec\u5148\u5c4f\u853d\u6389 sql \u4fe1\u606f\uff0c\u518d\u67e5\u770b\u4e00\u904d \u5728 main \u51fd\u6570\u524d\u9762\u5199\u4e0a: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 // main.cpp #include <IWebCore> #include \"UserTable.h\" #include \"UserModel.h\" $EnableSqlInfoPrint ( false ) int main ( int argc , char * argv []) { IWebApplication app ( argc , argv ); UserModel model ; ..... } \u6ce8\u610f\u7b2c7 \u884c\uff0c\u6211\u4eec\u5df2\u7ecf\u7981\u6389 sql info\u4e86\uff0c\u5f53\u6211\u4eec\u518d\u6b21\u8fd0\u884c\u4ee3\u7801\u65f6\uff0c\u8f93\u51fa\u5982\u4e0b: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 _____ _ _ _ _____ |_ _|| | | | | | / __ \\ | | | | | | ___ | |__ | / \\/ ___ _ __ ___ | | | |/\\| | / _ \\| '_ \\ | | / _ \\ | '__|/ _ \\ _| |_ \\ /\\ /| __/| |_) || \\__/\\| (_) || | | __/ \\___/ \\/ \\/ \\___||_.__/ \\____/ \\___/ |_| \\___| Load SystemEnvironment [\u221a] Auto Load Resource Task Finish [\u221a] Database At Class: webCore::IOrmDataSource, At Connection: default, At Db: SqliteDatabase.db, Opened {\"country\":\"CHINA\",\"id\":3,\"name\":\"yuekeyuan\"} {\"country\":\"CHINA\",\"id\":4,\"name\":\"zhiyongfei\"} 3 [{\"country\":\"CHINA\",\"id\":2,\"name\":\"zhiyongfei\"},{\"country\":\"CHINA\",\"id\":3,\"name\":\"yuekeyuan\"},{\"country\":\"CHINA\",\"id\":4,\"name\":\"zhiyongfei\"}] 2 [{\"country\":\"CHINA\",\"id\":2,\"name\":\"zhiyongfei\"},{\"country\":\"CHINA\",\"id\":4,\"name\":\"zhiyongfei\"}] \u6570\u636e\u5e93\u91cc\u7684\u7ed3\u679c\u5982\u4e0b: \u55ef\uff0c\u4e00\u5207\u90fd\u662f\u5bf9\u7684,\u521a\u521a\u597d\u3002\uff08\u4e0a\u9762\u6700\u7ec8\u8f93\u51fa\u4e24\u6761\u6570\u636e\uff0c\u662f\u56e0\u4e3a \u4ee3\u7801\u6267\u884c\u4e86\u4e24\u6b21\uff09 \u73b0\u5728 orm \u7684\u9e1f\u77b0\u5df2\u7ecf\u5b8c\u6210\u3002\u63a5\u4e0b\u6765\u4f60\u53ef\u4ee5\u6df1\u5165\u4e86\u89e3: bean table database orm","title":"Orm Model \u7684\u521b\u5efa"},{"location":"orm/model_usage/","text":"Model \u7684\u4f7f\u7528 \u00b6","title":"Model \u7684\u4f7f\u7528"},{"location":"orm/model_usage/#model","text":"","title":"Model \u7684\u4f7f\u7528"},{"location":"others/name_regulation/","text":"\u547d\u540d\u89c4\u8303 \u00b6 \u547d\u540d\u89c4\u8303 \u5b8f\u5b9a\u4e49\u547d\u540d\u89c4\u8303 \u7c7b\u5b9a\u4e49\u547d\u540d\u89c4\u8303 - \u5355\u7eaf\u5b58\u50a8\u6570\u636e\u7684\u7c7b \u53ef\u4ee5\u89c6\u4e3a Impl \u7684\u4e00\u4e2a\u5b50\u96c6 \u5b8f\u5b9a\u4e49\u547d\u540d\u89c4\u8303 \u00b6 $AsXXXX $UseXXX \u4e0d\u80fd\u6709 \\$RegisterXXX \u548c \\$ConstructXXX \u7c7b\u5b9a\u4e49\u547d\u540d\u89c4\u8303 \u00b6 XXXInterface XXXWare IOrmTableWare IOrmViewWare \u7b49\u4e00\u4e9b\u4e0d\u518d\u7528 Interface \u6807\u8bb0\u7684\u5185\u5bb9 IOrmDialectWare XXXManage \u8fd9\u4e2a\u4f5c\u4e3a\u57fa\u7c7b\u548c\u9759\u6001\u7c7b,\u5b58\u50a8\u4e00\u4e9b\u7f16\u8bd1\u8fd0\u884c\u8fc7\u7a0b\u4e2d\u5b58\u50a8\u7684\u4e1c\u897f XXXResponseInterface XXXPreProcessor \u9884\u7f16\u8bd1\u9009\u9879 XXXUnit \u53ef\u4ee5\u5d4c\u5165\u5176\u4ed6\u7c7b\u4e2d\u505a\u8f85\u52a9\u7684\u5b50\u7c7b. // TODO: \u8fd9\u91cc\u9700\u8981\u601d\u8003\u662f\u53eb interface \u8fd8\u662f\u53eb Unit, \u6309\u7167\u9053\u7406\u662f interface, \u4f46\u4e00\u822c\u5b9e\u73b0\u90fd\u662f Unit // \u601d\u8003\u51fa\u6765\u4e86\uff0c \u8fd8\u662f\u6309\u7167 \u5e95\u5c42 Unit \u518d\u5c01\u88c5\u4e0a\u9762\u4e00\u5c42 interface. // \u7528\u6237\u81ea\u7136\u4e5f\u53ef\u4ee5\u4f7f\u7528 Unit, \u4e0d\u8fc7 Api \u63d0\u4f9b\u7684\u662f interface. \u4e24\u8005\u7684\u4f5c\u7528\u4e0d\u4e00\u6837 \u5173\u4e8e ArgumentParserInterface \u548c ArgumentParserUnit \u7684\u601d\u8003 TestXXX \u6d4b\u8bd5\u6587\u4ef6 XXXTable \u8868\u540d XXXBean bean XXXModel model XXXController controller XXXInterceptor XXXProcessor XXXImpl pimpl \u7ec4\u4ef6 XXXHelper \u4e3b\u7c7b\u7684\u5e2e\u52a9\u7c7b\uff0c\u9700\u8981static \u8c03\u7528\u7684\uff0c \u4f46\u662f\u548c Util \u4e0d\u592a\u50cf\uff0c \u548c Impl \u4e5f\u4e0d\u592a\u50cf \u540c\u6837\u7684 namespace xxxHelper \u8868\u793a \u4e5f\u662f\u4e3b\u7c7b\u7684\u5e2e\u52a9 \u540d\u5b57\u7a7a\u95f4\uff0c \u7528\u4e8e\u5e2e\u52a9\u4e3b\u7c7b\uff0c\u5b9e\u73b0\u529f\u80fd\uff0c\u4f18\u5316 Api \u7684\u5e03\u5c40\u3002 XXXRaw - \u5355\u7eaf\u5b58\u50a8\u6570\u636e\u7684\u7c7b \u53ef\u4ee5\u89c6\u4e3a Impl \u7684\u4e00\u4e2a\u5b50\u96c6 \u00b6 XXXXImplProxy \u8fd9\u4e2a\u5fc5\u987b\u4e3anamespace \uff0c\u76ee\u7684\u662f\u4ee3\u7406 Impl \u5728 template \u4e2d\u7684\u8c03\u7528\uff0c\u5728\u5934\u6587\u4ef6\u4e2d \u9690\u85cf Impl.h","title":"Name regulation"},{"location":"others/name_regulation/#_1","text":"\u547d\u540d\u89c4\u8303 \u5b8f\u5b9a\u4e49\u547d\u540d\u89c4\u8303 \u7c7b\u5b9a\u4e49\u547d\u540d\u89c4\u8303 - \u5355\u7eaf\u5b58\u50a8\u6570\u636e\u7684\u7c7b \u53ef\u4ee5\u89c6\u4e3a Impl \u7684\u4e00\u4e2a\u5b50\u96c6","title":"\u547d\u540d\u89c4\u8303"},{"location":"others/name_regulation/#_2","text":"$AsXXXX $UseXXX \u4e0d\u80fd\u6709 \\$RegisterXXX \u548c \\$ConstructXXX","title":"\u5b8f\u5b9a\u4e49\u547d\u540d\u89c4\u8303"},{"location":"others/name_regulation/#_3","text":"XXXInterface XXXWare IOrmTableWare IOrmViewWare \u7b49\u4e00\u4e9b\u4e0d\u518d\u7528 Interface \u6807\u8bb0\u7684\u5185\u5bb9 IOrmDialectWare XXXManage \u8fd9\u4e2a\u4f5c\u4e3a\u57fa\u7c7b\u548c\u9759\u6001\u7c7b,\u5b58\u50a8\u4e00\u4e9b\u7f16\u8bd1\u8fd0\u884c\u8fc7\u7a0b\u4e2d\u5b58\u50a8\u7684\u4e1c\u897f XXXResponseInterface XXXPreProcessor \u9884\u7f16\u8bd1\u9009\u9879 XXXUnit \u53ef\u4ee5\u5d4c\u5165\u5176\u4ed6\u7c7b\u4e2d\u505a\u8f85\u52a9\u7684\u5b50\u7c7b. // TODO: \u8fd9\u91cc\u9700\u8981\u601d\u8003\u662f\u53eb interface \u8fd8\u662f\u53eb Unit, \u6309\u7167\u9053\u7406\u662f interface, \u4f46\u4e00\u822c\u5b9e\u73b0\u90fd\u662f Unit // \u601d\u8003\u51fa\u6765\u4e86\uff0c \u8fd8\u662f\u6309\u7167 \u5e95\u5c42 Unit \u518d\u5c01\u88c5\u4e0a\u9762\u4e00\u5c42 interface. // \u7528\u6237\u81ea\u7136\u4e5f\u53ef\u4ee5\u4f7f\u7528 Unit, \u4e0d\u8fc7 Api \u63d0\u4f9b\u7684\u662f interface. \u4e24\u8005\u7684\u4f5c\u7528\u4e0d\u4e00\u6837 \u5173\u4e8e ArgumentParserInterface \u548c ArgumentParserUnit \u7684\u601d\u8003 TestXXX \u6d4b\u8bd5\u6587\u4ef6 XXXTable \u8868\u540d XXXBean bean XXXModel model XXXController controller XXXInterceptor XXXProcessor XXXImpl pimpl \u7ec4\u4ef6 XXXHelper \u4e3b\u7c7b\u7684\u5e2e\u52a9\u7c7b\uff0c\u9700\u8981static \u8c03\u7528\u7684\uff0c \u4f46\u662f\u548c Util \u4e0d\u592a\u50cf\uff0c \u548c Impl \u4e5f\u4e0d\u592a\u50cf \u540c\u6837\u7684 namespace xxxHelper \u8868\u793a \u4e5f\u662f\u4e3b\u7c7b\u7684\u5e2e\u52a9 \u540d\u5b57\u7a7a\u95f4\uff0c \u7528\u4e8e\u5e2e\u52a9\u4e3b\u7c7b\uff0c\u5b9e\u73b0\u529f\u80fd\uff0c\u4f18\u5316 Api \u7684\u5e03\u5c40\u3002 XXXRaw","title":"\u7c7b\u5b9a\u4e49\u547d\u540d\u89c4\u8303"},{"location":"others/name_regulation/#-impl","text":"XXXXImplProxy \u8fd9\u4e2a\u5fc5\u987b\u4e3anamespace \uff0c\u76ee\u7684\u662f\u4ee3\u7406 Impl \u5728 template \u4e2d\u7684\u8c03\u7528\uff0c\u5728\u5934\u6587\u4ef6\u4e2d \u9690\u85cf Impl.h","title":"- \u5355\u7eaf\u5b58\u50a8\u6570\u636e\u7684\u7c7b \u53ef\u4ee5\u89c6\u4e3a Impl \u7684\u4e00\u4e2a\u5b50\u96c6"},{"location":"roadmap/introduction/","text":"\u8def\u7ebf\u56fe \u00b6 \u751f\u6210\u5de5\u5177 \u00b6 \u9879\u76ee\u751f\u6210\u5de5\u5177 \u00b6 Http \u8fd0\u884c\u6a21\u578b\u91cd\u6784 \u00b6 epoll/IOCP \u652f\u6301 \u00b6 \u66f4\u52a0\u7075\u6d3b\u7684 route \u6a21\u5757\uff0c \u4ee5\u53ca ControllerManage \u00b6 orm \u00b6 TableView \u548c TableViewModel \u7684\u652f\u6301 \u00b6 \u66f4\u591a\u7684 Orm dialect \u652f\u6301\u3002 \u00b6 NoSql \u652f\u6301 \u00b6 Redis \u652f\u6301 \u00b6 \u5176\u4ed6NoSql \u652f\u6301 \u00b6 \u6a21\u5757 \u00b6 log \u6a21\u5757 \u00b6 middle ware \u6a21\u5757 \u00b6 Doc \u6a21\u5757, \uff08\u53c2\u8003FastApi\uff09 \u00b6 \u63d2\u4ef6 \u00b6 \u5728\u91cd\u6784 http \u7684\u57fa\u7840\u4e0a\uff0c\u5b9e\u73b0 intercept \u548c process,\u5b9e\u73b0 http1.1\u4e2d\u6240\u9700\u8981\u7684\u6a21\u5757\uff0c\u6bd4\u5982 cookie, zip, date check, range \u7b49\u63d2\u4ef6 \u5305\u7ba1\u7406\u6a21\u5757 \u00b6 \u5b9e\u73b0 cmake \u7684\u652f\u6301 \u00b6 \u4ee5 IWebCore \u4e3a\u62f3\u5934\u4ea7\u54c1\uff0c\u5b9e\u73b0\u7c7b\u4f3c maven \u6216\u8005 npm\u4e00\u6837\u7684\u5305\u7ba1\u7406\u7cfb\u7edf\u3002 \u00b6","title":"\u8def\u7ebf\u56fe"},{"location":"roadmap/introduction/#_1","text":"","title":"\u8def\u7ebf\u56fe"},{"location":"roadmap/introduction/#_2","text":"","title":"\u751f\u6210\u5de5\u5177"},{"location":"roadmap/introduction/#_3","text":"","title":"\u9879\u76ee\u751f\u6210\u5de5\u5177"},{"location":"roadmap/introduction/#http","text":"","title":"Http \u8fd0\u884c\u6a21\u578b\u91cd\u6784"},{"location":"roadmap/introduction/#epolliocp","text":"","title":"epoll/IOCP \u652f\u6301"},{"location":"roadmap/introduction/#route-controllermanage","text":"","title":"\u66f4\u52a0\u7075\u6d3b\u7684 route \u6a21\u5757\uff0c \u4ee5\u53ca ControllerManage"},{"location":"roadmap/introduction/#orm","text":"","title":"orm"},{"location":"roadmap/introduction/#tableview-tableviewmodel","text":"","title":"TableView \u548c TableViewModel \u7684\u652f\u6301"},{"location":"roadmap/introduction/#orm-dialect","text":"","title":"\u66f4\u591a\u7684 Orm dialect \u652f\u6301\u3002"},{"location":"roadmap/introduction/#nosql","text":"","title":"NoSql \u652f\u6301"},{"location":"roadmap/introduction/#redis","text":"","title":"Redis \u652f\u6301"},{"location":"roadmap/introduction/#nosql_1","text":"","title":"\u5176\u4ed6NoSql \u652f\u6301"},{"location":"roadmap/introduction/#_4","text":"","title":"\u6a21\u5757"},{"location":"roadmap/introduction/#log","text":"","title":"log \u6a21\u5757"},{"location":"roadmap/introduction/#middle-ware","text":"","title":"middle ware \u6a21\u5757"},{"location":"roadmap/introduction/#doc-fastapi","text":"","title":"Doc \u6a21\u5757, \uff08\u53c2\u8003FastApi\uff09"},{"location":"roadmap/introduction/#_5","text":"\u5728\u91cd\u6784 http \u7684\u57fa\u7840\u4e0a\uff0c\u5b9e\u73b0 intercept \u548c process,\u5b9e\u73b0 http1.1\u4e2d\u6240\u9700\u8981\u7684\u6a21\u5757\uff0c\u6bd4\u5982 cookie, zip, date check, range \u7b49\u63d2\u4ef6","title":"\u63d2\u4ef6"},{"location":"roadmap/introduction/#_6","text":"","title":"\u5305\u7ba1\u7406\u6a21\u5757"},{"location":"roadmap/introduction/#cmake","text":"","title":"\u5b9e\u73b0 cmake \u7684\u652f\u6301"},{"location":"roadmap/introduction/#iwebcore-maven-npm","text":"","title":"\u4ee5IWebCore \u4e3a\u62f3\u5934\u4ea7\u54c1\uff0c\u5b9e\u73b0\u7c7b\u4f3c maven \u6216\u8005 npm\u4e00\u6837\u7684\u5305\u7ba1\u7406\u7cfb\u7edf\u3002"},{"location":"task/task/","text":"Task \u00b6","title":"Task"},{"location":"task/task/#task","text":"","title":"Task"},{"location":"tips/controller_function_parameter/","text":"controller \u51fd\u6570\u53c2\u6570 \u00b6","title":"Controller function parameter"},{"location":"tips/controller_function_parameter/#controller","text":"","title":"controller \u51fd\u6570\u53c2\u6570"},{"location":"tips/how_to_use_iwebcore/","text":"\u5982\u4f55\u4f7f\u7528 IWebCore \u00b6 \u8bb2\u89e3 IWebCore \u7684\u4f7f\u7528\u65b9\u6cd5\uff0c\u914d\u7f6e\u65b9\u5f0f","title":"\u5982\u4f55\u4f7f\u7528 IWebCore"},{"location":"tips/how_to_use_iwebcore/#iwebcore","text":"\u8bb2\u89e3 IWebCore \u7684\u4f7f\u7528\u65b9\u6cd5\uff0c\u914d\u7f6e\u65b9\u5f0f","title":"\u5982\u4f55\u4f7f\u7528 IWebCore"},{"location":"tips/macro_annotation/","text":"\u5b8f\u6ce8\u89e3 \u00b6","title":"\u5b8f\u6ce8\u89e3"},{"location":"tips/macro_annotation/#_1","text":"","title":"\u5b8f\u6ce8\u89e3"},{"location":"tips/reflection_and_q_gadget/","text":"Qt \u53cd\u5c04\u4e0e Q_GADGET \u00b6 Q_OBJECT \u00b6 Q_GADGE \u00b6 IGadgetUnit \u00b6","title":"Qt \u53cd\u5c04\u4e0e Q_GADGET"},{"location":"tips/reflection_and_q_gadget/#qt-q_gadget","text":"","title":"Qt \u53cd\u5c04\u4e0e Q_GADGET"},{"location":"tips/reflection_and_q_gadget/#q_object","text":"","title":"Q_OBJECT"},{"location":"tips/reflection_and_q_gadget/#q_gadge","text":"","title":"Q_GADGE"},{"location":"tips/reflection_and_q_gadget/#igadgetunit","text":"","title":"IGadgetUnit"},{"location":"tips/runtime_assertion/","text":"\u8fd0\u884c\u65f6\u68c0\u67e5 \u00b6","title":"\u8fd0\u884c\u65f6\u68c0\u67e5"},{"location":"tips/runtime_assertion/#_1","text":"","title":"\u8fd0\u884c\u65f6\u68c0\u67e5"},{"location":"tips/static_initialize_register/","text":"\u9759\u6001\u521d\u59cb\u5316\u6ce8\u518c SIR \u00b6","title":"\u9759\u6001\u521d\u59cb\u5316\u6ce8\u518c SIR"},{"location":"tips/static_initialize_register/#sir","text":"","title":"\u9759\u6001\u521d\u59cb\u5316\u6ce8\u518c SIR"}]}